/*global I18n:true */

// Instantiate the object
var I18n = I18n || {};

// Set default locale to english
I18n.defaultLocale = "en";

// Set default pluralization rule
I18n.pluralizationRules = {
  en: function(n) {
    return n === 0 ? ["zero", "none", "other"] : n === 1 ? "one" : "other";
  }
};

// Set current locale to null
I18n.locale = null;
I18n.fallbackLocale = null;

// Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.
I18n.PLACEHOLDER = /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm;

I18n.SEPARATOR = ".";

I18n.noFallbacks = false;

I18n.isValidNode = function(obj, node, undefined) {
  return obj[node] !== null && obj[node] !== undefined;
};

I18n.lookup = function(scope, options) {
  options = options || {};

  var translations = this.prepareOptions(I18n.translations),
      locale = options.locale || I18n.currentLocale(),
      messages = translations[locale] || {},
      currentScope;

  options = this.prepareOptions(options);

  if (typeof scope === "object") {
    scope = scope.join(this.SEPARATOR);
  }

  if (options.scope) {
    scope = options.scope.toString() + this.SEPARATOR + scope;
  }

  var originalScope = scope;
  scope = scope.split(this.SEPARATOR);

  if (scope.length > 0 && scope[0] !== "js") {
    scope.unshift("js");
  }

  while (messages && scope.length > 0) {
    currentScope = scope.shift();
    messages = messages[currentScope];
  }

  if (messages === undefined && this.extras && this.extras[locale]) {
    messages = this.extras[locale];
    scope = originalScope.split(this.SEPARATOR);

    while (messages && scope.length > 0) {
      currentScope = scope.shift();
      messages = messages[currentScope];
    }
  }

  if (messages === undefined) {
    messages = options.defaultValue;
  }

  return messages;
};

// Merge serveral hash options, checking if value is set before
// overwriting any value. The precedence is from left to right.
//
//   I18n.prepareOptions({name: "John Doe"}, {name: "Mary Doe", role: "user"});
//   #=> {name: "John Doe", role: "user"}
//
I18n.prepareOptions = function() {
  var options = {},
      opts,
      count = arguments.length;

  for (var i = 0; i < count; i++) {
    opts = arguments[i];

    if (!opts) {
      continue;
    }

    for (var key in opts) {
      if (!this.isValidNode(options, key)) {
        options[key] = opts[key];
      }
    }
  }

  return options;
};

I18n.interpolate = function(message, options) {
  options = this.prepareOptions(options);

  var matches = message.match(this.PLACEHOLDER),
      placeholder,
      value,
      name;

  if (!matches) { return message; }

  for (var i = 0; placeholder = matches[i]; i++) {
    name = placeholder.replace(this.PLACEHOLDER, "$1");

    if (typeof options[name] === "string") {
      // The dollar sign (`$`) is a special replace pattern, and `$&` inserts
      // the matched string. Thus dollars signs need to be escaped with the
      // special pattern `$$`, which inserts a single `$`.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter
      value = options[name].replace(/\$/g, "$$$$");
    } else {
      value = options[name];
    }

    if (!this.isValidNode(options, name)) {
      value = "[missing " + placeholder + " value]";
    }

    var regex = new RegExp(placeholder.replace(/\{/gm, "\\{").replace(/\}/gm, "\\}"));
    message = message.replace(regex, value);
  }

  return message;
};

I18n.translate = function(scope, options) {
  options = this.prepareOptions(options);
  options.needsPluralization = typeof options.count === "number";
  options.ignoreMissing = !this.noFallbacks;

  var translation = this.findTranslation(scope, options);

  if (!this.noFallbacks) {
    if (!translation && this.fallbackLocale) {
      options.locale = this.fallbackLocale;
      translation = this.findTranslation(scope, options);
    }

    options.ignoreMissing = false;

    if (!translation && this.currentLocale() !== this.defaultLocale) {
      options.locale = this.defaultLocale;
      translation = this.findTranslation(scope, options);
    }

    if (!translation && this.currentLocale() !== 'en') {
      options.locale = 'en';
      translation = this.findTranslation(scope, options);
    }
  }

  try {
    return this.interpolate(translation, options);
  } catch (error) {
    return this.missingTranslation(scope);
  }
};

I18n.findTranslation = function(scope, options) {
  var translation = this.lookup(scope, options);

  if (translation && options.needsPluralization) {
    translation = this.pluralize(translation, scope, options);
  }

  return translation;
};

I18n.toNumber = function(number, options) {
  options = this.prepareOptions(
    options,
    this.lookup("number.format"),
    {precision: 3, separator: this.SEPARATOR, delimiter: ",", strip_insignificant_zeros: false}
  );

  var negative = number < 0,
      string = Math.abs(number).toFixed(options.precision).toString(),
      parts = string.split(this.SEPARATOR),
      precision,
      buffer = [],
      formattedNumber;

  number = parts[0];
  precision = parts[1];

  while (number.length > 0) {
    buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));
    number = number.substr(0, number.length -3);
  }

  formattedNumber = buffer.join(options.delimiter);

  if (options.precision > 0) {
    formattedNumber += options.separator + parts[1];
  }

  if (negative) {
    formattedNumber = "-" + formattedNumber;
  }

  if (options.strip_insignificant_zeros) {
    var regex = {
        separator: new RegExp(options.separator.replace(/\./, "\\.") + "$"),
        zeros: /0+$/
    };

    formattedNumber = formattedNumber
      .replace(regex.zeros, "")
      .replace(regex.separator, "")
    ;
  }

  return formattedNumber;
};

I18n.toHumanSize = function(number, options) {
  var kb = 1024,
      size = number,
      iterations = 0,
      unit,
      precision;

  while (size >= kb && iterations < 4) {
    size = size / kb;
    iterations += 1;
  }

  if (iterations === 0) {
    unit = this.t("number.human.storage_units.units.byte", {count: size});
    precision = 0;
  } else {
    unit = this.t("number.human.storage_units.units." + [null, "kb", "mb", "gb", "tb"][iterations]);
    precision = (size - Math.floor(size) === 0) ? 0 : 1;
  }

  options = this.prepareOptions(
    options,
    {precision: precision, format: "%n%u", delimiter: ""}
  );

  number = this.toNumber(size, options);
  number = options.format
    .replace("%u", unit)
    .replace("%n", number)
  ;

  return number;
};

I18n.pluralizer = function(locale) {
  var pluralizer = this.pluralizationRules[locale];
  if (pluralizer !== undefined) return pluralizer;
  return this.pluralizationRules["en"];
};

I18n.findAndTranslateValidNode = function(keys, translation) {
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (this.isValidNode(translation, key)) return translation[key];
  }
  return null;
};

I18n.pluralize = function(translation, scope, options) {
  if (typeof translation !== "object") return translation;

  options = this.prepareOptions(options);
  var count = options.count.toString();

  var pluralizer = this.pluralizer(options.locale || this.currentLocale());
  var key = pluralizer(Math.abs(count));
  var keys = ((typeof key === "object") && (key instanceof Array)) ? key : [key];

  var message = this.findAndTranslateValidNode(keys, translation);

  if (message !== null || options.ignoreMissing) {
    return message;
  }

  return this.missingTranslation(scope, keys[0]);
};

I18n.missingTranslation = function(scope, key) {
  var message = '[' + this.currentLocale() + this.SEPARATOR + scope;
  if (key) { message += this.SEPARATOR + key; }
  return message + ']';
};

I18n.currentLocale = function() {
  return I18n.locale || I18n.defaultLocale;
};

I18n.enableVerboseLocalization = function() {
  var counter = 0;
  var keys = {};
  var t = I18n.t;

  I18n.noFallbacks = true;

  I18n.t = I18n.translate = function(scope, value){
    var current = keys[scope];
    if (!current) {
      current = keys[scope] = ++counter;
      var message = "Translation #" + current + ": " + scope;
      if (!_.isEmpty(value)) {
        message += ", parameters: " + JSON.stringify(value);
      }
      // eslint-disable-next-line no-console
      console.info(message);
    }
    return t.apply(I18n, [scope, value]) + " (#" + current + ")";
  };
};

I18n.enableVerboseLocalizationSession = function() {
  sessionStorage.setItem("verbose_localization", "true");
  I18n.enableVerboseLocalization();

  return 'Verbose localization is enabled. Close the browser tab to turn it off. Reload the page to see the translation keys.';
};

// shortcuts
I18n.t = I18n.translate;


MessageFormat = {locale: {}};
I18n._compiledMFs = {"topic.read_more_MF" : function(d){
var r = "";
r += "CÃ³ ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "UNREAD";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"0" : function(d){
var r = "";
return r;
},
"one" : function(d){
var r = "";
r += "is <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/unread'>1 unread</a> ";
return r;
},
"other" : function(d){
var r = "";
r += "are <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/unread'>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " unread</a> ";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "NEW";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"0" : function(d){
var r = "";
return r;
},
"one" : function(d){
var r = "";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_2 = "BOTH";
var k_2=d[lastkey_2];
var off_1 = 0;
var pf_1 = { 
"true" : function(d){
var r = "";
r += "and ";
return r;
},
"false" : function(d){
var r = "";
r += "is ";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_1[ k_2 ] || pf_1[ "other" ])( d );
r += " <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/new'>1 new</a> topic";
return r;
},
"other" : function(d){
var r = "";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_2 = "BOTH";
var k_2=d[lastkey_2];
var off_1 = 0;
var pf_1 = { 
"true" : function(d){
var r = "";
r += "and ";
return r;
},
"false" : function(d){
var r = "";
r += "are ";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_1[ k_2 ] || pf_1[ "other" ])( d );
r += " <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/new'>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " new</a> topics";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " remaining, or ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "CATEGORY";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"true" : function(d){
var r = "";
r += "browse other topics in ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["catLink"];
return r;
},
"false" : function(d){
var r = "";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["latestLink"];
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_0[ k_1 ] || pf_0[ "other" ])( d );
return r;
}, "posts_likes_MF" : function(d){
var r = "";
r += "\nChá»§ Äá» nÃ y cÃ³ ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "count";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "1 reply";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " replies";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "ratio";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"low" : function(d){
var r = "";
r += "with a high like to post ratio";
return r;
},
"med" : function(d){
var r = "";
r += "with a very high like to post ratio";
return r;
},
"high" : function(d){
var r = "";
r += "with an extremely high like to post ratio";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_0[ k_1 ] || pf_0[ "other" ])( d );
r += "\n";
return r;
}, "logs_error_rate_notice.reached_hour_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> â <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/hour";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/hour";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> reached site setting limit of ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/hour";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/hour";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "logs_error_rate_notice.reached_minute_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> â <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/minute";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/minute";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> reached site setting limit of ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/minute";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/minute";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "logs_error_rate_notice.exceeded_hour_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> â <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/hour";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/hour";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> exceeded site setting limit of ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/hour";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/hour";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "logs_error_rate_notice.exceeded_minute_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> â <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/minute";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/minute";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> exceeded site setting limit of ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " error/minute";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " errors/minute";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "flagging.delete_confirm_MF" : function(d){
var r = "";
r += "You are about to delete ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "POSTS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<b>1</b> post";
return r;
},
"other" : function(d){
var r = "";
r += "<b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> posts";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " and ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "TOPICS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<b>1</b> topic";
return r;
},
"other" : function(d){
var r = "";
r += "<b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> topics";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " from this user, remove their account, block signups from their IP address <b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["ip_address"];
r += "</b>, and add their email address <b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["email"];
r += "</b> to a permanent block list. Are you sure this user is really a spammer?";
return r;
}, "admin.user.delete_all_posts_confirm_MF" : function(d){
var r = "";
r += "You are about to delete ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "POSTS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "1 post";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " posts";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " and ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "TOPICS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "1 topic";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " topics";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["vi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". Are you sure?";
return r;
}};
MessageFormat.locale.vi = function ( n ) {
  return "other";
};

(function() {

  I18n.messageFormat = function(key, options) {
    var fn = I18n._compiledMFs[key];
    if (fn) {
      try {
        return fn(options);
      } catch(err) {
        return err.message;
      }
    } else {
      return 'Missing Key: ' + key;
    }
    return I18n._compiledMFs[key](options);
  };

})();

I18n.translations = {"vi":{"js":{"number":{"format":{"separator":".","delimiter":","},"human":{"storage_units":{"format":"%n %u","units":{"byte":{"other":"Bytes"},"gb":"GB","kb":"KB","mb":"MB","tb":"TB"}}},"short":{"thousands":"{{number}}k","millions":"{{number}}M"}},"dates":{"time":"HH:mm","time_short_day":"ddd, HH:mm","timeline_date":"MMM YYYY","long_no_year":"D MMM HH:mm","long_no_year_no_time":"D MMM","full_no_year_no_time":"Do MMMM","long_with_year":"D MMM YYYY HH:mm","long_with_year_no_time":"D MMM YYYY","full_with_year_no_time":"D MMMM YYYY","long_date_with_year":"D MMM 'YY LT","long_date_without_year":"D MMM LT","long_date_with_year_without_time":"D MMM 'YY","long_date_without_year_with_linebreak":"D MMM \u003cbr/\u003eLT","long_date_with_year_with_linebreak":"D MMM 'YY \u003cbr/\u003eLT","wrap_ago":"%{date} ngÃ y trÆ°á»c","tiny":{"half_a_minute":"\u003c 1 phÃºt","less_than_x_seconds":{"other":"\u003c %{count}giÃ¢y"},"x_seconds":{"other":"%{count}giÃ¢y"},"less_than_x_minutes":{"other":"\u003c %{count} phÃºt"},"x_minutes":{"other":"%{count}phÃºt"},"about_x_hours":{"other":"%{count}giá»"},"x_days":{"other":"%{count}ngÃ y"},"x_months":{"other":"%{count} thÃ¡ng"},"about_x_years":{"other":"%{count}nÄm"},"over_x_years":{"other":"\u003e %{count}nÄm"},"almost_x_years":{"other":"%{count}nÄm"},"date_month":"D MMM","date_year":"MMM 'YY"},"medium":{"x_minutes":{"other":"%{count} phÃºt"},"x_hours":{"other":"%{count} giá»"},"x_days":{"other":"%{count} ngÃ y"},"date_year":"D MMM 'YY"},"medium_with_ago":{"x_minutes":{"other":" %{count} phÃºt trÆ°á»c"},"x_hours":{"other":"%{count} giá» trÆ°á»c"},"x_days":{"other":"%{count} ngÃ y trÆ°á»c"},"x_months":{"other":"%{count}thÃ¡ng trÆ°á»c"},"x_years":{"other":"%{count}nÄm trÆ°á»c"}},"later":{"x_days":{"other":"cÃ²n %{count} ngÃ y"},"x_months":{"other":"cÃ²n %{count} thÃ¡ng"},"x_years":{"other":"cÃ²n %{count} nÄm"}},"previous_month":"ThÃ¡ng trÆ°á»c","next_month":"ThÃ¡ng sau","placeholder":"ngÃ y"},"share":{"topic_html":"Chá»§ Äá»:\u003cspan class=\"topic-title\"\u003e%{topicTitle}\u003c/span\u003e","post":"ÄÄng #%{postNumber}","close":"ÄÃ³ng","twitter":"chia sáº» liÃªn káº¿t nÃ y lÃªn Twitter","facebook":"chia sáº» liÃªn káº¿t nÃ y lÃªn Facebook","email":"Gá»­i liÃªn káº¿t nÃ y trong má»t email"},"action_codes":{"public_topic":"hiá»n thá» chá»§ Äá» nÃ y cÃ´ng khai lÃºc %{when}","private_topic":"táº¡o má»t tin nháº¯n tá»« chá»§ Äá» nÃ y %{when}","split_topic":"tÃ¡ch chá»§ Äá» nÃ y lÃºc %{when}","invited_user":"ÄÃ£ má»i %{who} lÃºc %{when}","invited_group":"ÄÃ£ má»i %{who} lÃºc %{when}","user_left":"%{who}ÄÃ£ tá»± xÃ³a mÃ¬nh khá»i tin nháº¯n nÃ y lÃºc %{when}","removed_user":"ÄÃ£ xoÃ¡ %{who} lÃºc %{when}","removed_group":"ÄÃ£ xoÃ¡ %{who} lÃºc %{when}","autobumped":"tá»± Äá»ng Äáº©y lÃºc%{when}","autoclosed":{"enabled":"bá» ÄÃ³ng lÃºc %{when}","disabled":"ÄÆ°á»£c má» lÃºc %{when}"},"closed":{"enabled":"bá» ÄÃ³ng lÃºc %{when}","disabled":"ÄÆ°á»£c má» lÃºc %{when}"},"archived":{"enabled":"ÄÆ°á»£c ÄÆ°a vÃ o lÆ°u trá»¯ lÃºc %{when}","disabled":"ÄÆ°á»£c ÄÆ°a ra khá»i lÆ°u trá»¯ lÃºc %{when}"},"pinned":{"enabled":"ÄÆ°á»£c ghim lÃºc %{when}","disabled":"ÄÆ°á»£c bá» ghim lÃºc %{when}"},"pinned_globally":{"enabled":"ÄÆ°á»£c ghim lÃªn toÃ n trang lÃºc %{when}","disabled":"ÄÆ°á»£c bá» ghim lÃºc %{when}"},"visible":{"enabled":"ÄÆ°á»£c liá»t kÃª lÃºc %{when}","disabled":"ÄÆ°á»£c bá» liá»t kÃª lÃºc %{when}"},"banner":{"enabled":"chá»n ÄÃ¢y lÃ m banner lÃºc %{when}. NÃ³ sáº½ xuáº¥t hiá»n á» Äáº§u má»i trang cho Äáº¿n khi bá» áº©n Äi bá»i ngÆ°á»i dÃ¹ng.","disabled":"xoÃ¡ banner nÃ y lÃºc %{when}. NÃ³ sáº½ khÃ´ng cÃ²n xuáº¥t hiá»n á» Äáº§u má»i trang."}},"topic_admin_menu":"hÃ nh Äá»ng cho chá»§ Äá»","wizard_required":"ChÃ o má»«ng báº¡n Äáº¿n vá»i Discourse! HÃ£y báº¯t Äáº§u vá»i \u003ca href='%{url}' data-auto-route='true'\u003ehÆ°á»ng dáº«n cÃ i Äáº·t\u003c/a\u003e â¨","emails_are_disabled":"Ban quáº£n trá» ÄÃ£ táº¯t má»i email gá»­i Äi. Sáº½ khÃ´ng cÃ³ báº¥t ká»³ thÃ´ng bÃ¡o nÃ o qua email ÄÆ°á»£c gá»­i Äi.","bootstrap_mode_enabled":"Äá» ÄÆ¡n giáº£n hoÃ¡ quÃ¡ trÃ¬nh triá»n khai trang web, báº¡n Äang á» trong cháº¿ Äá» bootstrap. Má»i ngÆ°á»i dÃ¹ng má»i Äá»u cÃ³ má»©c Äá» tin cáº­y 1 vÃ  sáº½ nháº­n ÄÆ°á»£c email cáº­p nháº­t thÃ´ng tin má»i ngÃ y. Cháº¿ Äá» nÃ y sáº½ tá»± Äá»ng táº¯t khi sá» ngÆ°á»i dÃ¹ng vÆ°á»£t qua %{min_users}","bootstrap_mode_disabled":"Cháº¿ Äá» bootstrap sáº½ bá» vÃ´ hiá»u trong 24 giá» tá»i.","themes":{"default_description":"Máº·c Äá»nh","broken_theme_alert":"Site cá»§a báº¡n cÃ³ thá» khÃ´ng hoáº¡t Äá»ng vÃ¬ theme / component %{theme} bá» lá»i. Táº¯t nÃ³ á» %{path}"},"s3":{"regions":{"ap_northeast_1":"ChÃ¢u Ã ThÃ¡i BÃ¬nh DÆ°Æ¡ng (Tokyo)","ap_northeast_2":"ChÃ¢u Ã ThÃ¡i BÃ¬nh DÆ°Æ¡ng (Seoul)","ap_south_1":"ChÃ¢u Ã ThÃ¡i BÃ¬nh DÆ°Æ¡ng (Mumbai)","ap_southeast_1":"ChÃ¢u Ã ThÃ¡i BÃ¬nh DÆ°Æ¡ng (Singapore)","ap_southeast_2":"ChÃ¢u Ã ThÃ¡i BÃ¬nh DÆ°Æ¡ng (Sydney)","ca_central_1":"Canada (Central)","cn_north_1":"Trung Quá»c (Báº¯c Kinh)","cn_northwest_1":"China (Ningxia)","eu_central_1":"ChÃ¢u Ãu (Frankfurt)","eu_north_1":"EU (Stockholm)","eu_west_1":"ChÃ¢u Ãu (Ireland)","eu_west_2":"ChÃ¢u Ãu (London)","eu_west_3":"EU (Paris)","sa_east_1":"South America (SÃ£o Paulo)","us_east_1":"US East (N. Virginia)","us_east_2":"US East (Ohio)","us_gov_east_1":"AWS GovCloud (US-East)","us_gov_west_1":"AWS GovCloud (Hoa Ká»³-TÃ¢y)","us_west_1":"US West (N. California)","us_west_2":"US West (Oregon)"}},"edit":"sá»­a tiÃªu Äá» vÃ  chuyÃªn má»¥c cá»§a chá»§ Äá»","expand":"Má» rá»ng","not_implemented":"TÃ­nh nÄng nÃ y chÆ°a ÄÆ°á»£c hoÃ n thiá»n, xin lá»i!","no_value":"KhÃ´ng","yes_value":"CÃ³","submit":"Gá»­i Äi","generic_error":"Ráº¥t tiáº¿c, ÄÃ£ cÃ³ lá»i xáº£y ra.","generic_error_with_reason":"ÄÃ£ xáº£y ra lá»i: %{error}","go_ahead":"LÃªn Äáº§u","sign_up":"ÄÄng kÃ½","log_in":"ÄÄng nháº­p","age":"Tuá»i","joined":"ÄÃ£ tham gia","admin_title":"Quáº£n trá»","show_more":"hiá»n thÃªm","show_help":"lá»±a chá»n","links":"LiÃªn káº¿t","links_lowercase":{"other":"liÃªn káº¿t"},"faq":"FAQ","guidelines":"HÆ°á»ng dáº«n","privacy_policy":"ChÃ­nh sÃ¡ch vá» quyá»n riÃªng tÆ°","privacy":"Sá»± riÃªng tÆ°","tos":"Äiá»u khoáº£n dá»ch vá»¥","rules":"CÃ¡c quy táº¯c","conduct":"Quy táº¯c á»©ng xá»­","mobile_view":"Xem á» cháº¿ Äá» di Äá»ng","desktop_view":"Xem á» cháº¿ Äá» mÃ¡y tÃ­nh","you":"Báº¡n","or":"hoáº·c","now":"ngay lÃºc nÃ y","read_more":"Äá»c thÃªm","more":"Nhiá»u hÆ¡n","less":"Ãt hÆ¡n","never":"khÃ´ng bao giá»","every_30_minutes":"má»i 30 phÃºt","every_hour":"má»i giá»","daily":"hÃ ng ngÃ y","weekly":"hÃ ng tuáº§n","every_month":"hÃ ng thÃ¡ng","every_six_months":"má»i sÃ¡u thÃ¡ng","max_of_count":"tá»i Äa trong {{count}}","alternation":"hoáº·c","character_count":{"other":"{{count}} kÃ½ tá»±"},"related_messages":{"title":"Tin nháº¯n liÃªn quan","see_all":"Xem \u003ca href=\"%{path}\"\u003e toÃ n bá» tin nháº¯n \u003c/a\u003e tá»« %{username}..."},"suggested_topics":{"title":"Chá»§ Äá» tÆ°Æ¡ng tá»±","pm_title":"Tin nháº¯n gá»£i Ã½"},"about":{"simple_title":"Giá»i thiá»u","title":"Giá»i thiá»u vá» %{title}","stats":"Thá»ng kÃª trang","our_admins":"CÃ¡c quáº£n trá» viÃªn","our_moderators":"CÃ¡c Äiá»u hÃ nh viÃªn","moderators":"Äiá»u hÃ nh viÃªn","stat":{"all_time":"Tá»« trÆ°á»c tá»i nay","last_7_days":"7 ngÃ y gáº§n nháº¥t","last_30_days":"30 ngÃ y gáº§n nháº¥t"},"like_count":"LÆ°á»£t thÃ­ch","topic_count":"CÃ¡c chá»§ Äá»","post_count":"CÃ¡c bÃ i viáº¿t","user_count":"NgÆ°á»i dÃ¹ng","active_user_count":"ThÃ nh viÃªn tÃ­ch cá»±c","contact":"LiÃªn há» chÃºng tÃ´i","contact_info":"Trong trÆ°á»ng há»£p cÃ³ báº¥t ká»³ sá»± cá» nÃ o áº£nh hÆ°á»ng tá»i trang nÃ y, xin vui lÃ²ng liÃªn há» vá»i chÃºng tÃ´i theo Äá»a chá» %{contact_info}."},"bookmarked":{"title":"Dáº¥u trang","clear_bookmarks":"XoÃ¡ dáº¥u trang","help":{"bookmark":"Chá»n bÃ i viáº¿t Äáº§u tiÃªn cá»§a chá»§ Äá» cho vÃ o dáº¥u trang","unbookmark":"Chá»n Äá» xoÃ¡ toÃ n bá» dáº¥u trang trong chá»§ Äá» nÃ y"}},"bookmarks":{"created":"báº¡n ÄÃ£ ÄÃ¡nh dáº¥u bÃ i viáº¿t nÃ y","not_bookmarked":"ÄÃ¡nh dáº¥u bÃ i viáº¿t nÃ y","created_with_reminder":"báº¡n ÄÃ£ ÄÃ¡nh dáº¥u bÃ i ÄÄng nÃ y báº±ng má»t lá»i nháº¯c táº¡i %{date}","remove":"XÃ³a dáº¥u trang","confirm_clear":"Báº¡n cÃ³ cháº¯c muá»n xÃ³a toÃ n bá» ÄÃ¡nh dáº¥u trong chá»§ Äá» nÃ y?","save":"LÆ°u","no_timezone":"Báº¡n chÆ°a Äáº·t mÃºi giá». Báº¡n sáº½ khÃ´ng thá» Äáº·t lá»i nháº¯c. Thiáº¿t láº­p má»t \u003ca href=\"%{basePath}/my/preferences/profile\"\u003etrong há» sÆ¡ cá»§a báº¡n\u003c/a\u003e .","reminders":{"at_desktop":"Láº§n sau tÃ´i á» mÃ¡y tÃ­nh Äá» bÃ n cá»§a tÃ´i","later_today":"Sau ngÃ y hÃ´m nay \u003cbr/\u003e {{date}}","next_business_day":"NgÃ y lÃ m viá»c tiáº¿p theo \u003cbr/\u003e {{date}}","tomorrow":"NgÃ y mai \u003cbr/\u003e {{date}}","next_week":"Tuáº§n tá»i \u003cbr/\u003e {{date}}","next_month":"ThÃ¡ng tiáº¿p theo \u003cbr/\u003e {{date}}","custom":"NgÃ y giá» tÃ¹y chá»nh"}},"drafts":{"resume":"LÃ m láº¡i","remove":"XoÃ¡","new_topic":"Chá»§ Äá» nhÃ¡p má»i","new_private_message":"Tin nháº¯n nhÃ¡p má»i","topic_reply":"Tráº£ lá»i nhÃ¡p","abandon":{"confirm":"Báº¡n ÄÃ£ táº¡o má»t báº£n nhÃ¡p trong chá»§ Äá» nÃ y. Báº¡n cÃ³ cháº¯c muá»n tá»« bá» nÃ³?","yes_value":"Äá»ng Ã½, bá»","no_value":"KhÃ´ng, giá»¯ láº¡i"}},"topic_count_latest":{"other":"Xem {{count}} chá»§ Äá» má»i hoáº·c ÄÆ°á»£c cáº­p nháº­t"},"topic_count_unread":{"other":"Xem {{count}} chá»§ Äá» chÆ°a Äá»c"},"topic_count_new":{"other":"Xem {{count}} chá»§ Äá» má»i"},"preview":"xem trÆ°á»c","cancel":"há»§y","save":"LÆ°u thay Äá»i","saving":"Äang lÆ°u ...","saved":"ÄÃ£ lÆ°u!","upload":"Táº£i lÃªn","uploading":"Äang táº£i lÃªn...","uploading_filename":"Táº£i lÃªn: {{filename}}...","clipboard":"clipboard","uploaded":"ÄÃ£ táº£i lÃªn!","pasting":"Äang gÃµ","enable":"KÃ­ch hoáº¡t","disable":"VÃ´ hiá»u hÃ³a","continue":"Tiáº¿p tá»¥c","undo":"HoÃ n tÃ¡c","revert":"Phá»¥c há»i","failed":"Tháº¥t báº¡i","switch_to_anon":"VÃ o cháº¿ Äá» áº¨n danh","switch_from_anon":"ThoÃ¡t cháº¿ Äá» áº¨n danh","banner":{"close":"áº¨n banner nÃ y.","edit":"Sá»­a banner nÃ y \u003e\u003e"},"pwa":{"install_banner":"Báº¡n cÃ³ muá»n \u003ca href\u003ecÃ i Äáº·t %{title} trÃªn thiáº¿t bá» nÃ y?\u003c/a\u003e "},"choose_topic":{"none_found":"KhÃ´ng tÃ¬m tháº¥y chá»§ Äá» nÃ o","title":{"search":"TÃ¬m kiáº¿m má»t chá»§ Äá»","placeholder":"nháº­p tiÃªu Äá» chá»§ Äá», url hoáº·c id á» ÄÃ¢y"}},"choose_message":{"none_found":"KhÃ´ng tÃ¬m tháº¥y tin nháº¯n nÃ o.","title":{"search":"TÃ¬m kiáº¿m má»t tin nháº¯n","placeholder":"nháº­p tiÃªu Äá» tin nháº¯n, url hoáº·c id á» ÄÃ¢y"}},"review":{"order_by":"Lá»c bá»i","in_reply_to":"trong tráº£ lá»i tá»i","explain":{"why":"giáº£i thÃ­ch lÃ½ do táº¡i sao máº·t hÃ ng nÃ y káº¿t thÃºc trong hÃ ng Äá»£i","title":"Cháº¥m Äiá»m","formula":"CÃ´ng thá»©c","subtotal":"Tá»ng phá»¥","total":"Tá»ng sá»","min_score_visibility":"Äiá»m tá»i thiá»u cho kháº£ nÄng hiá»n thá»","score_to_hide":"Äiá»m Äá» áº©n bÃ i","take_action_bonus":{"name":"hanh ÄÃ´Ì£ng","title":"Khi má»t nhÃ¢n viÃªn chá»n hÃ nh Äá»ng, cá» sáº½ ÄÆ°á»£c thÆ°á»ng."},"user_accuracy_bonus":{"name":"Äá» chÃ­nh xÃ¡c cá»§a ngÆ°á»i dÃ¹ng","title":"NgÆ°á»i dÃ¹ng cÃ³ cá» ÄÃ£ ÄÆ°á»£c Äá»ng Ã½ trong lá»ch sá»­ ÄÆ°á»£c táº·ng tiá»n thÆ°á»ng."},"trust_level_bonus":{"name":"má»©c Äá» tin cáº­y","title":"CÃ¡c má»¥c cÃ³ thá» xem láº¡i ÄÆ°á»£c táº¡o bá»i ngÆ°á»i dÃ¹ng cÃ³ má»©c Äá» tin cáº­y cao hÆ¡n cÃ³ Äiá»m cao hÆ¡n."},"type_bonus":{"name":"loáº¡i tiá»n thÆ°á»ng","title":"Má»t sá» loáº¡i cÃ³ thá» xem láº¡i cÃ³ thá» ÄÆ°á»£c nhÃ¢n viÃªn chá» Äá»nh má»t pháº§n thÆ°á»ng Äá» lÃ m cho chÃºng cÃ³ má»©c Äá» Æ°u tiÃªn cao hÆ¡n."}},"claim_help":{"optional":"Báº¡n cÃ³ thá» phÃ n nÃ n má»¥c nÃ y Äá» trÃ¡nh nhá»¯ng ngÆ°á»i khÃ¡c ÄÃ¡nh giÃ¡ nÃ³.","required":"Báº¡n pháº£i yÃªu cáº§u cÃ¡c má»¥c trÆ°á»c khi báº¡n cÃ³ thá» xem xÃ©t chÃºng.","claimed_by_you":"Báº¡n ÄÃ£ yÃªu cáº§u máº·t hÃ ng nÃ y vÃ  cÃ³ thá» xem xÃ©t nÃ³.","claimed_by_other":"Má»¥c nÃ y chá» cÃ³ thá» ÄÆ°á»£c xem xÃ©t bá»i \u003cb\u003e{{username}}\u003c/b\u003e ."},"claim":{"title":"yÃªu cáº§u chá»§ Äá» nÃ y"},"unclaim":{"help":"xÃ³a yÃªu cáº§u nÃ y"},"awaiting_approval":"Äang Äá»£i PhÃª duyá»t","delete":"XÃ³a","settings":{"saved":"LÆ°u trá»¯","save_changes":"LÆ°u thay Äá»i","title":"XÃ¡c láº­p","priorities":{"title":"Æ¯u tiÃªn xem láº¡i"}},"moderation_history":"Lá»ch sá»­ kiá»m duyá»t","view_all":"Xem táº¥t cáº£","grouped_by_topic":"ÄÆ°á»£c nhÃ³m theo chá»§ Äá»","none":"KhÃ´ng cÃ³ má»¥c nÃ o cáº§n ÄÃ¡nh giÃ¡.","view_pending":"xem hÃ ng Äá»£i","topic_has_pending":{"other":"Chá»§ Äá» nÃ y cÃ³ \u003cb\u003e{{count}}\u003c/b\u003e bÃ i viáº¿t Äang cáº§n phÃª duyá»t"},"title":"Review","topic":"Chá»§ Äá»:","filtered_topic":"Báº¡n ÄÃ£ lá»c Äáº¿n ná»i dung cÃ³ thá» xem láº¡i trong má»t chá»§ Äá».","filtered_user":"NgÆ°á»i dÃ¹ng","show_all_topics":"hiá»n thá» toÃ n bá» chá»§ Äá»","deleted_post":"(bÃ i viáº¿t ÄÃ£ bá» xÃ³a)","deleted_user":"(ngÆ°á»i dÃ¹ng ÄÃ£ bá» xÃ³a)","user":{"bio":"Tiá»u sá»­","website":"Trang web","username":"TÃªn ÄÄng nháº­p","email":"Email","name":"TÃªn","fields":"TrÆ°á»ng tÃ¹y biáº¿n"},"user_percentage":{"summary":{"other":"{{agreed}}, {{disagreed}}, {{ignored}} ({{count}} tá»ng cá»ng gáº¯n cá»)"},"agreed":{"other":"{{count}}Äá»ng Ã½"},"disagreed":{"other":"{{count}} khÃ´ng Äá»ng Ã½"},"ignored":{"other":"{{count}} bá» qua"}},"topics":{"topic":"Chá»§ Äá»","reviewable_count":"Äáº¿m","reported_by":"BÃ¡o cÃ¡o bá»i","deleted":"[Chá»§ Äá» bá» xÃ³a]","original":"(chá»§ Äá» gá»c)","details":"chi tiáº¿t","unique_users":{"other":"{{count}} ngÆ°á»i dÃ¹ng"}},"replies":{"other":"{{count}} tráº£ lá»i"},"edit":"Sá»­a","save":"LÆ°u","cancel":"Há»§y","new_topic":"PhÃª duyá»t má»¥c nÃ y sáº½ táº¡o má»t chá»§ Äá» má»i","filters":{"all_categories":"(táº¥t cáº£ danh má»¥c)","type":{"title":"Loáº¡i","all":"(táº¥t cáº£ cÃ¡c loáº¡i)"},"minimum_score":"Äiá»m tá»i thiá»u:","refresh":"Táº£i láº¡i","status":"Tráº¡ng thÃ¡i","category":"Danh má»¥c","orders":{"priority":"Má»©c Äá» Æ°u tiÃªn","priority_asc":"Má»©c Äá» Æ°u tiÃªn (Äáº£o ngÆ°á»£c)","created_at":"ÄÆ°á»£c táº¡o táº¡i","created_at_asc":"Táº¡o táº¡i (Äáº£o ngÆ°á»£c)"},"priority":{"title":"Æ¯u tiÃªn tá»i thiá»u","low":"(báº¥t ká»³)","medium":"Trung bÃ¬nh","high":"Cao"}},"conversation":{"view_full":"xem toÃ n bá» há»i thoáº¡i"},"scores":{"about":"Äiá»m sá» nÃ y ÄÆ°á»£c tÃ­nh toÃ¡n dá»±a trÃªn má»©c Äá» tin cáº­y cá»§a ngÆ°á»i bÃ¡o cÃ¡o, Äá» chÃ­nh xÃ¡c cá»§a nhá»¯ng gáº¯n cá» trÆ°á»c ÄÃ³, vÃ  má»©c Äá» Æ°u tiÃªn cá»§a má»¥c ÄÆ°á»£c bÃ¡o cÃ¡o.","score":"Äiá»m sá»","date":"NgÃ y","type":"Loáº¡i","status":"Tráº¡ng thÃ¡i","submitted_by":"ÄÆ°á»£c gá»­i bá»i","reviewed_by":"ÄÆ°á»£c ÄÃ¡nh giÃ¡ bá»i"},"statuses":{"pending":{"title":"Äang treo"},"approved":{"title":"ÄÃ£ phÃª duyá»t"},"rejected":{"title":"Tá»« chá»i"},"ignored":{"title":"ÄÃ£ bá» qua"},"deleted":{"title":"ÄÃ£ xÃ³a"},"reviewed":{"title":"(táº¥t cáº£ ÄÃ£ ÄÃ¡nh giÃ¡)"},"all":{"title":"(má»i thá»©)"}},"types":{"reviewable_flagged_post":{"title":"BÃ i viáº¿t bá» gáº¯n cá»","flagged_by":"Gáº¯n cá» bá»i"},"reviewable_queued_topic":{"title":"Chá»§ Äá» ÄÆ°á»£c lÃªn lá»ch"},"reviewable_queued_post":{"title":"BÃ i viáº¿t ÄÆ°á»£c xáº¿p lá»ch"},"reviewable_user":{"title":"NgÆ°á»i dÃ¹ng"}},"approval":{"title":"BÃ i viáº¿t cáº§n phÃª duyá»t","description":"ChÃºng tÃ´i ÄÃ£ nháº­n ÄÆ°á»£c bÃ i viáº¿t má»i cá»§a báº¡n, nhÆ°ng nÃ³ cáº§n pháº£i ÄÆ°á»£c phÃª duyá»t bá»i admin trÆ°á»c khi ÄÆ°á»£c hiá»n. Xin hÃ£y kiÃªn nháº«n.","pending_posts":{"other":"Báº¡n cÃ³ \u003cstrong\u003e{{count}}\u003c/strong\u003e bÃ i viáº¿t Äang chá»."},"ok":"OK"}},"user_action":{"user_posted_topic":"\u003ca href='{{userUrl}}'\u003e{{user}}\u003c/a\u003e ÄÃ£ ÄÄng \u003ca href='{{topicUrl}}'\u003echá»§ Äá»\u003c/a\u003e","you_posted_topic":"\u003ca href='{{userUrl}}'\u003eBáº¡n\u003c/a\u003e ÄÃ£ ÄÄng \u003ca href='{{topicUrl}}'\u003echá»§ Äá»\u003c/a\u003e","user_replied_to_post":"\u003ca href='{{userUrl}}'\u003e{{user}}\u003c/a\u003e ÄÃ£ tráº£ lá»i tá»i \u003ca href='{{postUrl}}'\u003e{{post_number}}\u003c/a\u003e","you_replied_to_post":"\u003ca href='{{userUrl}}'\u003eBáº¡n\u003c/a\u003e ÄÃ£ tráº£ lá»i \u003ca href='{{postUrl}}'\u003e{{post_number}}\u003c/a\u003e","user_replied_to_topic":"\u003ca href='{{userUrl}}'\u003e{{user}}\u003c/a\u003e ÄÃ£ tráº£ lá»i \u003ca href='{{topicUrl}}'\u003echá»§ Äá»\u003c/a\u003e","you_replied_to_topic":"\u003ca href='{{userUrl}}'\u003eBáº¡n\u003c/a\u003e ÄÃ£ tráº£ lá»i \u003ca href='{{topicUrl}}'\u003echá»§ Äá»\u003c/a\u003e","user_mentioned_user":"\u003ca href='{{user1Url}}'\u003e{{user}}\u003c/a\u003e ÄÃ£ nháº¯c Äáº¿n \u003ca href='{{user2Url}}'\u003e{{another_user}}\u003c/a\u003e","user_mentioned_you":"\u003ca href='{{user1Url}}'\u003e{{user}}\u003c/a\u003e ÄÃ£ nháº¯c tá»i \u003ca href='{{user2Url}}'\u003ebáº¡n\u003c/a\u003e","you_mentioned_user":"\u003ca href='{{user1Url}}'\u003eBáº¡n\u003c/a\u003e ÄÃ£ nháº¯c Äáº¿n \u003ca href='{{user2Url}}'\u003e{{another_user}}\u003c/a\u003e","posted_by_user":"ÄÆ°á»£c ÄÄng bá»i \u003ca href='{{userUrl}}'\u003e{{user}}\u003c/a\u003e","posted_by_you":"ÄÆ°á»£c ÄÄng bá»i \u003ca href='{{userUrl}}'\u003ebáº¡n\u003c/a\u003e","sent_by_user":"ÄÃ£ gá»­i bá»i \u003ca href='{{userUrl}}'\u003e{{user}}\u003c/a\u003e","sent_by_you":"ÄÃ£ gá»­i bá»i \u003ca href='{{userUrl}}'\u003ebáº¡n\u003c/a\u003e"},"directory":{"filter_name":"lá»c theo tÃªn ÄÄng nháº­p","title":"NgÆ°á»i dÃ¹ng","likes_given":"ÄÆ°a ra","likes_received":"ÄÃ£ nháº­n","topics_entered":"ÄÃ£ xem","topics_entered_long":"Chá»§ Äá» ÄÃ£ xem","time_read":"Thá»i gian Äá»c","topic_count":"Chá»§ Äá»","topic_count_long":"Chá»§ Äá» ÄÃ£ ÄÆ°á»£c táº¡o","post_count":"Tráº£ lá»i","post_count_long":"Tráº£ lá»i ÄÃ£ ÄÄng","no_results":"KhÃ´ng tÃ¬m tháº¥y káº¿t quáº£.","days_visited":"GhÃ© thÄm","days_visited_long":"NgÃ y ÄÃ£ ghÃ© thÄm","posts_read":"ÄÃ£ Äá»c","posts_read_long":"BÃ i ÄÄng ÄÃ£ Äá»c","total_rows":{"other":"%{count} ngÆ°á»i dÃ¹ng"}},"group_histories":{"actions":{"change_group_setting":"Äá»i cÃ i Äáº·t nhÃ³m","add_user_to_group":"ThÃªm ngÆ°á»i dÃ¹ng","remove_user_from_group":"XoÃ¡ ngÆ°á»i dÃ¹ng","make_user_group_owner":"Äáº·t lÃ m ngÆ°á»i sá» há»¯u","remove_user_as_group_owner":"Huá»· quyá»n sá» há»¯u"}},"groups":{"member_added":"ÄÃ£ thÃªm","member_requested":"YÃªu cáº§u táº¡i","add_members":{"title":"ThÃªm thÃ nh viÃªn","description":"Quáº£n lÃ½ há»i viÃªn cá»§a nhÃ³m","usernames":"TÃªn ngÆ°á»i dÃ¹ng"},"requests":{"title":"Nhá»¯ng yÃªu cáº§u","reason":"LÃ½ do","accept":"Cháº¥p nháº­n","accepted":"ÄÃ£ cháº¥p nháº­n","deny":"Tá»« chá»i","denied":"ÄÃ£ tá»« chá»i","undone":"yÃªu cáº§u bá» há»§y"},"manage":{"title":"Quáº£n lÃ½","name":"TÃªn","full_name":"TÃªn Äáº§y Äá»§","add_members":"ThÃªm thÃ nh viÃªn","delete_member_confirm":"XÃ³a %{username}ra khá»i nhÃ³m %{group}?","profile":{"title":"Há» sÆ¡"},"interaction":{"title":"TÆ°Æ¡ng tÃ¡c","posting":"Gá»­i bÃ i","notification":"ThÃ´ng bÃ¡o"},"membership":{"title":"ThÃ nh viÃªn","access":"Truy cáº­p"},"logs":{"title":"Log","when":"Khi","action":"HÃ nh Äá»ng","acting_user":"NgÆ°á»i dÃ¹ng Äang hoáº¡t Äá»ng","target_user":"NgÆ°á»i dÃ¹ng má»¥c tiÃªu","subject":"TiÃªu Äá»","details":"Chi tiáº¿t","from":"Tá»«","to":"Tá»i"}},"public_admission":"Cho phÃ©p ThÃ nh viÃªn tham gia nhÃ³m má»t cÃ¡ch tá»± do (nhÃ³m hiá»n thá» cÃ´ng khai)","public_exit":"Cho phÃ©p ThÃ nh viÃªn thoÃ¡t khá»i nhÃ³m má»t cÃ¡ch tá»± do","empty":{"posts":"KhÃ´ng cÃ³ bÃ i viáº¿t nÃ o cá»§a cÃ¡c thÃ nh viÃªn trong nhÃ³m nÃ y","members":"KhÃ´ng cÃ³ thÃ nh viÃªn nÃ o trong nhÃ³m nÃ y","requests":"KhÃ´ng cÃ³ yÃªu cáº§u gia nháº­p nÃ o cho nhÃ³m nÃ y.","mentions":"Group nÃ y chÆ°a ÄÆ°á»£c nháº¯c tá»i láº§n nÃ o.","messages":"KhÃ´ng cÃ³ tin nháº¯n nÃ o cá»§a nhÃ³m nÃ y","topics":"KhÃ´ng cÃ³ chá»§ Äá» nÃ o ÄÆ°á»£c gá»­i bá»i thÃ nh viÃªn cá»§a nhÃ³m nÃ y.","logs":"KhÃ´ng cÃ³ báº£n ghi nÃ o dÃ nh cho nhÃ³m nÃ y"},"add":"ThÃªm","join":"Tham gia","leave":"Rá»i nhÃ³m","request":"YÃªu cáº§u","message":"Tin nh","confirm_leave":"Báº¡n cÃ³ cháº¯c muá»n rá»i khá»i nhÃ³m nÃ y?","membership_request_template":"ÄÃ£ tÃ¹y chá»nh Äá» hiá»n thá» cho ngÆ°á»i dÃ¹ng khi gá»­i yÃªu cáº§u thÃ nh viÃªn","membership_request":{"submit":"Gá»­i yÃªu c","title":"YÃªu cáº§u tham gia @%{group_name}","reason":"Cho phÃ©p chá»§ sá» há»¯u nhÃ³m biáº¿t lÃ½ do báº¡n thuá»c nhÃ³m nÃ y"},"membership":"ThÃ nh viÃªn","name":"TÃªn","group_name":"TÃªn nhÃ³m","user_count":"NgÆ°á»i dÃ¹ng","bio":"ThÃ´ng tin vá» nhÃ³m","selector_placeholder":"nháº­p tÃªn tÃ i khoáº£n","owner":"chá»§","index":{"title":"NhÃ³m","all":"Táº¥t cáº£ cÃ¡c nhÃ³m","empty":"KhÃ´ng cÃ³ nhÃ³m cÃ´ng khai nÃ o.","filter":"Lá»c bá»i loáº¡i nhÃ³m","owner_groups":"NhÃ³m cá»§a tÃ´i","close_groups":"NhÃ³m ÄÃ³ng","automatic_groups":"CÃ¡c nhÃ³m tá»± Äá»ng","automatic":"Tá»± Äá»ng","closed":"ÄÃ£ ","public":"CÃ´ng khai","private":"RiÃªng tÆ°","public_groups":"NhÃ³m cÃ´ng khai","automatic_group":"NhÃ³m tá»± Äá»ng","close_group":"NhÃ³m riÃªng tÆ°","my_groups":"NhÃ³m cá»§a tÃ´i","group_type":"Loáº¡i nhÃ³m","is_group_user":"ThÃ nh viÃªn","is_group_owner":"Chá»§ sá» há»¯u"},"title":{"other":"NhÃ³m"},"activity":"Hoáº¡t Äá»ng","members":{"title":"CÃ¡c thÃ nh viÃªn","filter_placeholder_admin":"username hoáº·c email","filter_placeholder":"tÃªn ngÆ°á»i dÃ¹ng","remove_member":"XÃ³a thÃ nh viÃªn","remove_member_description":"XÃ³a \u003cb\u003e%{username}\u003c/b\u003e khá»i group nÃ y","make_owner":"ThÃªm chá»§ sá» há»¯u","make_owner_description":"ThÃªm \u003cb\u003e%{username}\u003c/b\u003e lÃ  má»t chá»§ sá» há»¯u cá»§a nhÃ³m nÃ y","remove_owner":"XÃ³a chá»§ sá» há»¯u","remove_owner_description":"XÃ³a quyá»n sá» há»¯u nhÃ³m nÃ y cá»§a \u003cb\u003e%{username}\u003c/b\u003e ","owner":"Chá»§ sá» há»¯u","forbidden":"Báº¡n khÃ´ng ÄÆ°á»£c phÃ©p xem thÃ nh viÃªn."},"topics":"Chá»§ Äá»","posts":"CÃ¡c bÃ i viáº¿t","mentions":"ÄÆ°á»£c nháº¯c Äáº¿n","messages":"Tin nháº¯n","notification_level":"Má»©c Äá» thÃ´ng bÃ¡o máº·c Äá»nh cho cÃ¡c tin nháº¯n trong nhÃ³m","alias_levels":{"mentionable":"Ai cÃ³ thá» @mention nhÃ³m nÃ y?","messageable":"Ai cÃ³ thá» gá»­i tin nháº¯n cho nhÃ³m nÃ y?","nobody":"KhÃ´ng ai cáº£","only_admins":"Chá» cÃ¡c quáº£n trá» viÃªn","mods_and_admins":"Chá» cÃ³ ngÆ°á»i Äiá»u hÃ nh vÃ  ban quáº£n trá»","members_mods_and_admins":"Chá» cÃ³ thÃ nh viÃªn trong nhÃ³m, ban Äiá»u hÃ nh, vÃ  ban quáº£n trá»","owners_mods_and_admins":"Chá» chá»§ sá» há»¯u, Äiá»u hÃ nh viÃªn vÃ  quáº£n trá» viÃªn.","everyone":"Má»i ngÆ°á»i"},"notifications":{"watching":{"title":"Äang theo dÃµi","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o khi cÃ³ bÃ i viáº¿t má»i trong má»i tin nháº¯n, vÃ  sá» lÆ°á»£ng tráº£ lá»i má»i sáº½ ÄÆ°á»£c hiá»n thá»"},"watching_first_post":{"title":"Theo dÃµi chá»§ Äá» Äáº§u tiÃªn","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o vá» tin nháº¯n má»i trong nhÃ³m nÃ y nhÆ°ng khÃ´ng tráº£ lá»i tin nháº¯n."},"tracking":{"title":"Äang theo dÃµi","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n, vÃ  sá» lÆ°á»£ng tráº£ lá»i má»i sáº½ ÄÆ°á»£c hiá»n thá»"},"regular":{"title":"BÃ¬nh thÆ°á»ng","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n"},"muted":{"title":"Im láº·ng","description":"Báº¡n sáº½ khÃ´ng ÄÆ°á»£c thÃ´ng bÃ¡o vá» báº¥t kÃ¬ tin nháº¯n nÃ o trong nhÃ³m nÃ y ná»¯a."}},"flair_url":"áº¢nh Äáº¡i diá»n","flair_url_placeholder":"(Tuá»³ chá»n) Link Äáº¿n hÃ¬nh áº£nh hoáº·c lá»p Font Awesome","flair_url_description":"áº¢nh hÃ¬nh vuÃ´ng cá»§a báº¡n khÃ´ng ÄÆ°á»£c nhá» hÆ¡n 20px x 20px hoáº·c FontAwesome khÃ´ng há»£p lá» (cháº¥p nháº­n: \"fa-icon\", \"far fa-icon\" hoáº·c \"fab fa-icon\").","flair_bg_color":"MÃ u ná»n áº£nh Äáº¡i diá»n","flair_bg_color_placeholder":"(Tuá»³ chá»n) GiÃ¡ trá» mÃ£ mÃ u Hexa","flair_color":"MÃ u áº£nh Äáº¡i diá»n","flair_color_placeholder":"(Tuá»³ chá»n) GiÃ¡ trá» mÃ£ mÃ u Hexa","flair_preview_icon":"Biá»u tÆ°á»£ng xem trÆ°á»c","flair_preview_image":"áº¢nh xem trÆ°á»c"},"user_action_groups":{"1":"LÆ°á»£t thÃ­ch","2":"Láº§n ÄÆ°á»£c thÃ­ch","3":"Chá» má»¥c","4":"CÃ¡c chá»§ Äá»","5":"Tráº£ lá»i","6":"Pháº£n há»i","7":"ÄÆ°á»£c nháº¯c Äáº¿n","9":"Lá»i trÃ­ch dáº«n","11":"BiÃªn táº­p","12":"BÃ i ÄÃ£ gá»­i","13":"Há»p thÆ°","14":"Äang chá» xá»­ lÃ½","15":"NhÃ¡p"},"categories":{"all":"táº¥t cáº£ chuyÃªn má»¥c","all_subcategories":"Táº¥t cáº£","no_subcategory":"khÃ´ng cÃ³ gÃ¬","category":"ChuyÃªn má»¥c","category_list":"Hiá»n thá» danh sÃ¡ch chuyÃªn má»¥c","reorder":{"title":"Sáº¯p xáº¿p láº¡i danh má»¥c","title_long":"Tá» chá»©c láº¡i danh sÃ¡ch danh má»¥c","save":"LÆ°u thá»© tá»±","apply_all":"Ãp dá»¥ng","position":"Vá» trÃ­"},"posts":"BÃ i viáº¿t","topics":"Chá»§ Äá»","latest":"Má»i nháº¥t","latest_by":"má»i nháº¥t bá»i","toggle_ordering":"chuyá»n lá»nh kiá»m soÃ¡t","subcategories":"PhÃ¢n loáº¡i phá»¥","topic_sentence":{"other":"%{count} chá»§ Äá»"},"topic_stat_sentence_week":{"other":"%{count}chá»§ Äá» má»i trong tuáº§n qua."},"topic_stat_sentence_month":{"other":"%{count}chá»§ Äá» má»i trong thÃ¡ng qua."},"n_more":"ChuyÃªn má»¥c (thÃªm %{count} ) ..."},"ip_lookup":{"title":"TÃ¬m kiáº¿m Äá»a chá» IP","hostname":"Hostname","location":"Vá» trÃ­","location_not_found":"(khÃ´ng biáº¿t)","organisation":"CÃ´ng ty","phone":"Äiá»n thoáº¡i","other_accounts":"TÃ i khoáº£n khÃ¡c vá»i Äá»a chá» IP nÃ y","delete_other_accounts":"XoÃ¡ %{count}","username":"tÃªn ÄÄng nháº­p","trust_level":"TL","read_time":"thá»i gian Äá»c","topics_entered":"chá»§ Äá» ÄÃ£ xem","post_count":"# bÃ i viáº¿t","confirm_delete_other_accounts":"Báº¡n cÃ³ muá»n xÃ³a nhá»¯ng tÃ i khoáº£n nÃ y khÃ´ng?","powered_by":"sá»­ dá»¥ng \u003ca href='https://maxmind.com'\u003e MaxMindDB \u003c/a\u003e","copied":"ÄÃ£ sao chÃ©p"},"user_fields":{"none":"(chá»n má»t tÃ¹y chá»n)"},"user":{"said":"{{username}}:","profile":"Tiá»u sá»­","mute":"Im láº·ng","edit":"TÃ¹y chá»nh","download_archive":{"button_text":"Táº£i táº¥t c","confirm":"Báº¡n cÃ³ cháº¯c cháº¯n muá»n download cÃ¡c bÃ i viáº¿t cá»§a mÃ¬nh?","success":"QuÃ¡ trÃ¬nh táº£i vá» ÄÃ£ báº¯t Äáº§u, báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o qua tin nháº¯n khi quÃ¡ trÃ¬nh hoÃ n táº¥t.","rate_limit_error":"BÃ i viáº¿t chá» ÄÆ°á»£c táº£i vá» má»t láº§n má»i ngÆ°á»i, hÃ£y thá»­ láº¡i vÃ o ngÃ y mai."},"new_private_message":"Tin nháº¯n má»i","private_message":"Tin nháº¯n","private_messages":"Tin nháº¯n","user_notifications":{"ignore_duration_title":"Bá» qua bá» Äáº¿m giá»","ignore_duration_username":"TÃªn ÄÄng nháº­p","ignore_duration_when":"Thá»i lÆ°á»£ng:","ignore_duration_save":"Bá» qua","ignore_no_users":"Báº¡n khÃ´ng cÃ³ thÃ nh viÃªn bá» cháº·n nÃ o.","ignore_option":"ÄÃ£ bá» qua","add_ignored_user":"ThÃªm...","mute_option":"Im láº·ng","normal_option":"BÃ¬nh thÆ°á»ng"},"activity_stream":"Hoáº¡t Äá»ng","preferences":"TÃ¹y chá»nh","feature_topic_on_profile":{"open_search":"Chá»n chá»§ Äá» má»i","title":"Chá»n chá»§ Äá»","search_label":"TÃ¬m kiáº¿m chá»§ Äá» theo tiÃªu Äá»","save":"LÆ°u","clear":{"title":"XÃ³a"}},"expand_profile":"Má»","collapse_profile":"Thu gá»n","bookmarks":"Theo dÃµi","bio":"Vá» tÃ´i","timezone":"MÃºi giá»","invited_by":"ÄÆ°á»£c má»i bá»i","trust_level":"Äá» tin tÆ°á»ng","notifications":"ThÃ´ng bÃ¡o","statistics":"Thá»ng kÃª","desktop_notifications":{"not_supported":"Xin lá»i. TrÃ¬nh duyá»t cá»§a báº¡n khÃ´ng há» trá»£ Notification.","perm_default":"Má» thÃ´ng bÃ¡o","perm_denied_btn":"KhÃ´ng cÃ³ quyá»n","perm_denied_expl":"Báº¡n ÄÃ£ tá»« chá»i nháº­n thÃ´ng bÃ¡o, Äá» nháº­n láº¡i báº¡n cáº§n thiáº¿t láº­p trÃ¬nh duyá»t.","disable":"KhÃ³a Notification","enable":"Cho phÃ©p Notification","each_browser_note":"LÆ°u Ã½: Báº¡n pháº£i thay Äá»i trong cáº¥u hÃ¬nh má»i trÃ¬nh duyá»t báº¡n sá»­ dá»¥ng."},"dismiss":"Há»§y bá»","dismiss_notifications":"Bá» qua táº¥t cáº£","dismiss_notifications_tooltip":"ÄÃ¡nh dáº¥u ÄÃ£ Äá»c cho táº¥t cáº£ cÃ¡c thÃ´ng bÃ¡o chÆ°a Äá»c","first_notification":"ThÃ´ng bÃ¡o Äáº§u tiÃªn cá»§a báº¡n! Chá»n Äá» báº¯t Äáº§u","dynamic_favicon":"Hiá»n thá» Äáº¿m  trÃªn icon trÃ¬nh duyá»t","theme_default_on_all_devices":"Äáº·t giao diá»n nÃ y lÃ  máº·c Äá»nh trÃªn táº¥t cáº£ cÃ¡c thiáº¿t bá» cá»§a tÃ´i","external_links_in_new_tab":"Má» táº¥t cáº£ liÃªn káº¿t bÃªn ngoÃ i trong tháº» má»i","enable_quoting":"Báº­t cháº¿ Äá» lÃ m ná»i báº­t chá»¯ trong Äoáº¡n trÃ­ch dáº«n tráº£ lá»i","change":"thay Äá»i","moderator":"{{user}} trong ban quáº£n trá»","admin":"{{user}} lÃ  ngÆ°á»i Äiá»u hÃ nh","moderator_tooltip":"ThÃ nh viÃªn nÃ y lÃ  MOD","admin_tooltip":"ThÃ nh viÃªn nÃ y lÃ  admin","suspended_notice":"ThÃ nh viÃªn nÃ y bá» ÄÃ¬nh chá» cho Äáº¿n ngÃ y {{date}}. ","suspended_permanently":"NgÆ°á»i dÃ¹ng nÃ y ÄÃ£ bá» táº¡m ngÆ°ng.","suspended_reason":"LÃ½ do: ","github_profile":"Github","email_activity_summary":"TÃ³m táº¯t hoáº¡t Äá»ng","mailing_list_mode":{"label":"Cháº¿ Äá» mailing list","enabled":"Báº­t cháº¿ Äá» mailing list","instructions":"\nCÃ i Äáº·t nÃ y ghi ÄÃ¨ tá»ng quan vá» hoáº¡t Äá»ng\u003cbr /\u003e\n\nTopic bá» ÄÃ¡nh dáº¥u im láº·ng vÃ  chuyÃªn má»¥c sáº½ khÃ´ng bao gá»m trong thÆ°\n","individual":"Gá»­i email cho má»i bÃ i viáº¿t má»i.","individual_no_echo":"Gá»­i email cho má»i bÃ i viáº¿t má»i trá»« bÃ i viáº¿t cá»§a tÃ´i","many_per_day":"Gá»­i email cho tÃ´i vá» má»i bÃ i viáº¿t má»i (khoáº£ng {{dailyEmailEstimate}} thÆ° má»t ngÃ y)","few_per_day":"Gá»­i email cho tÃ´i vá» má»i bÃ i viáº¿t má»i (khoáº£ng 2 thÆ° má»t ngÃ y)"},"tag_settings":"Tháº»","watched_tags":"Theo dÃµi","watched_tags_instructions":"Cháº¿ Äá» theo dÃµi sáº½ tá»± Äá»ng báº­t vá»i nhá»¯ng chá»§ Äá» ÄÆ°á»£c gáº¯n tháº» nÃ y. Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o vá» táº¥t cáº£ cÃ¡c bÃ i viáº¿t, chá»§ Äá» má»i vÃ  sá» lÆ°á»£ng bÃ i viáº¿t má»i sáº½ hiá»n thá» bÃªn cáº¡nh chá»§ Äá» káº¿ tiáº¿p.","tracked_tags":"Theo dÃµi","tracked_tags_instructions":"Cháº¿ Äá» theo dÃµi sáº½ tá»± Äá»ng báº­t vá»i nhá»¯ng chá»§ Äá» ÄÆ°á»£c gáº¯n tháº» nÃ y. Sá» lÆ°á»£ng bÃ i viáº¿t má»i sáº½ xuáº¥t hiá»n bÃªn cáº¡nh chá»§ Äá».","muted_tags":"Im láº·ng","muted_tags_instructions":"Báº¡n sáº½ khÃ´ng ÄÆ°á»£c thÃ´ng bÃ¡o vá» báº¥t kÃ¬ hoáº¡t Äá»ng nÃ o á» nhá»¯ng chá»§ Äá» cÃ³ tháº» nÃ y, chÃºng cÅ©ng sáº½ khÃ´ng xuáº¥t hiá»n nhÆ° lÃ  nhá»¯ng chá»§ Äá» má»i nháº¥t.","watched_categories":"ÄÃ£ theo dÃµi","watched_categories_instructions":"Báº¡n sáº½ tá»± Äá»ng theo dÃµi táº¥t cáº£ cÃ¡c chá»§ Äá» trong nhá»¯ng chuyÃªn má»¥c nÃ y. Báº¡n sáº½ nháº­n ÄÆ°á»£c tin bÃ¡o vá» nhá»¯ng bÃ i viáº¿t vÃ  chá»§ Äá» má»i, cÃ¹ng vá»i sá» lÆ°á»£ng bÃ i viáº¿t má»i cÅ©ng sáº½ xuáº¥t hiá»n káº¿ bÃªn chá»§ Äá» ÄÃ³.","tracked_categories":"Theo dÃµi","watched_first_post_categories":"Xem bÃ i viáº¿t Äáº§u tiÃªn","watched_first_post_categories_instructions":"Báº¡n sáº½ nháº­n ÄÆ°á»£c thÃ´ng bÃ¡o khi cÃ³ ai ÄÃ³ ÄÄng chá»§ Äá» má»i trong thÆ° má»¥c nÃ y.","watched_first_post_tags":"Xem bÃ i viáº¿t Äáº§u tiÃªn","watched_first_post_tags_instructions":"Báº¡n sáº½ nháº­n ÄÆ°á»£c thÃ´ng bÃ¡o khi cÃ³ ai ÄÃ³ ÄÄng chá»§ Äá» má»i cÃ³ chá»©a tháº» nÃ y.","muted_categories":"Im láº·ng","delete_account":"XoÃ¡ TÃ i khoáº£n cá»§a tÃ´i","delete_account_confirm":"Báº¡n cÃ³ cháº¯c cháº¯n muá»n xÃ³a vÄ©nh viá»n tÃ i khoáº£n cá»§a báº¡n? HÃ nh Äá»ng nÃ y khÃ´ng thá» ÄÆ°á»£c hoÃ n tÃ¡c!","deleted_yourself":"TÃ i khoáº£n cá»§a báº¡n ÄÃ£ ÄÆ°á»£c xÃ³a thÃ nh cÃ´ng.","unread_message_count":"Tin nháº¯n","admin_delete":"XoÃ¡","users":"ThÃ nh viÃªn","muted_users":"Im láº·ng","muted_users_instructions":"NgÄn cháº·n táº¥t cáº£ cÃ¡c thÃ´ng bÃ¡o tá»« nhá»¯ng thÃ nh viÃªn.","ignored_users":"ÄÃ£ bá» qua","tracked_topics_link":"Hiá»n thá»","automatically_unpin_topics":"Tá»± Äá»ng bá» ghim chá»§ Äá» khi tÃ´i xuá»ng cuá»i trang.","apps":"á»¨ng dá»¥ng","revoke_access":"Láº¥y láº¡i quyá»n","undo_revoke_access":"Cáº¥p láº¡i quyá»n","api_approved":"Cháº¥p thuáº­n:","api_last_used_at":"Sá»­ dá»¥ng láº§n cuá»i lÃºc:","theme":"Giao diá»n","home":"Trang chá»§ máº·c Äá»nh","staff_counters":{"flags_given":"cá» há»¯u Ã­ch","flagged_posts":"bÃ i viáº¿t gáº¯n cá»","deleted_posts":"bÃ i viáº¿t bá» xoÃ¡","suspensions":"ÄÃ¬nh chá»","warnings_received":"cáº£nh bÃ¡o"},"messages":{"all":"Táº¥t cáº£","inbox":"Há»p thÆ°","sent":"ÄÃ£ gá»­i","archive":"LÆ°u Trá»¯","groups":"NhÃ³m cá»§a tÃ´i","bulk_select":"Chá»n tin nháº¯n","move_to_inbox":"Chuyá»n sang há»p thÆ°","move_to_archive":"LÆ°u trá»¯","failed_to_move":"Lá»i khi chuyá»n cÃ¡c tin nháº¯n ÄÃ£ chá»n (cÃ³ thá» do lá»i máº¡ng)","select_all":"Chá»n táº¥t cáº£","tags":"Tháº»"},"preferences_nav":{"account":"TÃ i khoáº£n","profile":"Há» sÆ¡","emails":"Email","notifications":"ThÃ´ng bÃ¡o","categories":"ChuyÃªn má»¥c","users":"NgÆ°á»i dÃ¹ng","tags":"Tháº»","interface":"Giao diá»n","apps":"á»¨ng dá»¥ng"},"change_password":{"success":"(email ÄÃ£ gá»­i)","in_progress":"(Äang gá»­i email)","error":"(lá»i)","action":"Gá»­i láº¡i máº­t kháº©u tá»i email","set_password":"Nháº­p Máº­t kháº©u","choose_new":"Chá»n má»t máº­t kháº©u má»i","choose":"Chá»n má»t máº­t kháº©u"},"second_factor_backup":{"regenerate":"Khá»i táº¡o láº¡i","disable":"VÃ´ hiá»u hÃ³a","enable":"KÃ­ch hoáº¡t","enable_long":"Báº­t backup codes","copied_to_clipboard":"Sao chÃ©p vÃ o Clipboard","copy_to_clipboard_error":"Lá»i sao chÃ©p dá»¯ liá»u vÃ o Clipboard","remaining_codes":"Báº¡n cÃ³ \u003cstrong\u003e{{count}}\u003c/strong\u003e mÃ£ sao lÆ°u cÃ²n láº¡i.","use":"Sá»­ dá»¥ng mÃ£ dá»± phÃ²ng"},"second_factor":{"title":"XÃ¡c minh hai bÆ°á»c","name":"TÃªn","show_key_description":"Nháº­p thá»§ cÃ´ng","oauth_enabled_warning":"Xin lÆ°u Ã½ ráº±ng thÃ´ng tin ÄÄng nháº­p xÃ£ há»i sáº½ bá» vÃ´ hiá»u hÃ³a khi xÃ¡c thá»±c hai yáº¿u tá» ÄÃ£ ÄÆ°á»£c báº­t trÃªn tÃ i khoáº£n cá»§a báº¡n.","edit":"Sá»­a","totp":{"default_name":"Authenticator cá»§a báº¡n"},"security_key":{"delete":"XÃ³a"}},"change_about":{"title":"Thay Äá»i thÃ´ng tin vá» tÃ´i","error":"CÃ³ lá»i xáº£y ra khi thay Äá»i giÃ¡ trá» nÃ y."},"change_username":{"title":"Thay Username","taken":"Xin lá»i, ÄÃ£ cÃ³ username nÃ y.","invalid":"Username nÃ y khÃ´ng thÃ­ch há»£p. NÃ³ chá» chá»©a cÃ¡c kÃ½ tá»± lÃ  chá»¯ cÃ¡i vÃ  chá»¯ sá». "},"change_email":{"title":"Thay Äá»i Email","taken":"Xin lá»i, email nÃ y khÃ´ng dÃ¹ng ÄÆ°á»£c. ","error":"CÃ³ lá»i xáº£y ra khi thay Äá»i email cá»§a báº¡n. CÃ³ thá» Äá»a chá» email ÄÃ£ ÄÆ°á»£c sá»­ dá»¥ng ?","success":"ChÃºng tÃ´i ÄÃ£ gá»­i email tá»i Äá»a chá» ÄÃ³. Vui lÃ²ng lÃ m theo chá» dáº«n Äá» xÃ¡c nháº­n láº¡i."},"change_avatar":{"title":"Äá»i áº£nh Äáº¡i diá»n","gravatar":"dá»±a trÃªn \u003ca href='//gravatar.com/emails' target='_blank'\u003eGravatar\u003c/a\u003e","gravatar_title":"Äá»i áº£nh Äáº¡i diá»n cá»§a báº¡n trÃªn website Gravatar","refresh_gravatar_title":"LÃ m má»i Gravatar cá»§a báº¡n","letter_based":"Há» thá»ng xÃ¡c Äá»nh áº£nh Äáº¡i diá»n","uploaded_avatar":"ChÃ­nh sá»­a hÃ¬nh áº£nh","uploaded_avatar_empty":"ThÃªm má»t áº£nh chá»nh sá»­a","upload_title":"Upload hÃ¬nh áº£nh cá»§a báº¡n","image_is_not_a_square":"Cáº£nh bÃ¡o: chÃºng tÃ´i ÄÃ£ cáº¯t hÃ¬nh áº£nh cá»§a báº¡n; chiá»u rá»ng vÃ  chiá»u cao khÃ´ng báº±ng nhau."},"change_card_background":{"title":"HÃ¬nh ná»n Card","instructions":"HÃ¬nh ná»n sáº½ á» giá»¯a vÃ  cÃ³ chiá»u rá»ng máº·c Äá»nh lÃ  590px."},"email":{"title":"Email","primary":"Email chÃ­nh","secondary":"Email thá»© hai","no_secondary":"KhÃ´ng cÃ³ email thá»© hai","instructions":"KhÃ´ng hiá»n thá» cÃ´ng cá»ng","ok":"ChÃºng tÃ´i sáº½ gá»­i thÆ° Äiá»n tá»­ xÃ¡c nháº­n Äáº¿n cho báº¡n","invalid":"VÃ¹i lÃ²ng nháº­p má»t thÆ° Äiá»n tá»­ há»£p lá»","authenticated":"ThÆ° Äiá»n tá»­ cá»§a báº¡n ÄÃ£ ÄÆ°á»£c xÃ¡c nháº­n bá»i {{provider}}","frequency_immediately":"ChÃºng tÃ´i sáº½ gá»­i email cho báº¡n ngay láº­p tá»©c náº¿u báº¡n ÄÃ£ chÆ°a Äá»c nhá»¯ng Äiá»u chÃºng tÃ´i ÄÃ£ gá»­i cho báº¡n qua email.","frequency":{"other":"ChÃºng tÃ´i sáº½ chá» gá»­i email cho báº¡n náº¿u chÃºng tÃ´i ÄÃ£ khÃ´ng nhÃ¬n tháº¥y báº¡n trong {{count}} phÃºt cuá»i."}},"associated_accounts":{"connect":"Káº¿t ná»i","revoke":"Thu há»i","cancel":"Há»§y","not_connected":"(khÃ´ng ÄÆ°á»£c káº¿t ná»i)","confirm_modal_title":"Káº¿t ná»i tÃ i khoáº£n %{provider}"},"name":{"title":"TÃªn","instructions":"TÃªn Äáº§y Äá»§ cá»§a báº¡n (tuá»³ chá»n)","instructions_required":"TÃªn Äáº§y Äá»§ cá»§a báº¡n","too_short":"TÃªn cá»§a báº¡n quÃ¡ ngáº¯n","ok":"TÃªn cá»§a báº¡n cÃ³ váº» á»n"},"username":{"title":"Username","instructions":"Duy nháº¥t, khÃ´ng cÃ³ khoáº£ng trá»ng, ngáº¯n","short_instructions":"Má»i ngÆ°á»i cÃ³ thá» nháº¯c tá»i báº¡n báº±ng @{{username}}","available":"TÃªn ÄÄng nháº­p cá»§a báº¡n cÃ³ sáºµn","not_available":"ChÆ°a cÃ³ sáºµn. Thá»­ {{suggestion}}?","not_available_no_suggestion":"KhÃ´ng sáºµn cÃ³","too_short":"TÃªn ÄÄng nháº­p cá»§a báº¡n quÃ¡ ngáº¯n","too_long":"TÃªn ÄÄng nháº­p cá»§a báº¡n quÃ¡ dÃ i","checking":"Äang kiá»m tra username sáºµn sÃ ng Äá» sá»­ dá»¥ng....","prefilled":"ThÆ° Äiá»n tá»­ trá»§ng vá»i tÃªn ÄÄng nháº­p nÃ y."},"locale":{"title":"NgÃ´n ngá»¯ hiá»n thá»","instructions":"NgÃ´n ngá»¯ hiá»n thá» sáº½ thay Äá»i khi báº¡n táº£i láº¡i trang","default":"(máº·c Äá»nh)","any":"báº¥t kÃ¬"},"password_confirmation":{"title":"Nháº­p láº¡i Password"},"auth_tokens":{"title":"Thiáº¿t bá» ÄÆ°á»£c sá»­ dá»¥ng gáº§n ÄÃ¢y","ip":"IP","details":"Chi tiáº¿t","log_out_all":"ÄÄng xuáº¥t khá»i táº¥t cáº£","active":"hoáº¡t Äá»ng bÃ¢y giá»","not_you":"KhÃ´ng pháº£i báº¡n?","show_all":"Hiá»n thá» táº¥t cáº£ {{count}}","show_few":"Hiá»n thá» Ã­t hÆ¡n","was_this_you":"ÄÃ¢y cÃ³ pháº£i lÃ  báº¡n khÃ´ng?","secure_account":"Báº£o máº­t TÃ i khoáº£n cá»§a tÃ´i","latest_post":"BÃ i ÄÄng cuá»i cÃ¹ng cá»§a báº¡n..."},"last_posted":"BÃ i viáº¿t cuá»i cÃ¹ng","last_emailed":"ÄÃ£ email láº§n cuá»i","last_seen":"ÄÆ°á»£c tháº¥y","created":"ÄÃ£ tham gia","log_out":"Log Out","location":"Vá» trÃ­","website":"Web Site","email_settings":"Email","text_size":{"title":"Cá» chá»¯","smaller":"Nhá»","normal":"BÃ¬nh thÆ°á»ng","larger":"Lá»n","largest":"Lá»n nháº¥t"},"title_count_mode":{"notifications":"ThÃ´ng bÃ¡o má»i","contextual":"Trang ná»i dung má»i"},"like_notification_frequency":{"title":"ThÃ´ng bÃ¡o khi tÃ´i like","always":"LuÃ´n luÃ´n","first_time_and_daily":"Láº§n Äáº§u tiÃªn bÃ i viáº¿t ÄÆ°á»£c like vÃ  hÃ ng ngÃ y","first_time":"Láº§n Äáº§u tiÃªn bÃ i viáº¿t ÄÆ°á»£c like","never":"KhÃ´ng"},"email_previous_replies":{"title":"KÃ¨m theo cÃ¡c tráº£ lá»i trÆ°á»c á» dÆ°á»i cÃ¹ng email","unless_emailed":"trá»« khi ÄÃ£ gá»­i trÆ°á»c ÄÃ³","always":"luÃ´n luÃ´n","never":"khÃ´ng"},"email_digests":{"every_30_minutes":"má»i 30 phÃºt","every_hour":"hÃ ng giá»","daily":"hÃ ng ngÃ y","weekly":"hÃ ng tuáº§n","every_month":"má»i thÃ¡ng","every_six_months":"má»i sÃ¡u thÃ¡ng"},"email_level":{"title":"Gá»­i cho tÃ´i má»t email khi cÃ³ ngÆ°á»i trÃ­ch dáº«n, tráº£ lá»i cho bÃ i viáº¿t cá»§a tÃ´i, Äá» cáº­p Äáº¿n @username cá»§a tÃ´i, hoáº·c má»i tÃ´i Äáº¿n má»t chá»§ Äá»","always":"luÃ´n luÃ´n","never":"khÃ´ng bao giá»"},"email_messages_level":"Gá»­i cho tÃ´i email khi cÃ³ ai ÄÃ³ nháº¯n tin cho tÃ´i","include_tl0_in_digests":"Bao gá»m ná»i dung cá»§a nhá»¯ng thÃ nh viÃªn má»i trong email tÃ³m táº¯t.","email_in_reply_to":"KÃ¨m theo Äoáº¡n dáº«n trÃ­ch tráº£ lá»i bÃ i viáº¿t trong email","other_settings":"KhÃ¡c","categories_settings":"ChuyÃªn má»¥c","new_topic_duration":{"label":"Äá» Ã½ tá»i chá»§ Äá» má»i khi","not_viewed":"TÃ´i chÆ°a tá»«ng xem há»","last_here":"táº¡o ra ká» tá»« láº§n cuá»i tÃ´i á» ÄÃ¢y","after_1_day":"ÄÆ°á»£c táº¡o ngÃ y hÃ´m qua","after_2_days":"ÄÆ°á»£c táº¡o 2 ngÃ y trÆ°á»c","after_1_week":"ÄÆ°á»£c táº¡o tuáº§n trÆ°á»c","after_2_weeks":"ÄÆ°á»£c táº¡o 2 tuáº§n trÆ°á»c"},"auto_track_topics":"Tá»± Äá»ng theo dÃµi cÃ¡c chá»§ Äá» tÃ´i táº¡o","auto_track_options":{"never":"khÃ´ng bao giá»","immediately":"ngay láº­p tá»©c","after_30_seconds":"sau 30 giÃ¢y","after_1_minute":"sau 1 phÃºt","after_2_minutes":"sau 2 phÃºt","after_3_minutes":"sau 3 phÃºt","after_4_minutes":"sau 4 phÃºt","after_5_minutes":"sau 5 phÃºt","after_10_minutes":"sau 10 phÃºt"},"invited":{"search":"gÃµ Äá» tÃ¬m kiáº¿m thÆ° má»i ","title":"Lá»i má»i","user":"User ÄÆ°á»£c má»i","sent":"Gá»­i láº§n cuá»i","none":"KhÃ´ng tÃ¬m tháº¥y lá»i má»i nÃ o.","truncated":{"other":"Hiá»n {{count}} thÆ° má»i Äáº§u tiÃªn"},"redeemed":"Lá»i má»i bÃ¹ láº¡i","redeemed_tab":"LÃ m láº¡i","redeemed_tab_with_count":"LÃ m láº¡i ({{count}})","redeemed_at":"Nháº­n giáº£i","pending":"Lá»i má»i táº¡m hoÃ£n","pending_tab":"Äang treo","pending_tab_with_count":"Äang xá»­ lÃ½ ({{count}})","topics_entered":"BÃ i viáº¿t ÄÆ°á»£c xem ","posts_read_count":"Äá»c bÃ i viáº¿t","expired":"ThÆ° má»i nÃ y ÄÃ£ háº¿t háº¡n.","rescind":"XoÃ¡","rescinded":"Lá»i má»i bá» xÃ³a","reinvite":"Má»i láº¡i","reinvite_all":"Gá»­i láº¡i táº¥t cáº£ lá»i má»i","reinvite_all_confirm":"Báº¡n cÃ³ cháº¯c cháº¯n gá»­i láº¡i táº¥t cáº£ cÃ¡c lá»i má»i?","reinvited":"Gá»­i láº¡i lá»i má»i","reinvited_all":"Táº¥t cáº£ lá»i má»i ÄÃ£ ÄÆ°á»£c gá»­i láº¡i","time_read":"Äá»c thá»i gian","days_visited":"Sá» ngÃ y ÄÃ£ thÄm","account_age_days":"Thá»i gian cá»§a tÃ i khoáº£n theo ngÃ y","create":"Gá»­i má»t lá»i má»i","generate_link":"ChÃ©p liÃªn káº¿t Má»i","link_generated":"Link má»i ÄÃ£ ÄÆ°á»£c táº¡o thÃ nh cÃ´ng !","valid_for":"Link má»i chá» cÃ³ hiá»u lá»±c vá»i Äá»a chá» email: %{email}","bulk_invite":{"text":"Má»i hÃ ng loáº¡t báº±ng file","success":"Táº£i lÃªn thÃ nh cÃ´ng, báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o qua tin nháº¯n khi quÃ¡ trÃ¬nh hoÃ n táº¥t.","error":"Xin lá»i, file pháº£i á» Äá»nh dáº¡ng CSV."}},"password":{"title":"Máº­t kháº©u","too_short":"Máº­t kháº©u cá»§a báº¡n quÃ¡ ngáº¯n.","common":"Máº­t kháº©u quÃ¡ ÄÆ¡n giáº£n, ráº¥t dá» bá» ÄoÃ¡n ra","same_as_username":"Máº­t kháº©u cá»§a báº¡n trÃ¹ng vá»i tÃªn ÄÄng nháº­p.","same_as_email":"Máº­t kháº©u cá»§a báº¡n trÃ¹ng vá»i email cá»§a báº¡n.","ok":"Máº­t kháº©u cá»§a báº¡n cÃ³ váº» á»n.","instructions":"Ã­t nháº¥t %{count} kÃ­ tá»±"},"summary":{"title":"TÃ³m táº¯t","stats":"Thá»ng kÃª","time_read":"thá»i gian Äá»c","recent_time_read":"ÄÃ£ Äá»c gáº§n ÄÃ¢y","topic_count":{"other":"Chá»§ Äá» ÄÃ£ ÄÆ°á»£c táº¡o"},"post_count":{"other":"BÃ i viáº¿t ÄÃ£ ÄÆ°á»£c táº¡o"},"likes_given":{"other":"nháº­n"},"likes_received":{"other":"ÄÃ£ nháº­n"},"days_visited":{"other":"NgÃ y ÄÃ£ ghÃ© thÄm"},"topics_entered":{"other":"chá»§ Äá» ÄÃ£ xem"},"posts_read":{"other":"BÃ i viáº¿t ÄÃ£ Äá»c"},"bookmark_count":{"other":"Dáº¥u trang"},"top_replies":"Top tráº£ lá»i","no_replies":"ChÆ°a cÃ³ tráº£ lá»i.","more_replies":"ThÃªm tráº£ lá»i","top_topics":"Top chá»§ Äá»","no_topics":"ChÆ°a cÃ³ chá»§ Äá» nÃ o.","more_topics":"ThÃªm chá»§ Äá»","top_badges":"Top huy hiá»u","no_badges":"ChÆ°a cÃ³ huy hiá»u nÃ o.","more_badges":"ThÃªm huy hiá»u","top_links":"LiÃªn káº¿t Äáº§u","no_links":"KhÃ´ng cÃ³ liÃªn káº¿t","most_liked_by":"ÄÆ°á»£c thÃ­ch nhiá»u nháº¥t bá»i","most_liked_users":"Like nhiá»u nháº¥t","topics":"Chá»§ Äá»","replies":"Tráº£ lá»i"},"ip_address":{"title":"Äá»a chá» IP cuá»i cÃ¹ng"},"registration_ip_address":{"title":"Äá»a chá» IP ÄÄng kÃ½"},"avatar":{"title":"áº¢nh Äáº¡i diá»n","header_title":"há» sÆ¡ cÃ¡ nhÃ¢n, tin nháº¯n, ÄÃ¡nh dáº¥u vÃ  sá» thÃ­ch"},"title":{"title":"TiÃªu Äá»","none":"(khÃ´ng cÃ³ gÃ¬)"},"primary_group":{"title":"NhÃ³m ChÃ­nh","none":"(khÃ´ng cÃ³ gÃ¬)"},"filters":{"all":"All"},"stream":{"posted_by":"ÄÄng bá»i","sent_by":"Gá»­i bá»i","private_message":"tin nháº¯n","the_topic":"chá»§ Äá»"}},"loading":"Äang táº£i...","errors":{"prev_page":"trong khi cá» gáº¯ng Äá» táº£i","reasons":{"network":"Máº¡ng Internet bá» lá»i","server":"MÃ¡y chá»§ Äang cÃ³ váº¥n Äá»","forbidden":"Báº¡n khÃ´ng thá» xem ÄÆ°á»£c","unknown":"Lá»i","not_found":"KhÃ´ng TÃ¬m Tháº¥y Trang"},"desc":{"network":"HÃ£y kiá»m tra káº¿t ná»i cá»§a báº¡n","network_fixed":"HÃ¬nh nhÆ° nÃ³ trá» láº¡i.","server":"MÃ£ lá»i : {{status}}","forbidden":"Báº¡n khÃ´ng ÄÆ°á»£c cho phÃ©p Äá» xem má»¥c nÃ y","not_found":"Oops, á»©ng dá»¥ng Äang táº£i ÄÆ°á»ng dáº«n khÃ´ng tá»n táº¡i","unknown":"CÃ³ má»t lá»i gÃ¬ ÄÃ³ Äang xáº£y ra"},"buttons":{"back":"Quay trá» láº¡i","again":"Thá»­ láº¡i","fixed":"Load láº¡i trang"}},"close":"ÄÃ³ng láº¡i","assets_changed_confirm":"Website ÄÃ£ ÄÆ°á»£c cáº­p nháº­t báº£n má»i. Báº¡n cÃ³ thá» lÃ m má»i láº¡i trang Äá» cÃ³ thá» sá»­ dá»¥ng báº£n má»i ÄÆ°á»£c cáº­p nháº­t","logout":"Báº¡n ÄÃ£ ÄÄng xuáº¥t","refresh":"Táº£i láº¡i","read_only_mode":{"enabled":"Website Äang á» cháº¿ Äá» chá» Äá»c, báº¡n cÃ³ thá» duyá»t xem nhÆ°ng khÃ´ng thá» tráº£ lá»i, likes, hay thá»±c hiá»n cÃ¡c hÃ nh Äá»ng khÃ¡c.","login_disabled":"Chá»©c nÄng ÄÄng nháº­p ÄÃ£ bá» táº¯t khi website trong tráº¡ng thÃ¡i chá» Äá»c","logout_disabled":"Chá»©c nÄng ÄÄng xuáº¥t ÄÃ£ bá» táº¯t khi website Äang trong tráº¡ng thÃ¡i chá» Äá»c."},"learn_more":"tÃ¬m hiá»u thÃªm...","all_time":"tá»ng cá»ng","all_time_desc":"tá»ng sá» chá»§ Äá» ÄÃ£ táº¡o","year":"nÄm","year_desc":"chá»§ Äá» ÄÆ°á»£c táº¡o ra trong 365 ngÃ y qua","month":"thÃ¡ng","month_desc":"chá»§ Äá» ÄÆ°á»£c táº¡o ra trong 30 ngÃ y qua","week":"tuáº§n","week_desc":"chá»§ Äá» ÄÆ°á»£c táº¡o ra trong 7 ngÃ y qua","day":"ngÃ y","first_post":"BÃ i viáº¿t Äáº§u tiÃªn","mute":"Im láº·ng","unmute":"Bá» im láº·ng","last_post":"ÄÆ°á»£c gá»­i","time_read":"ÄÃ£ Äá»c","last_reply_lowercase":"tráº£ lá»i cuá»i cÃ¹ng","replies_lowercase":{"other":"tráº£ lá»i"},"signup_cta":{"sign_up":"ÄÄng kÃ½","hide_session":"Nháº¯c vÃ o ngÃ y mai","hide_forever":"khÃ´ng, cáº£m Æ¡n","hidden_for_session":"OK, TÃ´i sáº½ há»i báº¡n vÃ o ngÃ y mai. Báº¡n cÃ³ thá» luÃ´n luÃ´n sá»­ dá»¥ng chá»©c nÄng ÄÄng nháº­p Äá» táº¡o tÃ i khoáº£n."},"summary":{"enabled_description":"Báº¡n Äang xem má»t báº£n tÃ³m táº¯t cá»§a chá»§ Äá» nÃ y: cÃ¡c bÃ i viáº¿t thÃº vá» nháº¥t ÄÆ°á»£c xÃ¡c Äá»nh bá»i cá»ng Äá»ng.","description":"CÃ³ \u003cb\u003e{{replyCount}}\u003c/b\u003e tráº£ lá»i.","description_time":"CÃ³ \u003cb\u003e{{replyCount}}\u003c/b\u003e tráº£ lá»i vá»i thá»i gian Äá»c Æ°á»c tÃ­nh khoáº£ng \u003cb\u003e{{readingTime}} phÃºt\u003c/b\u003e.","enable":"TÃ³m táº¯t láº¡i chá»§ Äá»","disable":"HIá»n thá» táº¥t cáº£ cÃ¡c bÃ i viáº¿t"},"deleted_filter":{"enabled_description":"Chá»§ Äá» nÃ y cÃ³ chá»©a cÃ¡c bÃ i viáº¿t bá» xoÃ¡, chÃºng ÄÃ£ bá» áº©n Äi","disabled_description":"XoÃ¡ cÃ¡c bÃ i viáº¿t trong cÃ¡c chá»§ Äá» ÄÆ°á»£c hiá»n thá»","enable":"áº¨n cÃ¡c bÃ i viáº¿t bá» xoÃ¡","disable":"Xem cÃ¡c bÃ i viáº¿t bá» xoÃ¡"},"private_message_info":{"title":"Tin nháº¯n","edit":"ThÃªm hoáº·c xÃ³a...","remove_allowed_user":"Báº¡n thá»±c sá»± muá»n xÃ³a {{name}} tá»« tin nháº¯n nÃ y?","remove_allowed_group":"Báº¡n thá»±c sá»± muá»n xÃ³a {{name}} tá»« tin nháº¯n nÃ y?"},"email":"Email","username":"Username","last_seen":"ÄÃ£ xem","created":"Táº¡o bá»i","created_lowercase":"ngÃ y táº¡o","trust_level":"Äá» tin tÆ°á»ng","search_hint":"username, email or IP address","create_account":{"disclaimer":"Báº±ng cÃ¡ch ÄÄng kÃ½, báº¡n Äá»ng Ã½ vá»i \u003ca href='{{privacy_link}}' target='blank'\u003echÃ­nh sÃ¡ch báº£o máº­t\u003c/a\u003e vÃ  \u003ca href='{{tos_link}}' target='blank'\u003eÄiá»u khoáº£n dá»ch vá»¥\u003c/a\u003e.","title":"Táº¡o tÃ i khoáº£n má»i","failed":"CÃ³ gÃ¬ ÄÃ³ khÃ´ng ÄÃºng, cÃ³ thá» email nÃ y ÄÃ£ ÄÆ°á»£c ÄÄng kÃ½, thá»­ liÃªn káº¿t quÃªn máº­t kháº©u"},"forgot_password":{"title":"Äáº·t láº¡i máº­t kháº©u","action":"TÃ´i ÄÃ£ quÃªn máº­t kháº©u cá»§a tÃ´i","invite":"Äiá»n vÃ o username cá»§a báº¡n hoáº·c Äá»a chá» email vÃ  chÃºng tÃ´i sáº½ gá»­i báº¡n email Äá» khá»i táº¡o láº¡i máº­t kháº©u","reset":"Táº¡o láº¡i máº­t kháº©u","complete_username":"Náº¿u má»t tÃ i khoáº£n phÃ¹ há»£p vá»i tÃªn thÃ nh viÃªn \u003cb\u003e%{username} \u003c/b\u003e, báº¡n sáº½ nháº­n ÄÆ°á»£c má»t email vá»i hÆ°á»ng dáº«n vá» cÃ¡ch Äáº·t láº¡i máº­t kháº©u cá»§a báº¡n trong thá»i gian ngáº¯n.","complete_email":"Náº¿u má»t tráº­n Äáº¥u tÃ i khoáº£n \u003cb\u003e%{email} \u003c/b\u003e, báº¡n sáº½ nháº­n ÄÆ°á»£c má»t email vá»i hÆ°á»ng dáº«n vá» cÃ¡ch Äáº·t láº¡i máº­t kháº©u cá»§a báº¡n trong thá»i gian ngáº¯n.","complete_username_not_found":"KhÃ´ng cÃ³ tÃ i khoáº£n phÃ¹ há»£p vá»i tÃªn thÃ nh viÃªn \u003cb\u003e%{username} \u003c/b\u003e","complete_email_not_found":"KhÃ´ng tÃ¬m tháº¥y tÃ i khoáº£n nÃ o tÆ°Æ¡ng á»©ng vá»i \u003cb\u003e%{email}\u003c/b\u003e","button_ok":"OK","button_help":"GiÃºp "},"email_login":{"link_label":"Gá»­i liÃªn káº¿t ÄÄng nháº­p qua email","button_label":"vá»i email","complete_username":"Náº¿u má»t tÃ i khoáº£n khá»p vá»i tÃªn ngÆ°á»i dÃ¹ng \u003cb\u003e%{username}\u003c/b\u003e, báº¡n sáº½ sá»m nháº­n ÄÆ°á»£c email cÃ³ liÃªn káº¿t ÄÄng nháº­p.","complete_email":"Náº¿u má»t tÃ i khoáº£n phÃ¹ há»£p vá»i \u003cb\u003e%{email}\u003c/b\u003e, báº¡n sáº½ sá»m nháº­n ÄÆ°á»£c email cÃ³ liÃªn káº¿t ÄÄng nháº­p.","complete_username_found":"ChÃºng tÃ´i ÄÃ£ tÃ¬m tháº¥y má»t tÃ i khoáº£n phÃ¹ há»£p vá»i tÃªn ngÆ°á»i dÃ¹ng \u003cb\u003e%{username}\u003c/b\u003e, báº¡n sáº½ sá»m nháº­n ÄÆ°á»£c email cÃ³ liÃªn káº¿t ÄÄng nháº­p.","complete_email_found":"ChÃºng tÃ´i ÄÃ£ tÃ¬m tháº¥y má»t tÃ i khoáº£n phÃ¹ há»£p vá»i \u003cb\u003e%{email}\u003c/b\u003e, báº¡n sáº½ sá»m nháº­n ÄÆ°á»£c email cÃ³ liÃªn káº¿t ÄÄng nháº­p.","complete_username_not_found":"KhÃ´ng cÃ³ tÃ i khoáº£n phÃ¹ há»£p vá»i tÃªn thÃ nh viÃªn \u003cb\u003e%{username} \u003c/b\u003e","complete_email_not_found":"KhÃ´ng tÃ¬m tháº¥y tÃ i khoáº£n nÃ o tÆ°Æ¡ng á»©ng vá»i \u003cb\u003e%{email}\u003c/b\u003e","confirm_title":"Tiáº¿p tá»¥c tá»i %{site_name}","confirm_button":"Káº¿t thÃºc ÄÄng nháº­p"},"login":{"title":"ÄÄng nháº­p","username":"ThÃ nh viÃªn","password":"Máº­t kháº©u","second_factor_title":"XÃ¡c minh hai bÆ°á»c","second_factor_description":"Vui lÃ²ng nháº­p mÃ£ xÃ¡c minh tá»« á»©ng dá»¥ng cá»§a báº¡n:","email_placeholder":"Email hoáº·c tÃªn ÄÄng nháº­p ","caps_lock_warning":"PhÃ­m Caps Lock Äang ÄÆ°á»£c báº­t","error":"KhÃ´ng xÃ¡c Äá»nh ÄÆ°á»£c lá»i","rate_limit":"Xin Äá»£i trÆ°á»c khi ÄÄng nháº­p láº¡i láº§n ná»¯a.","blank_username":"Nháº­p Äá»a chá» email vÃ  tÃªn ngÆ°á»i dÃ¹ng cá»§a báº¡n.","blank_username_or_password":"Báº¡n pháº£i nháº­p email hoáº·c username, vÃ  máº­t kháº©u","reset_password":"Khá»i táº¡o máº­t kháº©u","logging_in":"ÄÄng nháº­p...","or":"Hoáº·c","authenticating":"Äang xÃ¡c thá»±c...","awaiting_activation":"TÃ i khoáº£n cá»§a báº¡n Äang Äá»£i kÃ­ch hoáº¡t, sá»­ dá»¥ng liÃªn káº¿t quÃªn máº­t kháº©u trong trÆ°á»ng há»£p kÃ­ch hoáº¡t á» 1 email khÃ¡c.","awaiting_approval":"TÃ i khoáº£n cá»§a báº¡n chÆ°a ÄÆ°á»£c cháº¥p nháº­n bá»i thÃ nh viÃªn. Báº¡n sáº½ ÄÆ°á»£c gá»­i má»t email khi ÄÆ°á»£c cháº¥p thuáº­n ","requires_invite":"Xin lá»i, báº¡n pháº£i ÄÆ°á»£c má»i Äá» tham gia diá»n ÄÃ n","not_activated":"Báº¡n khÃ´ng thá» ÄÄng nháº­p. ChÃºng tÃ´i ÄÃ£ gá»­i trÆ°á»c email kÃ­ch hoáº¡t cho báº¡n táº¡i \u003cb\u003e{{sentTo}}\u003c/b\u003e. Vui lÃ²ng lÃ m theo hÆ°á»ng dáº«n trong email Äá» kÃ­ch hoáº¡t tÃ i khoáº£n cá»§a báº¡n.","not_allowed_from_ip_address":"Báº¡n khÃ´ng thá» ÄÄng nháº­p tá»« Äá»a chá» IP nÃ y","admin_not_allowed_from_ip_address":"Báº¡n khÃ´ng thá» ÄÄng nháº­p vá»i quyá»n quáº£n trá» tá»« Äá»a chá» IP ÄÃ³.","resend_activation_email":"Báº¥m ÄÃ¢y Äá» gá»­i láº¡i email kÃ­ch hoáº¡t","resend_title":"Gá»­i láº¡i email kÃ­ch hoáº¡t","change_email":"Äá»i Äá»a chá» email","provide_new_email":"Cung cáº¥p Äá»a chá» má»i cá»§a báº¡n vÃ  chÃºng tÃ´i sáº½ gá»­i láº¡i email xÃ¡c nháº­n.","submit_new_email":"Cáº­p nháº­t Äá»a chá» email","sent_activation_email_again":"ChÃºng tÃ´i gá»­i email kÃ­ch hoáº¡t tá»i cho báº¡n á» \u003cb\u003e{{currentEmail}}\u003c/b\u003e. NÃ³ sáº½ máº¥t vÃ i phÃºt Äá» Äáº¿n; báº¡n nhá» check cáº£ há»m thÆ° spam nhe. ","to_continue":"Vui lÃ²ng ÄÄng nháº­p","preferences":"Báº¡n cáº§n pháº£i ÄÄng nháº­p Äá» thay Äá»i cÃ i Äáº·t tÃ i khoáº£n.","forgot":"TÃ´i khÃ´ng thá» nhá» láº¡i chi tiáº¿t tÃ i khoáº£n cá»§a tÃ´i.","not_approved":"TÃ i khoáº£n cá»§a báº¡n chÆ°a ÄÆ°á»£c kiá»m duyá»t. Báº¡n sáº½ nháº­n ÄÆ°á»£c email thÃ´ng bÃ¡o khi báº¡n ÄÆ°á»£c phÃ©p ÄÄng nháº­p.","google_oauth2":{"name":"Goole","title":"vá»i Google"},"twitter":{"name":"Twitter","title":"vá»i Twitter"},"instagram":{"name":"Instagram","title":"vá»i Instagram"},"facebook":{"name":"Facebook","title":"vá»i Facebook"},"github":{"name":"GitHub","title":"vá»i GitHub"},"discord":{"name":"Discord"}},"invites":{"accept_title":"Lá»i má»i","welcome_to":"ChÃ o má»«ng báº¡n Äáº¿n vá»i %{site_name}!","invited_by":"Báº¡n ÄÃ£ ÄÆ°á»£c má»i bá»i:","social_login_available":"Báº¡n cÅ©ng cÃ³ thá» ÄÄng nháº­p báº±ng báº¥t ká»³ thÃ´ng tin ÄÄng nháº­p xÃ£ há»i nÃ o báº±ng email ÄÃ³.","your_email":"Äá»a chá» email cá»§a báº¡n lÃ  \u003cb\u003e%{email}\u003c/b\u003e.","accept_invite":"Cháº¥p nháº­n lá»i má»i","name_label":"T","password_label":"Äáº·t máº­t kh","optional_description":"(tÃ¹y chá»n)"},"password_reset":{"continue":"Tiáº¿p tá»¥c truy cáº­p %{site_name}"},"emoji_set":{"apple_international":"Apple/International","google":"Google","twitter":"Twitter","win10":"Win10","google_classic":"Google Classic","facebook_messenger":"Facebook Messenger"},"category_page_style":{"categories_only":"Chá» chuyÃªn má»¥c","categories_with_featured_topics":"CÃ¡c chuyÃªn má»¥c vÃ  chá»§ Äá» ná»i báº­t","categories_and_latest_topics":"CÃ¡c chuyÃªn má»¥c vÃ  chá»§ Äá» má»i","categories_and_top_topics":"ChuyÃªn má»¥c vÃ  Chá»§ Äá» ná»i báº­t"},"shortcut_modifier_key":{"shift":"Shift","ctrl":"Ctrl","alt":"Alt","enter":"Nháº­p"},"conditional_loading_section":{"loading":"Äang táº£i..."},"select_kit":{"default_header_text":"Chá»n...","no_content":"KhÃ´ng tÃ¬m tháº¥y","filter_placeholder":"TÃ¬m kiáº¿n...","filter_placeholder_with_any":"TÃ¬m kiáº¿m hoáº·c táº¡o má»i...","create":"Táº¡o má»i: '{{content}}'"},"date_time_picker":{"from":"Tá»«","to":"Tá»i"},"emoji_picker":{"filter_placeholder":"TÃ¬m kiáº¿m emoji","activities":"Hoáº¡t Äá»ng","objects":"Váº­t th","flags":"Dáº¥u cá» - Flags"},"shared_drafts":{"publishing":"Äang xuáº¥t báº£n Chá»§ Äá»..."},"composer":{"emoji":"Emoji :)","more_emoji":"thÃªm...","options":"Lá»±a chá»n","whisper":"nÃ³i chuyá»n","unlist":"chÆ°a ÄÆ°á»£c liá»t kÃª","blockquote_text":"TrÃ­ch dáº«n","add_warning":"ÄÃ¢y lÃ  má»t cáº£nh bÃ¡o chÃ­nh thá»©c","toggle_whisper":"Chuyá»n cháº¿ Äá» NÃ³i chuyá»n","posting_not_on_topic":"BÃ i viáº¿t nÃ o báº¡n muá»n tráº£ lá»i ","saved_local_draft_tip":"ÄÃ£ lÆ°u locally","similar_topics":"BÃ i viáº¿t cá»§a báº¡n tÆ°Æ¡ng tá»± vá»i ","drafts_offline":"NhÃ¡p offline","edit_conflict":"chá»nh sá»­a xung Äá»t","error":{"title_missing":"TiÃªu Äá» lÃ  báº¯t buá»c","title_too_short":"TiÃªu Äá» pháº£i cÃ³ Ã­t nháº¥t {{min}} kÃ½ tá»±","title_too_long":"TiÃªu Äá» cÃ³ tá»i Äa {{max}} kÃ½ tá»±","post_length":"BÃ i viáº¿t pháº£i cÃ³ Ã­t nháº¥t {{min}} kÃ½ tá»±","category_missing":"Báº¡n pháº£i chá»n má»t phÃ¢n loáº¡i"},"save_edit":"LÆ°u chá»nh sá»­a","reply_original":"Tráº£ lá»i cho bÃ i viáº¿t gá»c","reply_here":"Tráº£ lá»i ÄÃ¢y ","reply":"Tráº£ lá»i ","cancel":"Huá»·","create_topic":"Táº¡o chá»§ Äá»","create_pm":"Tin nháº¯n","title":"Hoáº·c nháº¥t Ctrl+Enter","users_placeholder":"ThÃªm thÃ nh viÃªn ","title_placeholder":"TÃ³m táº¯t láº¡i tháº£o luáº­n nÃ y trong má»t cÃ¢u ngáº¯n gá»n","title_or_link_placeholder":"Nháº­p tiÃªu Äá», hoáº·c dÃ¡n ÄÆ°á»ng dáº«n vÃ o ÄÃ¢y","edit_reason_placeholder":"Táº¡i sao báº¡n sá»­a","reply_placeholder":"GÃµ á» ÄÃ¢y. Sá»­ dá»¥ng Markdown, BBCode, hoáº·c HTML Äá» Äá»nh dáº¡ng. KÃ©o hoáº·c dÃ¡n áº£nh.","view_new_post":"Xem bÃ i ÄÄng má»i cá»§a báº¡n. ","saving":"Äang lÆ°u","saved":"ÄÃ£ lÆ°u","uploading":"Äang ÄÄng ","show_preview":"Xem trÆ°á»c \u0026raquo;","hide_preview":"\u0026laquo;áº©n xem trÆ°á»c","quote_post_title":"TrÃ­ch dáº«n cáº£ bÃ i viáº¿t","bold_label":"B","bold_title":"In Äáº­m","bold_text":"chá»¯ in Äáº­m","italic_label":"I","italic_title":"Nháº¥n máº¡nh","italic_text":"vÄn báº£n nháº¥n máº¡nh","link_title":"LiÃªn káº¿t","link_description":"Nháº­p mÃ´ táº£ liÃªn káº¿t á» ÄÃ¢y","link_dialog_title":"ChÃ¨n liÃªn káº¿t","link_optional_text":"tiÃªu Äá» tÃ¹y chá»n","quote_title":"TrÃ­ch dáº«n","quote_text":"TrÃ­ch dáº«n","code_title":"VÄn báº£n Äá»nh dáº¡ng trÆ°á»c","code_text":"lÃ¹i Äáº§u dÃ²ng báº±ng 4 dáº¥u cÃ¡ch","paste_code_text":"gÃµ hoáº·c dáº«n code vÃ o ÄÃ¢y","upload_title":"Táº£i lÃªn","upload_description":"Nháº­p mÃ´ táº£ táº£i lÃªn á» ÄÃ¢y","olist_title":"Danh sÃ¡ch kiá»u sá»","ulist_title":"Danh sÃ¡ch kiá»u kÃ½ hiá»u","list_item":"Danh sÃ¡ch cÃ¡c má»¥c","help":"Trá»£ giÃºp soáº¡n tháº£o báº±ng Markdown","modal_ok":"OK","modal_cancel":"Há»§y","cant_send_pm":"Xin lá»i, báº¡n khÃ´ng thá» gá»i tin nháº¯n Äáº¿n %{username}.","yourself_confirm":{"title":"Báº¡n cÃ³ quÃªn chÆ°a thÃªm ngÆ°á»i nháº­n?"},"admin_options_title":"TÃ¹y chá»n quáº£n trá» viÃªn cho chá»§ Äá» nÃ y","composer_actions":{"reply":"Tráº£ lá»i ","edit":"Sá»­a","create_topic":{"label":"Chá»§ Äá» Má»i"}},"details_title":"TÃ³m táº¯t"},"notifications":{"title":"thÃ´ng bÃ¡o cá»§a @name nháº¯c Äáº¿n, tráº£ lá»i bÃ i cá»§a báº¡n vÃ  chá»§ Äá», tin nháº¯n, vv","none":"KhÃ´ng thá» táº£i cÃ¡c thÃ´ng bÃ¡o táº¡i thá»i Äiá»m nÃ y.","empty":"KhÃ´ng cÃ³ thÃ´ng bÃ¡o","post_approved":"BÃ i ÄÄng cá»§a báº¡n ÄÃ£ ÄÆ°á»£c phÃª duyá»t","liked_consolidated_description":{"other":"ÄÃ£ thÃ­ch {{count}} bÃ i viáº¿t cá»§a báº¡n"},"invited_to_private_message":"\u003cp\u003e\u003cspan\u003e{{username}}\u003c/span\u003e{{description}}","invitee_accepted":"\u003cspan\u003e{{username}}\u003c/span\u003e ÄÃ£ cháº¥p nháº­n lá»i má»i cá»§a báº¡n","moved_post":"\u003cspan\u003e{{username}}\u003c/span\u003e ÄÃ£ chuyá»n {{description}}","popup":{"mentioned":"{{username}} nháº¯c Äáº¿n báº¡n trong \"{{topic}}\" - {{site_title}}","group_mentioned":"{{username}} nháº¯c Äáº¿n báº¡n trong \"{{topic}}\" - {{site_title}}","quoted":"{{username}} trÃ­ch lá»i báº¡n trong \"{{topic}}\" - {{site_title}}","replied":"{{username}} tráº£ lá»i cho báº¡n trong \"{{topic}}\" - {{site_title}}","posted":"{{username}} gá»­i bÃ i trong \"{{topic}}\" - {{site_title}}","linked":"{{username}} liÃªn quan Äáº¿n bÃ i viáº¿t cá»§a báº¡n tá»« \"{{topic}}\" - {{site_title}}"},"titles":{"watching_first_post":"chá»§ Äá» má»i"}},"upload_selector":{"title":"ThÃªm má»t áº£nh","title_with_attachments":"ThÃªm má»t áº£nh hoáº·c tá»p tin","from_my_computer":"Tá»« thiáº¿t bá» cá»§a tÃ´i","from_the_web":"Tá»« Web","remote_tip":"ÄÆ°á»ng dáº«n tá»i hÃ¬nh áº£nh","remote_tip_with_attachments":"chá»n áº£nh hoáº·c file {{authorized_extensions}}","local_tip":"chá»n hÃ¬nh tá»« thiáº¿t bá» cá»§a báº¡n","local_tip_with_attachments":"chá»n áº£nh hoáº·c file {{authorized_extensions}} tá»« thiáº¿t bá» cá»§a báº¡n","hint":"(Báº¡n cÅ©ng cÃ³ thá» kÃ©o \u0026 tháº£ vÃ o trÃ¬nh soáº¡n tháº£o Äá» táº£i chÃºng lÃªn)","hint_for_supported_browsers":"báº¡n cÃ³ thá» kÃ©o vÃ  tháº£ áº£nh vÃ o trÃ¬nh soan tháº£o nÃ y","uploading":"Äang táº£i lÃªn","select_file":"Chá»n TÃ i liá»u","default_image_alt_text":"hÃ¬nh áº£nh"},"search":{"sort_by":"Sáº¯p xáº¿p theo","relevance":"Äá» phÃ¹ há»£p","latest_post":"BÃ i viáº¿t má»i nháº¥t","latest_topic":"Chá»§ Äá» má»i","most_viewed":"Xem nhiá»u nháº¥t","most_liked":"Like nhiá»u nháº¥t","select_all":"Chá»n táº¥t cáº£","clear_all":"XÃ³a táº¥t cáº£","too_short":"Tá»« khoÃ¡ tÃ¬m kiáº¿m cá»§a báº¡n quÃ¡ ngáº¯n.","result_count":{"other":"HÆ¡n \u003cspan\u003e{{count}}{{plus}} káº¿t quáº£ cho\u003c/span\u003e\u003cspan class='term'\u003e{{term}}\u003c/span\u003e"},"title":"tÃ¬m kiáº¿m chá»§ Äá», bÃ i viáº¿t, tÃ i khoáº£n hoáº·c cÃ¡c danh má»¥c","no_results":"KhÃ´ng tÃ¬m tháº¥y káº¿t quáº£.","no_more_results":"KhÃ´ng tÃ¬m tháº¥y káº¿t quáº£","searching":"Äang tÃ¬m ...","post_format":"#{{post_number}} bá»i {{username}}","results_page":"Káº¿t quáº£ tÃ¬m kiáº¿m cho '{{term}}'","search_google_button":"G","search_google_title":"TÃ¬m trong trang n","context":{"user":"TÃ¬m bÃ i viáº¿t cá»§a @{{username}}","topic":"TÃ¬m trong chá»§ Äá» nÃ y","private_messages":"TÃ¬m tin nháº¯n"},"advanced":{"title":"TÃ¬m kiáº¿m nÃ¢ng cao","posted_by":{"label":"Gá»­i bá»i"},"in_group":{"label":"Trong nhÃ³m"},"with_badge":{"label":"Vá»i huy hiá»u"},"filters":{"title":"Chá» khá»p vá»i tiÃªu Äá»","likes":"TÃ´i ÄÃ£ thÃ­ch","posted":"TÃ´i ÄÃ£ gá»­i trong","pinned":"ÄÆ°á»£c gim","unpinned":"khÃ´ng ÄÆ°á»£c gim","unseen":"TÃ´i chÆ°a Äá»c","wiki":"lÃ  wiki"},"statuses":{"open":"má»","closed":"bá» ÄÃ³ng","archived":"ÄÆ°á»£c lÆ°u trá»¯","noreplies":"khÃ´ng cÃ³ pháº£n há»i","single_user":"chá»©a má»t ngÆ°á»i dÃ¹ng"},"post":{"count":{"label":"Sá» bÃ i viáº¿t tá»i thiá»u"},"time":{"label":"ÄÆ°á»£c gá»­i","before":"trÆ°á»c","after":"sau"}}}},"hamburger_menu":"Äi Äáº¿n danh sÃ¡ch chá»§ Äá» hoáº·c danh má»¥c khÃ¡c","new_item":"má»i","go_back":"quay trá» láº¡i","not_logged_in_user":"Trang cÃ¡ nhÃ¢n vá»i tÃ³m táº¯t cÃ¡c hoáº¡t Äá»ng vÃ  cáº¥u hÃ¬nh","current_user":"Äi Äáº¿n trang cÃ¡ nhÃ¢n cá»§a báº¡n","topics":{"new_messages_marker":"láº§n thÄm cuá»i","bulk":{"select_all":"Chá»n háº¿t","clear_all":"XoÃ¡ háº¿t","unlist_topics":"Chá»§ Äá» khÃ´ng cÃ´ng khai","reset_read":"Äáº·t láº¡i lÆ°á»£t Äá»c","delete":"XÃ³a chá»§ Äá»","dismiss":"Bá» qua","dismiss_read":"Bá» qua táº¥t cáº£ thÆ° chÆ°a Äá»c","dismiss_button":"Bá» qua...","dismiss_tooltip":"Bá» qua chá» bÃ i viáº¿t má»i hoáº·c ngá»«ng theo dÃµi chá»§ Äá»","also_dismiss_topics":"Ngá»«ng theo dÃµi cÃ¡c chá»§ Äá» nÃ y Äá» khÃ´ng hiá»n thá» láº¡i lÃ  chá»§ Äá» chÆ°a Äá»c","dismiss_new":"Bá» ","toggle":"chuyá»n sang chá»n chá»§ Äá» theo lÃ´","actions":"HÃ nh Äá»ng theo lÃ´","close_topics":"ÄÃ³ng cÃ¡c chá»§ Äá»","archive_topics":"Chá»§ Äá» LÆ°u trá»¯","notification_level":"ThÃ´ng bÃ¡o","choose_new_category":"Chá»n chuyÃªn má»¥c má»i cho chá»§ Äá» nÃ y:","selected":{"other":"Báº¡n ÄÃ£ chá»n \u003cb\u003e{{count}}\u003c/b\u003e chá»§ Äá»"},"choose_new_tags":"Chá»n tháº» má»i cho cÃ¡c chuyÃªn má»¥c sau:"},"none":{"unread":"Báº¡n khÃ´ng cÃ³ chá»§ Äá» nÃ o chÆ°a Äá»c.","new":"Báº¡n khÃ´ng cÃ³ chá»§ Äá» má»i nÃ o.","read":"Báº¡n váº«n chÆ°a Äá»c báº¥t kÃ¬ chá»§ Äá» nÃ o.","posted":"Báº¡n váº«n chÆ°a ÄÄng bÃ i trong báº¥t kÃ¬ má»t chá»§ Äá» nÃ o","latest":"ChÃ¡n quÃ¡. Cháº³ng cÃ³ chá»§ Äá» má»i nÃ o háº¿t trÆ¡n.","bookmarks":"Báº¡n chÆ°a chá»§ Äá» nÃ o ÄÆ°á»£c ÄÃ¡nh dáº¥u.","category":"KhÃ´ng cÃ³ chá»§ Äá» nÃ o trong {{category}} .","top":"KhÃ´ng cÃ³ chá»§ Äá» top.","educate":{"new":"\u003cp\u003eChá»§ Äá» má»i cá»§a báº¡n sáº½ hiá»n thá» á» ÄÃ¢y.\u003c/p\u003e\u003cp\u003eMáº·c Äá»nh, chá»§ Äá» ÄÆ°á»£c coi lÃ  má»i vÃ  sáº½ hiá»n thá» \u003cspan class=\"badge new-topic badge-notification\" style=\"vertical-align:middle;line-height:inherit;\"\u003enew\u003c/span\u003e cho biáº¿t chÃºng ÄÃ£ ÄÆ°á»£c táº¡o ra trong 2 ngÃ y qua.\u003c/p\u003e\u003cp\u003eXem \u003ca href=\"%{userPrefsUrl}\"\u003ethiáº¿t láº­p\u003c/a\u003e cá»§a báº¡n náº¿u muá»n thay Äá»i.\u003c/p\u003e","unread":"\u003cp\u003eChá»§ Äá» chÆ°a Äá»c cá»§a báº¡n sáº½ hiá»n thá» á» ÄÃ¢y.\u003c/p\u003e\u003cp\u003eMáº·c Äá»nh, chá»§ Äá» ÄÆ°á»£c coi lÃ  chÆ°a Äá»c vÃ  sáº½ hiá»n thá» sá» \u003cspan class=\"badge new-posts badge-notification\"\u003e1\u003c/span\u003e náº¿u báº¡n:\u003c/p\u003e\u003cul\u003e\u003cli\u003eÄÃ£ táº¡o chá»§ Äá»\u003c/li\u003e\u003cli\u003eÄÃ£ tráº£ lá»i chá»§ Äá»\u003c/li\u003e\u003cli\u003eÄá»c chá»§ Äá» trong hÆ¡n 4 phÃºt\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eHoáº·c náº¿u báº¡n ÄÃ£ thiáº¿t láº­p má»t cÃ¡ch rÃµ rÃ ng cÃ¡c chá»§ Äá» Theo dÃµi hoáº·c Xem thÃ´ng qua viá»c kiá»m soÃ¡t thÃ´ng bÃ¡o á» dÆ°á»i cÃ¹ng cá»§a má»i chá»§ Äá».\u003c/p\u003e\u003cp\u003eXem \u003ca href=\"%{userPrefsUrl}\"\u003ethiáº¿t láº­p\u003c/a\u003e cá»§a báº¡n náº¿u muá»n thay Äá»i.\u003c/p\u003e"}},"bottom":{"latest":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» nÃ o ná»¯a.","posted":"á» ÄÃ¢y khÃ´ng cÃ³ thÃªm chá»§ Äá» nÃ o ÄÆ°á»£c ÄÄng.","read":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» chÆ°a Äá»c nÃ o ná»¯a.","new":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» má»i nÃ o ná»¯a.","unread":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» chÆ°a Äá»c nÃ o ná»¯a.","category":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» nÃ o trong {{category}} .","top":"KhÃ´ng cÃ²n cá»§a Äá» top nÃ o ná»¯a.","bookmarks":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» ÄÆ°á»£c ÄÃ¡nh dáº¥u nÃ o ná»¯a."}},"topic":{"create":"Chá»§ Äá» Má»i","create_long":"Táº¡o má»t Chá»§ Äá» má»i","private_message":"Báº¯t Äáº§u má»t thÃ´ng Äiá»p","archive_message":{"help":"Chuyá»n tin nháº¯n sang lÆ°u trá»¯","title":"LÆ°u trá»¯"},"move_to_inbox":{"title":"Chuyá»n sang há»p thÆ°","help":"Chuyá»n tin nháº¯n trá» láº¡i há»p thÆ°"},"defer":{"title":"HoÃ£n"},"list":"Chá»§ Äá»","new":"chá»§ Äá» má»i","unread":"chÆ°a Äá»c","new_topics":{"other":"{{count}} chá»§ Äá» má»i."},"unread_topics":{"other":"{{count}} chá»§ Äá» chÆ°a Äá»c."},"title":"Chá»§ Äá»","invalid_access":{"title":"Chá»§ Äá» nÃ y lÃ  riÃªng tÆ°","description":"Xin lá»i, báº¡n khÃ´ng cÃ³ quyá»n truy cáº­p vÃ o chá»§ Äá» ÄÃ³!","login_required":"Báº¡n cáº§n pháº£i ÄÄng nháº­p Äá» xem chá»§ Äá» ÄÃ³"},"server_error":{"title":"Táº£i chá»§ Äá» tháº¥t báº¡i","description":"Xin lá»i, chÃºng tÃ´i khÃ´ng thá» táº£i chá»§ Äá», cÃ³ thá» do káº¿t ná»i cÃ³ váº¥n Äá». Xin hÃ£y thá»­ láº¡i. Náº¿u váº¥n Äá» cÃ²n xuáº¥t hiá»n, hÃ£y cho chÃºng tÃ´i biáº¿t"},"not_found":{"title":"KhÃ´ng tÃ¬m tháº¥y chá»§ Äá»","description":"Xin lá»i, chÃºng tÃ´i khÃ´ng thá» tÃ¬m tháº¥y chá»§ Äá» ÄÃ³. CÃ³ láº½ nÃ³ ÄÃ£ bá» loáº¡i bá»i mod?"},"total_unread_posts":{"other":"Báº¡n cÃ³ {{number}} bÃ i ÄÄng chÆ°a Äá»c trong chá»§ Äá» nÃ y"},"unread_posts":{"other":"báº¡n cÃ³ {{number}} bÃ i ÄÄng cá»§ chÆ°a Äá»c trong chá»§ Äá» nÃ y"},"new_posts":{"other":"cÃ³ {{count}} bÃ i ÄÄng má»i trong chá»§ Äá» nÃ y tá»« láº§n Äá»c cuá»i"},"likes":{"other":"cÃ³ {{count}} thÃ­ch trong chá»§ Äá» nÃ y"},"back_to_list":"Quay láº¡i danh sÃ¡ch chá»§ Äá»","options":"CÃ¡c lá»±a chá»n chá»§ Äá»","show_links":"Hiá»n thá» liÃªn káº¿t trong chá»§ Äá» nÃ y","toggle_information":"chuyá»n Äá»i cÃ¡c chi tiáº¿t chá»§ Äá»","read_more_in_category":"Muá»n Äá»c ná»¯a? Xem qua cÃ¡c chá»§ Äá» khÃ¡c trong {{catLink}} hoáº·c {{latestLink}}","read_more":"Muá»n Äá»c ná»¯a? {{catLink}} hoáº·c {{latestLink}}","browse_all_categories":"Duyá»t táº¥t cáº£ cÃ¡c háº¡ng má»¥c","view_latest_topics":"xem cÃ¡c chá»§ Äá» má»i nháº¥t","suggest_create_topic":"Táº¡i sao khÃ´ng táº¡o má»t chá»§ Äá» má»i?","jump_reply_up":"nháº£y Äáº¿n nhá»¯ng tráº£ lá»i trÆ°á»c ÄÃ³","jump_reply_down":"nháº£y tá»i nhá»¯ng tráº£ lá»i sau ÄÃ³","deleted":"Chá»§ Äá» nÃ y ÄÃ£ bá» xÃ³a","topic_status_update":{"num_of_hours":"Sá» giá»:","remove":"XoÃ¡ bá» Äáº¿m","when":"Khi:"},"auto_update_input":{"tomorrow":"NgÃ y mai","this_weekend":"Cuá»i tuáº§n nÃ y","next_week":"Tuáº§n tá»i","next_month":"ThÃ¡ng t","pick_date_and_time":"Chá»n ngÃ y vÃ  giá»"},"temp_close":{"title":"Táº¡m ÄÃ³ng"},"auto_close":{"error":"HÃ£y nháº­p giÃ¡ trá» há»£p lá».","based_on_last_post":"KhÃ´ng ÄÃ³ng cho Äáº¿n khi bÃ i viáº¿t cuá»i cÃ¹ng trong chá»§ Äá» nÃ y trá» thÃ nh bÃ i cÅ©"},"reminder":{"title":"Nháº¯c t"},"status_update_notice":{"auto_open":"Chá»§ Äá» nÃ y sáº½ tá»± Äá»ng má» trong %{timeLeft}.","auto_close":"Chá»§ Äá» nÃ y sáº½ tá»± ÄÃ³ng trong %{timeLeft}.","auto_close_based_on_last_post":"Chá»§ Äá» nÃ y sáº½ ÄÃ³ng %{duration} sau tráº£ lá»i cuá»i cÃ¹ng."},"auto_close_title":"Tá»± Äá»ng-ÄÃ³ng cÃ¡c CÃ i Äáº·t","timeline":{"back":"Quay láº¡i","replies_short":"%{current} / %{total}"},"progress":{"title":"tiáº¿n trÃ¬nh cá»§a chá»§ Äá»","go_top":"trÃªn cÃ¹ng","go_bottom":"dÆ°á»i cÃ¹ng","go":"Äi tá»i","jump_bottom":"nháº£y tá»i bÃ i viáº¿t cuá»i cÃ¹ng","jump_prompt":"Nháº£y Äáº¿n...","jump_prompt_of":"cá»§a %{count} bÃ i viáº¿t","jump_bottom_with_number":"nháº£y tá»i bÃ i viáº¿t %{post_number}","jump_prompt_or":"hoáº·c","total":"tá»ng sá» bÃ i viáº¿t","current":"bÃ i viáº¿t hiá»n táº¡i"},"notifications":{"reasons":{"3_6":"Báº¡n sáº½ nháº­n ÄÆ°á»£c cÃ¡c tin bÃ¡o bá»i vÃ¬ báº¡n Äang theo dÃµi chuyÃªn má»¥c nÃ y.","3_5":"Báº¡n sáº½ nháº­n ÄÆ°á»£c tin bÃ¡o bá»i vÃ¬ báº¡n ÄÃ£ báº¯t Äáº§u theo dÃµi chá»§ Äá» nÃ y má»t cÃ¡ch tá»± Äá»ng.","3_2":"Báº¡n sáº½ nháº­n ÄÆ°á»£c cÃ¡c tin bÃ¡o bá»i vÃ¬ báº¡n Äang theo dÃµi chá»§ Äá» nÃ y.","3_1":"Báº¡n sáº½ ÄÆ°á»£c nháº­n cÃ¡c tin bÃ¡o bá»i báº¡n ÄÃ£ táº¡o chá»§ Äá» nÃ y.","3":"Báº¡n sáº½ nháº­n ÄÆ°á»£c cÃ¡c tin bÃ¡o bá»i vÃ¬ báº¡n Äang theo dÃµi chá»§ Äá» nÃ y.","2_8":"Báº¡n sáº½ tháº¥y ÄÆ°á»£c 1 sá» lÆ°á»£ng bÃ i viáº¿t má»i bá»i vÃ¬ báº¡n Äang theo dáº¥u chuyÃªn má»¥c nÃ y.","2":"Báº¡n sáº½ xem ÄÆ°á»£c cÃ¡c bÃ i tráº£ lá»i bá»i vÃ¬ báº¡n \u003ca href=\"{{basePath}}/u/{{username}}/preferences\"\u003eÄá»c chá»§ Äá» nÃ y\u003c/a\u003e.","1_2":"Báº¡n sáº½ ÄÆ°á»£c tin bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n.","1":"Báº¡n sáº½ ÄÆ°á»£c tin bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n.","0_7":"Báº¡n Äang bá» qua táº¥t cáº£ cÃ¡c tin bÃ¡o trong chuyÃªn má»¥c nÃ y.","0_2":"Báº¡n Äang bá» qua táº¥t cáº£ cÃ¡c thÃ´ng bÃ¡o trong chá»§ Äá» nÃ y","0":"Báº¡n Äang bá» qua táº¥t cáº£ cÃ¡c thÃ´ng bÃ¡o trong chá»§ Äá» nÃ y"},"watching_pm":{"title":"Äang theo dÃµi","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o vá» tá»«ng tráº£ lá»i má»i trong tin nháº¯n nÃ y, vÃ  má»t sá» tráº£ lá»i má»i sáº½ ÄÆ°á»£c hiá»n thá»"},"watching":{"title":"Äang theo dÃµi","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o vá» tá»«ng tráº£ lá»i má»i trong tin nháº¯n nÃ y, vÃ  má»t sá» tráº£ lá»i má»i sáº½ ÄÆ°á»£c hiá»n thá»"},"tracking_pm":{"title":"Äang theo dÃµi","description":"Má»t sá» tráº£ lá»i má»i sáº½ ÄÆ°á»£c hiá»n thá» trong tin nháº¯n nÃ y. Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn cá»§a báº¡n hoáº·c tráº£ lá»i báº¡n"},"tracking":{"title":"Äang theo dÃµi","description":"Má»t sá» tráº£ lá»i má»i sáº½ ÄÆ°á»£c hiá»n thá» trong chá»§ Äá» nÃ y. Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn cá»§a báº¡n hoáº·c tráº£ lá»i báº¡n"},"regular":{"title":"BÃ¬nh thÆ°á»ng","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n"},"regular_pm":{"title":"BÃ¬nh thÆ°á»ng","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n"},"muted_pm":{"title":"Im láº·ng","description":"Báº¡n sáº½ khÃ´ng bao giá» ÄÆ°á»£c thÃ´ng bÃ¡o vá» báº¥t cá»© Äiá»u gÃ¬ vá» tin nháº¯n nÃ y. "},"muted":{"title":"Im láº·ng","description":"Báº¡n sáº½ khÃ´ng nháº­n ÄÆ°á»£c báº¥t ká»³ thÃ´ng bÃ¡o nÃ o trong chá»§ Äá» nÃ y, vÃ  chÃºng sáº½ khÃ´ng hiá»n thá» lÃ  má»i nháº¥t."}},"actions":{"title":"HÃ nh Äá»ng","recover":"KhÃ´ng-XÃ³a Chá»§ Äá» NÃ y","delete":"XÃ³a-Chá»§ Äá» NÃ y","open":"Má» Chá»§ Äá»","close":"ÄÃ³ng Chá»§ Äá»","multi_select":"Chá»n BÃ i Viáº¿t...","pin":"Ghim Chá»§ Äá»...","unpin":"Bá»-Ghim Chá»§ Äá»...","unarchive":"Chá»§ Äá» KhÃ´ng LÆ°u Trá»¯","archive":"Chá»§ Äá» LÆ°u Trá»¯","invisible":"Make Unlisted","visible":"Make Listed","reset_read":"Äáº·t láº¡i dá»¯ liá»u Äá»c","make_public":"CÃ´ng khai chá»§ Äá» nÃ y"},"feature":{"pin":"Ghim Chá»§ Äá»","unpin":"Bá»-Ghim Chá»§ Äá»","pin_globally":"Ghim Chá»§ Äá» Tá»ng Thá»","make_banner":"Banner chá»§ Äá»","remove_banner":"Bá» banner chá»§ Äá»"},"reply":{"title":"Tráº£ lá»i","help":"báº¯t Äáº§u soáº¡n pháº£n há»i cho chá»§ Äá» nÃ y"},"clear_pin":{"title":"XÃ³a ghim","help":"XÃ³a tráº¡ng thÃ¡i ghim cá»§a chá»§ Äá» nÃ y Äá» nÃ³ khÃ´ng cÃ²n xuáº¥t hiá»n trÃªn cÃ¹ng danh sÃ¡ch chá»§ Äá» cá»§a báº¡n"},"share":{"title":"Chia sáº»","help":"Chia sáº» má»t liÃªn káº¿t Äáº¿n chá»§ Äá» nÃ y"},"print":{"title":"In"},"flag_topic":{"title":"Gáº¯n cá»","help":"ÄÃ¡nh dáº¥u riÃªng tÆ° chá»§ Äá» nÃ y cho sá»± chÃº Ã½ hoáº·c gá»­i má»t thÃ´ng bÃ¡o riÃªng vá» nÃ³","success_message":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u thÃ nh cÃ´ng chá»§ Äá» nÃ y"},"feature_topic":{"title":"Äá» cao chá»§ Äá» nÃ y","pin":"LÃ m cho chá»§ Äá» nÃ y xuáº¥t hiá»n trÃªn top cá»§a chuyÃªn má»¥c {{categoryLink}}","confirm_pin":"Báº¡n ÄÃ£ cÃ³ {{count}} chá»§ Äá» ÄÆ°á»£c ghim. QÃºa nhiá»u chá»§ Äá» ÄÆ°á»£c ghim cÃ³ thá» lÃ  má»t trá» ngáº¡i cho nhá»¯ng thÃ nh viÃªn má»i vÃ  thÃ nh viÃªn áº©n danh. Báº¡n cÃ³ cháº¯c cháº¯n muá»n ghim chá»§ Äá» khÃ¡c trong chuyÃªn má»¥c nÃ y?","unpin":"XÃ³a chá»§ Äá» nÃ y tá»« pháº§n trÃªn cÃ¹ng cá»§a chá»§ Äá» {{categoryLink}}","unpin_until":"Gá»¡ bá» chá»§ Äá» nÃ y khá»i top cá»§a chuyÃªn má»¥c {{categoryLink}} vÃ  Äá»£i cho Äáº¿n \u003cstrong\u003e%{until}\u003c/strong\u003e.","pin_note":"NgÆ°á»i dÃ¹ng cÃ³ thá» bá» ghim chá»§ Äá» riÃªng cho mÃ¬nh","pin_validation":"NgÃ y ÄÆ°á»£c yÃªu cÃ¢u Äá» gáº¯n chá»§ Äá» nÃ y","not_pinned":"KhÃ´ng cÃ³ chá»§ Äá» ÄÆ°á»£c ghim trong {{categoryLink}}.","already_pinned":{"other":"Chá»§ Äá» gáº§n ÄÃ¢y ÄÆ°á»£c ghim trong {{categoryLink}}: \u003cstrong class='badge badge-notification unread'\u003e{{count}}\u003c/strong\u003e"},"pin_globally":"LÃ m cho chá»§ Äá» nÃ y xuáº¥t hiá»n trÃªn top cá»§a táº¥t cáº£ cÃ¡c chá»§ Äá»","confirm_pin_globally":"Báº¡n ÄÃ£ cÃ³ {{count}} chá»§ Äá» ÄÆ°á»£c ghim. Ghim quÃ¡ nhiá»u chá»§ Äá» cÃ³ thá» lÃ  trá» ngáº¡i cho nhá»¯ng thÃ nh viÃªn má»i vÃ  áº©n danh. Báº¡n cÃ³ cháº¯c cháº¯n muá»n ghim chá»§ Äá» khÃ¡c?","unpin_globally":"Bá» chá»§ Äá» nÃ y khá»i pháº§n trÃªn cÃ¹ng cá»§a danh sÃ¡ch táº¥t cáº£ cÃ¡c chá»§ Äá»","unpin_globally_until":"Gá»¡ bá» chá»§ Äá» nÃ y khá»i top cá»§a danh sÃ¡ch táº¥t cáº£ cÃ¡c chá»§ Äá» vÃ  Äá»£i cho Äáº¿n \u003cstrong\u003e%{until}\u003c/strong\u003e.","global_pin_note":"NgÆ°á»i dÃ¹ng cÃ³ thá» bá» ghim chá»§ Äá» riÃªng cho mÃ¬nh","not_pinned_globally":"KhÃ´ng cÃ³ chá»§ Äá» nÃ o ÄÆ°á»£c ghim.","already_pinned_globally":{"other":"Chá»§ Äá» gáº§n ÄÃ¢y ÄÆ°á»£c ghim trong: \u003cstrong class='badge badge-notification unread'\u003e{{count}}\u003c/strong\u003e"},"make_banner":"Äáº·t chá»§ Äá» nÃ y lÃ  má»t banner xuáº¥t hiá»n trÃªn top cá»§a táº¥t cáº£ cÃ¡c trang.","remove_banner":"Gá»¡ bá» banner xuáº¥t hiá»n trÃªn top cá»§a táº¥t cáº£ cÃ¡c trang.","banner_note":"NgÆ°á»i dÃ¹ng cÃ³ thá» bá» qua banner nÃ y báº±ng cÃ¡ch ÄÃ³ng nÃ³. Chá» má»t chá»§ Äá» cÃ³ thá» ÄÆ°á»£c Äáº·t lÃ  banner táº¡i má»t thá»i Äiá»m.","no_banner_exists":"KhÃ´ng cÃ³ chá»§ Äá» banner nÃ o.","banner_exists":"CÃ³ \u003cstrong class='badge badge-notification unread'\u003eis\u003c/strong\u003e Äang lÃ  chá»§ Äá» banner."},"inviting":"Äang má»i...","invite_private":{"title":"Má»i tháº£o luáº­n","email_or_username":"Email hoáº·c username ngÆ°á»i ÄÆ°á»£c má»i","email_or_username_placeholder":"Äá»a chá» thÆ° Äiá»n tá»­ hoáº·c tÃªn ngÆ°á»i dÃ¹ng","action":"Má»i","success":"ChÃºng tÃ´i ÄÃ£ má»i ngÆ°á»i ÄÃ³ tham gia tháº£o luáº­n nÃ y.","error":"Xin lá»i, cÃ³ lá»i khi má»i ngÆ°á»i dÃ¹ng nÃ y.","group_name":"NhÃ³m tÃªn"},"controls":"Topic Controls","invite_reply":{"title":"Má»i","username_placeholder":"tÃªn ngÆ°á»i dÃ¹ng","action":"Gá»­i Lá»i Má»i","help":"má»i ngÆ°á»i khÃ¡c tham gia chá»§ Äá» thÃ´ng qua email hoáº·c thÃ´ng bÃ¡o","to_forum":"ChÃºng tÃ´i sáº½ gá»­i má»t email tÃ³m táº¯t cho phÃ©p báº¡n cá»§a báº¡n gia nháº­p trá»±c tiá»p báº±ng cÃ¡ch nháº¥p chuá»t vÃ o má»t ÄÆ°á»ng dáº«n, khÃ´ng cáº§n pháº£i ÄÄng nháº­p.","sso_enabled":"Nháº­p tÃªn ÄÄng nháº­p hoáº·c Äá»a chá» email cá»§a ngÆ°á»i mÃ  báº¡n muá»n má»i vÃ o chá»§ Äá» nÃ y.","to_topic_blank":"Nháº­p tÃªn ÄÄng nháº­p hoáº·c Äá»a chá» email cá»§a ngÆ°á»i báº¡n muá»n má»i Äáº¿n chá»§ Äá» nÃ y.","to_topic_email":"Báº¡n vá»«a Äiá»n Äá»a chá» email, website sáº½ gá»­i lá»i má»i cho phÃ©p báº¡n bÃ¨ cá»§a báº¡n cÃ³ thá» tráº£ lá»i chá»§ Äá» nÃ y.","to_topic_username":"Báº¡n vá»«a Äiá»n tÃªn thÃ nh viÃªn, website sáº½ gá»­i thÃ´ng bÃ¡o kÃ¨m theo lá»i má»i há» tham gia chá»§ Äá» nÃ y.","to_username":"Äiá»n tÃªn thÃ nh viÃªn báº¡n muá»n má»i, website sáº½ gá»­i thÃ´ng bÃ¡o kÃ¨m theo lá»i má»i há» tham gia chá»§ Äá» nÃ y.","email_placeholder":"name@example.com","success_email":"Website vá»«a gá»­i lá»i má»i tá»i \u003cb\u003e{{emailOrUsername}}\u003c/b\u003e vÃ  sáº½ thÃ´ng bÃ¡o cho báº¡n khi lá»i má»i ÄÃ³ ÄÆ°á»£c cháº¥p nháº­n. Kiá»m tra tab lá»i má»i trÃªn trang tÃ i khoáº£n Äá» theo dÃµi lá»i má»i cá»§a báº¡n.","success_username":"Website ÄÃ£ má»i ngÆ°á»i ÄÃ³ tham gia tháº£o luáº­n nÃ y.","error":"Xin lá»i, chÃºng tÃ´i khÃ´ng thá» má»i ngÆ°á»i ÄÃ³. CÃ³ láº½ há» ÄÃ£ ÄÆ°á»£c má»i? (giá»i háº¡n lá»i má»i)"},"login_reply":"ÄÄng nháº­p Äá» tráº£ lá»i","filters":{"n_posts":{"other":"{{count}} bÃ i viáº¿t"},"cancel":"Bá» ÄiÃ¨u kiá»n lá»c"},"split_topic":{"title":"Di chuyá»n tá»i Chá»§ Äá» má»i","action":"di chuyá»n tá»i chá»§ Äá» má»i","radio_label":"Chá»§ Äá» Má»i","error":"CÃ³ lá»i khi di chuyá»n bÃ i viáº¿t tá»i chá»§ Äá» má»i.","instructions":{"other":"Báº¡n muá»n táº¡o chá»§ Äá» má»i vÃ  phá» biáº¿n nÃ³ vá»i \u003cb\u003e{{count}}\u003c/b\u003e bÃ i viáº¿t ÄÃ£ chá»n."}},"merge_topic":{"title":"Di chuyá»n tá»i chá»§ Äá» Äang tá»n táº¡i","action":"di chuyá»n tá»i chá»§ Äá» Äang tá»n táº¡i","error":"CÃ³ lá»i khi di chuyá»n bÃ i viáº¿t Äáº¿n chá»§ Äá» nÃ y.","instructions":{"other":"HÃ£y chá»n chá»§ Äá» báº¡n muá»n di chuyá»n \u003cb\u003e{{count}}\u003c/b\u003e bÃ i viáº¿t nÃ y tá»i."}},"move_to_new_message":{"radio_label":"Tin nháº¯n má»i"},"change_owner":{"action":"chuyá»n chá»§ sá» há»¯u","error":"CÃ³ lá»i xáº£y ra khi thay Äá»i quyá»n sá» há»¯u cá»§a cÃ¡c bÃ i viáº¿t.","placeholder":"tÃªn ÄÄng nháº­p cá»§a chá»§ sá» há»¯u má»i"},"change_timestamp":{"action":"Äá»i timestamp","invalid_timestamp":"Timestamp khÃ´ng thá» trong tÆ°Æ¡ng lai.","error":"CÃ³ lá»i khi thay Äá»i timestamp cá»§a chá»§ Äá».","instructions":"HÃ£y chá»n dÃ²ng thá»i gian má»i cho chá»§ Äá», cÃ¡c bÃ i viáº¿t trong chá»§ Äá» sáº½ ÄÆ°á»£c cáº­p nháº­t Äá» cÃ³ sá»± khÃ¡c biá»t cÃ¹ng má»t lÃºc."},"multi_select":{"select":"chá»n","selected":"ÄÃ£ chá»n ({{count}})","select_post":{"label":"chá»n"},"select_replies":{"label":"chá»n + tráº£ lá»i"},"delete":"xÃ³a lá»±a chá»n","cancel":"há»§y lá»±a chá»n","select_all":"chá»n táº¥t cáº£","deselect_all":"bá» chá»n táº¥t cáº£","description":{"other":"Báº¡n ÄÃ£ chá»n \u003cb\u003e{{count}}\u003c/b\u003e bÃ i viáº¿t."}}},"post":{"quote_reply":"TrÃ­ch dáº«n","edit_reason":"LÃ½ do: ","post_number":"bÃ i viáº¿t {{number}}","last_edited_on":"ÄÃ£ sá»­a bÃ i viáº¿t láº§n cuá»i lÃºc","reply_as_new_topic":"Tráº£ lá»i nhÆ° lÃ  liÃªn káº¿t Äáº¿n Chá»§ Äá»","continue_discussion":"Tiáº¿p tá»¥c tháº£o luáº­n tá»« {{postLink}}:","follow_quote":"Äáº¿n bÃ i viáº¿t trÃ­ch dáº«n","show_full":"Hiá»n thá» Äáº§y Äá»§ bÃ i viáº¿t","deleted_by_author":{"other":"(bÃ i viáº¿t theo tÃ¡c giáº£ sáº½ ÄÆ°á»£c xÃ³a tá»± Äá»ng sau %{count} giá», trá»« khi ÄÃ£ ÄÃ¡nh dáº¥u)"},"expand_collapse":"má»/ÄÃ³ng","gap":{"other":"xem {{count}} tráº£ lá»i bá» áº©n"},"unread":"BÃ i viáº¿t chÆ°a Äá»c","has_replies":{"other":"{{count}} Tráº£ lá»i"},"has_likes_title":{"other":"{{count}} ngÆ°á»i thÃ­ch bÃ i viáº¿t nÃ y"},"has_likes_title_only_you":"báº¡n ÄÃ£ like bÃ i viáº¿t nÃ y","has_likes_title_you":{"other":"báº¡n vÃ  {{count}} ngÆ°á»i khÃ¡c ÄÃ£ like bÃ i viáº¿t nÃ y"},"errors":{"create":"Xin lá»i, cÃ³ lá»i xáº£y ra khi táº¡o bÃ i viáº¿t cá»§a báº¡n. Vui lÃ²ng thá»­ láº¡i.","edit":"Xin lá»i, cÃ³ lá»i xáº£y ra khi sá»­a bÃ i viáº¿t cá»§a báº¡n. Vui lÃ²ng thá»­ láº¡i.","upload":"Xin lá»i, cÃ³ lá»i xáº£y ra khi táº£i lÃªn táº­p tin nÃ y. Vui lÃ²ng thá»­ láº¡i.","too_many_uploads":"Xin lá»i, báº¡n chá» cÃ³ thá» táº£i lÃªn 1 file cÃ¹ng 1 lÃºc.","image_upload_not_allowed_for_new_user":"Xin lá»i, tÃ i khoáº£n má»i khÃ´ng thá» táº£i lÃªn áº£nh.","attachment_upload_not_allowed_for_new_user":"Xin lá»i, tÃ i khoáº£n má»i khÃ´ng thá» táº£i lÃªn ÄÃ­nh kÃ¨m.","attachment_download_requires_login":"Xin lá»i, báº¡n cáº§n ÄÄng nháº­p Äá» táº£i vá» ÄÃ­nh kÃ¨m."},"abandon_edit":{"no_value":"KhÃ´ng, giá»¯ láº¡i"},"abandon":{"confirm":"Báº¡n cÃ³ cháº¯c muá»n bá» bÃ i viáº¿t cá»§a báº¡n?","no_value":"KhÃ´ng, giá»¯ láº¡i","yes_value":"Äá»ng Ã½, bá»"},"via_email":"bÃ i viáº¿t nÃ y ÄÄng qua email","whisper":"bÃ i viáº¿t nÃ y lÃ  lá»i nháº¯n tá»« Äiá»u hÃ nh viÃªn","wiki":{"about":"BÃ i viáº¿t nÃ y lÃ  má»t wiki"},"archetypes":{"save":"LÆ°u lá»±a chá»n"},"few_likes_left":"CÃ¡m Æ¡n báº¡n ÄÃ£ chia sáº» cáº£m nháº­n! Báº¡n chá» cÃ²n láº¡i vÃ i lÆ°á»£t like cho ngÃ y hÃ´m nay.","controls":{"reply":"báº¯t Äáº§u soáº£n tráº£ lá»i cho bÃ i viáº¿t nÃ y","like":"like bÃ i viáº¿t nÃ y","has_liked":"báº¡n ÄÃ£ like bÃ i viáº¿t nÃ y","undo_like":"há»§y like","edit":"sá»­a bÃ i viáº¿t nÃ y","edit_action":"Sá»­a","edit_anonymous":"Xin lá»i, nhÆ°ng báº¡n cáº§n ÄÄng nháº­p Äá» sá»­a bÃ i viáº¿t nÃ y.","flag":"ÄÃ¡nh dáº¥u bÃ i viáº¿t nÃ y Äá» táº¡o chÃº Ã½ hoáº·c gá»­i má»t thÃ´ng bÃ¡o riÃªng vá» nÃ³","delete":"xÃ³a bÃ i viáº¿t nÃ y","undelete":"há»§y xÃ³a bÃ i viáº¿t nÃ y","share":"chia sáº» liÃªn káº¿t Äáº¿n bÃ i viáº¿t nÃ y","more":"ThÃªm","delete_replies":{"just_the_post":"KhÃ´ng, chá» xÃ³a chá»§ Äá»"},"admin":"quáº£n lÃ½ bÃ i viáº¿t","wiki":"Táº¡o Wiki","unwiki":"XÃ³a Wiki","convert_to_moderator":"ThÃªm mÃ u NhÃ¢n viÃªn","revert_to_regular":"XÃ³a mÃ u NhÃ¢n viÃªn","rebake":"Táº¡o láº¡i HTML","unhide":"Bá» áº©n","change_owner":"Äá»i chá»§ sá» há»¯u","grant_badge":"Cáº¥p huy hiá»u","delete_topic":"xÃ³a chá»§ Äá»"},"actions":{"flag":"Gáº¯n cá»","undo":{"off_topic":"Há»§y gáº¯n cá»","spam":"Há»§y gáº¯n cá»","inappropriate":"Há»§y gáº¯n cá»","bookmark":"Há»§y ÄÃ¡nh dáº¥u","like":"Há»§y like"},"people":{"off_topic":"ÄÃ¡nh dáº¥u lÃ  chá»§ Äá» ÄÃ³ng","spam":"ÄÃ¡nh dáº¥u lÃ  spam","inappropriate":"ÄÃ¡nh dáº¥u lÃ  khÃ´ng phÃ¹ há»£p","notify_moderators":"ÄÃ£ thÃ´ng bÃ¡o vá»i BQT","notify_user":"ÄÃ£ gá»­i tin nháº¯n","bookmark":"ÄÃ£ ÄÃ¡nh dáº¥u bÃ i nÃ y"},"by_you":{"off_topic":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u cÃ¡i nfay lÃ  chá»§ Äá» ÄÃ³ng","spam":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u cÃ¡i nÃ y lÃ  rÃ¡c","inappropriate":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u cÃ¡i nÃ y lÃ  khÃ´ng phÃ¹ há»£p","notify_moderators":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u cÃ¡i nÃ y cho Äiá»u tiáº¿t","notify_user":"Báº¡n ÄÃ£ gá»­i má»t tin nháº¯n Äáº¿n ngÆ°á»i dÃ¹ng nÃ y","bookmark":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u bÃ i viáº¿t nÃ y","like":"Báº¡n ÄÃ£ thÃ­ch cÃ¡i nÃ y"}},"revisions":{"controls":{"first":"Sá»­a Äá»i Äáº§u tiÃªn","previous":"Sá»­a Äá»i trÆ°á»c","next":"Sá»­a Äá»i tiáº¿p theo","last":"Sá»­a Äá»i gáº§n nháº¥t","hide":"áº¨n sá»­a Äá»i","show":"Hiá»n sá»­a Äá»i","revert":"HoÃ n nguyÃªn sá»­a Äá»i","edit_wiki":"Sá»­a wiki","edit_post":"Sá»­a bÃ i ÄÄng"},"displays":{"inline":{"title":"Hiá»n thá» dáº¡ng xuáº¥t kÃ¨m theo cÃ¡c bá» sung vÃ  loáº¡i bá» ná»i tuyáº¿n","button":"HTML"},"side_by_side":{"title":"Hiá»n thá» dáº¡ng xuáº¥t vá»i cÃ¡c Äiá»m khÃ¡c biá»t cáº¡nh nhau","button":"HTML"},"side_by_side_markdown":{"title":"Hiá»n thá» nguyÃªn báº£n vá»i cÃ¡c Äiá»m khÃ¡c biá»t cáº¡nh nhau","button":"ThÃ´"}}},"raw_email":{"displays":{"raw":{"button":"ThÃ´"},"text_part":{"button":"VÄn báº£n"},"html_part":{"button":"HTML"}}},"bookmarks":{"name":"TÃªn"}},"category":{"can":"can\u0026hellip;","none":"(khÃ´ng danh má»¥c)","all":"Táº¥t cáº£ danh má»¥c","edit":"Sá»­a","view":"Xem Chá»§ Äá» trong Danh má»¥c","general":"Chung","settings":"Cáº¥u hÃ¬nh","topic_template":"Máº«u Chá»§ Äá»","tags":"Tháº»","tags_placeholder":"(Tuá»³ chá»n) danh sÃ¡ch tháº» cho phÃ©p","delete":"XÃ³a chuyÃªn má»¥c","create":"ChuyÃªn má»¥c má»i","create_long":"Táº¡o Chá»§ Äá» má»i","save":"LÆ°u chuyÃªn má»¥c","slug":"ÄÆ°á»ng dáº«n chuyÃªn má»¥c","slug_placeholder":"(TÃ¹y chá»n) cÃ¡c tá»« sá»­ dá»¥ng trong url","creation_error":"CÃ³ lá»i xáº£y ra khi táº¡o chuyÃªn má»¥c","save_error":"CÃ³ lá»i xáº£y ra khi lÆ°u chuyÃªn má»¥c","name":"TÃªn chuyÃªn má»¥c","description":"MÃ´ táº£","topic":"chá»§ Äá» chuyÃªn má»¥c","logo":"Logo cá»§a chuyÃªn má»¥c","background_image":"áº¢nh ná»n cá»§a chuyÃªn má»¥c","badge_colors":"MÃ u huy hiá»u","background_color":"MÃ u ná»n","foreground_color":"MÃ u máº·t trÆ°á»c","name_placeholder":"Tá»i Äa má»t hoáº·c hai tá»«","color_placeholder":"Báº¥t cá»© mÃ u nÃ o","delete_confirm":"Báº¡n cÃ³ cháº¯c sáº½ xÃ³a chuyÃªn má»¥c nÃ y chá»©?","delete_error":"CÃ³ lá»i xáº£y ra khi xÃ³a chuyÃªn má»¥c nÃ y","list":"Danh sÃ¡ch chuyÃªn má»¥c","no_description":"HÃ£y thÃªm mÃ´ táº£ cho chuyÃªn má»¥c nÃ y","change_in_category_topic":"Sá»­a mÃ´ táº£","already_used":"MÃ u nÃ y ÄÃ£ ÄÆ°á»£c dÃ¹ng bá»i chuyÃªn má»¥c khÃ¡c","security":"Báº£o máº­t","special_warning":"Cáº£nh bÃ¡o: ÄÃ¢y lÃ  chuyÃªn má»¥c cÃ³ sáºµn nÃªn báº¡n khÃ´ng thá» chá»nh sá»­a cÃ¡c thiáº¿t láº­p báº£o máº­t. Náº¿u báº¡n muá»n sá»­ dá»¥ng chuyÃªn má»¥c nÃ y, hÃ£y xÃ³a nÃ³ thay vÃ¬ tÃ¡i sá»­ dá»¥ng.","images":"HÃ¬nh áº£nh","email_in":"TÃ¹y chá»nh Äá»a chá» nháº­n thÆ° Äiá»n tá»­ ","email_in_allow_strangers":"Nháº­n thÆ° Äiá»n tá»­ tá»« ngÆ°á»i gá»­i vÃ´ danh khÃ´ng tÃ i khoáº£n","email_in_disabled":"Táº¡o chá»§ Äá» má»i thÃ´ng qua email ÄÃ£ ÄÆ°á»£c táº¯t trong thiáº¿t láº­p. Äá» báº­t tÃ­nh nÄng nÃ y, ","email_in_disabled_click":"kÃ­ch hoáº¡t thiáº¿t láº­p thÆ° Äiá»n tá»­","allow_badges_label":"Cho phÃ©p thÆ°á»ng huy hiá»u trong chuyÃªn má»¥c nÃ y","edit_permissions":"Sá»­a quyá»n","review_group_name":"NhÃ³m tÃªn","this_year":"nÄm nay","default_position":"vá» trÃ­ máº·c Äá»nh","position_disabled":"ChuyÃªn má»¥c sáº½ ÄÆ°á»£c hiá»n thá» theo thá»© tá»± hoáº¡t Äá»ng. Äá» kiá»m soÃ¡t thá»© tá»± chuyÃªn má»¥c trong danh sÃ¡ch, ","position_disabled_click":"báº­t thiáº¿t láº­p \"cá» Äá»nh vá» trÃ­ chuyÃªn má»¥c\".","parent":"Danh má»¥c cha","notifications":{"watching":{"title":"Theo dÃµi"},"watching_first_post":{"title":"Xem bÃ i viáº¿t Äáº§u tiÃªn"},"tracking":{"title":"Äang theo dÃµi"},"regular":{"title":"BÃ¬nh thÆ°á»ng","description":"Báº¡n sáº½ ÄÆ°á»£c thÃ´ng bÃ¡o náº¿u ai ÄÃ³ Äá» cáº­p Äáº¿n @tÃªn báº¡n hoáº·c tráº£ lá»i báº¡n"},"muted":{"title":"Im láº·ng","description":"Báº¡n sáº½ khÃ´ng nháº­n ÄÆ°á»£c thÃ´ng bÃ¡o vá» báº¥t cá»© chá»§ Äá» má»i nÃ o trong cÃ¡c chuyÃªn má»¥c nÃ y, vÃ  chÃºng sáº½ khÃ´ng hiá»n thá» lÃ  má»i nháº¥t."}},"search_priority":{"options":{"normal":"BÃ¬nh thÆ°á»ng","ignore":"Bá» qua","high":"Cao"}},"sort_options":{"default":"máº·c Äá»nh","likes":"ThÃ­ch","views":"LÆ°á»£t xem","posts":"BÃ i viáº¿t","activity":"Hoáº¡t Äá»ng","posters":"NgÆ°á»i gá»­i","category":"ChuyÃªn má»¥c","created":"ÄÆ°á»£c táº¡o"},"sort_ascending":"TÄng dáº§n","sort_descending":"Giáº£m dáº§n","settings_sections":{"general":"Chung","email":"Email"}},"flagging":{"title":"CÃ¡m Æ¡n báº¡n ÄÃ£ giÃºp phÃ¡t triá»n cá»ng Äá»ng!","action":"ÄÃ¡nh dáº¥u BÃ i viáº¿t","take_action":"Thá»±c hiá»n","notify_action":"Tin nháº¯n","official_warning":"Cáº£nh bÃ¡o chÃ­nh thá»©c","delete_spammer":"XÃ³a ngÆ°á»i Spam","yes_delete_spammer":"CÃ³, xÃ³a ngÆ°á»i spam","ip_address_missing":"(N/A)","hidden_email_address":"(áº©n)","submit_tooltip":"ÄÃ¡nh dáº¥u riÃªng tÆ°","take_action_tooltip":"Tiáº¿p cáº­n ngÆ°á»¡ng ÄÃ¡nh dáº¥u ngay láº­p tá»©c, thay vÃ¬ Äá»£i cá»ng Äá»ng","cant":"Xin lá»i, báº¡n khÃ´ng thá» ÄÃ¡nh dáº¥u bÃ i viáº¿t lÃºc nÃ y.","notify_staff":"ThÃ´ng bÃ¡o riÃªng cho BQT","formatted_name":{"off_topic":"NÃ³ lÃ  sai chá»§ Äá»","inappropriate":"KhÃ´ng phÃ¹ há»£p","spam":"NÃ³ lÃ  rÃ¡c"},"custom_placeholder_notify_user":"Pháº£i háº£o tÃ¢m vÃ  mang tÃ­nh xÃ¢y dá»±ng.","custom_placeholder_notify_moderators":"HÃ£y cho chÃºng tÃ´i biáº¿t cá»¥ thá» nhá»¯ng gÃ¬ báº¡n quan tÃ¢m, vÃ  cung cáº¥p cÃ¡c liÃªn káº¿t hoáº·c vÃ­ dá»¥ liÃªn quan náº¿u cÃ³ thá».","custom_message":{"at_least":{"other":"nháº­p Ã­t nháº¥t {{count}} kÃ­ tá»±"},"left":{"other":"{{count}} cÃ²n láº¡i"}}},"flagging_topic":{"title":"CÃ¡m Æ¡n báº¡n ÄÃ£ giÃºp phÃ¡t triá»n cá»ng Äá»ng!","action":"Gáº¯n cá» Chá»§ Äá»","notify_action":"Tin nháº¯n"},"topic_map":{"title":"TÃ³m táº¯t Chá»§ Äá»","participants_title":"Poster thÆ°á»ng xuyÃªn","links_title":"LiÃªn káº¿t phá» biáº¿n","links_shown":"hiá»n thá» thÃªm liÃªn káº¿t...","clicks":{"other":"%{count} nháº¥p chuá»t"}},"post_links":{"title":{"other":"%{count} thÃªm"}},"topic_statuses":{"warning":{"help":"ÄÃ¢y lÃ  má»t cáº£nh bÃ¡o chÃ­nh thá»©c."},"bookmarked":{"help":"Báº¡n ÄÃ£ ÄÃ¡nh dáº¥u chá»§ Äá» nÃ y"},"locked":{"help":"Chá»§ Äá» ÄÃ£ ÄÃ³ng; khÃ´ng cho phÃ©p tráº£ lá»i má»i"},"archived":{"help":"Chá»§ Äá» nÃ y ÄÃ£ ÄÆ°á»£c lÆ°u trá»¯, báº¡n khÃ´ng thá» sá»­a Äá»i ná»¯a"},"locked_and_archived":{"help":"Chá»§ Äá» nÃ y ÄÃ£ ÄÃ³ng vÃ  lÆ°u trá»¯, khÃ´ng cho phÃ©p tráº£ lá»i má»i vÃ  sá»­a Äá»i ná»¯a"},"unpinned":{"title":"Há»§y gáº¯n","help":"Chá»§ Äá» nÃ y khÃ´ng cÃ²n ÄÆ°á»£c ghim ná»¯a, nÃ³ sáº½ hiá»n thá» theo thá»© tá»± thÃ´ng thÆ°á»ng"},"pinned_globally":{"title":"Ghim toÃ n trang","help":"Chá»§ Äá» nÃ y ÄÆ°á»£c ghim toÃ n trang, nÃ³ sáº½ hiá»n thá» á» trÃªn cÃ¹ng cÃ¡c chá»§ Äá» má»i vÃ  trong chuyÃªn má»¥c"},"pinned":{"title":"Gáº¯n","help":"Chá»§ Äá» nÃ y ÄÃ£ ÄÆ°á»£c ghim, nÃ³ sáº½ hiá»n thá» á» trÃªn cÃ¹ng chuyÃªn má»¥c"},"unlisted":{"help":"Chá»§ Äá» nÃ y áº©n, nÃ³ sáº½ khÃ´ng hiá»n thá» trong danh sÃ¡ch chá»§ Äá», vÃ  chá» cÃ³ thá» truy cáº­p thÃ´ng qua liÃªn káº¿t trá»±c tiáº¿p"}},"posts":"BÃ i viáº¿t","posts_long":"CÃ³ {{number}} bÃ i ÄÄng trong chá»§ Äá» nÃ y","original_post":"BÃ i viáº¿t gá»c","views":"LÆ°á»£t xem","views_lowercase":{"other":"lÆ°á»£t xem"},"replies":"Tráº£ lá»i","views_long":{"other":"chá»§ Äá» nÃ y ÄÃ£ ÄÆ°á»£c xem {{number}} láº§n"},"activity":"Hoáº¡t Äá»ng","likes":"LÆ°á»£t thÃ­ch","likes_lowercase":{"other":"lÆ°á»£t thÃ­ch"},"likes_long":"CÃ³ {{number}} thÃ­ch trong chá»§ Äá» nÃ y","users":"NgÆ°á»i dÃ¹ng","users_lowercase":{"other":"ngÆ°á»i dÃ¹ng"},"category_title":"Danh má»¥c","history":"Lá»ch sá»­","changed_by":"bá»i {{author}}","raw_email":{"not_available":"KhÃ´ng sáºµn sÃ ng!"},"categories_list":"Danh sÃ¡ch Danh má»¥c","filters":{"with_topics":"%{filter} chá»§ Äá»","with_category":"%{filter} %{category} chá»§ Äá»","latest":{"title":"Má»i nháº¥t","title_with_count":{"other":"Má»i nháº¥t ({{count}})"},"help":"chá»§ Äá» vá»i bÃ i viáº¿t gáº§n nháº¥t"},"read":{"title":"Äá»c","help":"chá»§ Äá» báº¡n ÄÃ£ Äá»c, theo thá»© tá»± báº¡n Äá»c láº§n cuá»i cÃ¹ng"},"categories":{"title":"Danh má»¥c","title_in":"Danh má»¥c - {{categoryName}}","help":"táº¥t cáº£ cÃ¡c chá»§ Äá» ÄÆ°á»£c nhÃ³m theo chuyÃªn má»¥c"},"unread":{"title":"ChÆ°a Äá»c","title_with_count":{"other":"ChÆ°a Äá»c ({{count}})"},"help":"chá»§ Äá» báº¡n Äang xem hoáº·c theo dÃµi cÃ³ bÃ i viáº¿t chÆ°a Äá»c","lower_title_with_count":{"other":"{{count}} chÆ°a Äá»c"}},"new":{"lower_title_with_count":{"other":"{{count}} má»i"},"lower_title":"má»i","title":"Má»i","title_with_count":{"other":"Má»i ({{count}})"},"help":"chá»§ Äá» ÄÃ£ táº¡o cÃ¡ch ÄÃ¢y vÃ i ngÃ y"},"posted":{"title":"BÃ i viáº¿t cá»§a tÃ´i","help":"chá»§ Äá» cá»§a báº¡n ÄÃ£ ÄÆ°á»£c ÄÄng trong"},"bookmarks":{"title":"ÄÃ¡nh dáº¥u","help":"chá»§ Äá» cá»§a báº¡n ÄÃ£ ÄÆ°á»£c ÄÃ¡nh dáº¥u"},"category":{"title":"{{categoryName}}","title_with_count":{"other":"{{categoryName}} ({{count}})"},"help":"Nhá»¯ng chá»§ Äá» má»i nháº¥t trong chuyÃªn má»¥c{{categoryName}} "},"top":{"title":"Top","help":"CÃ¡c chá»§ Äá» tÃ­ch cá»±c nháº¥t trong nÄm, thÃ¡ng, tuáº§n, hoáº·c ngÃ y trÆ°á»c","all":{"title":"Tá»« trÆ°á»c tá»i nay"},"yearly":{"title":"HÃ ng nÄm"},"quarterly":{"title":"HÃ ng quÃ½"},"monthly":{"title":"HÃ ng thÃ¡ng"},"weekly":{"title":"HÃ ng tuáº§n"},"daily":{"title":"HÃ ng ngÃ y"},"all_time":"Tá»« trÆ°á»c tá»i nay","this_year":"NÄm","this_quarter":"QuÃ½","this_month":"ThÃ¡ng","this_week":"Tuáº§n","today":"NgÃ y","other_periods":"xem top"}},"permission_types":{"full":"Táº¡o / Tráº£ lá»i / Xem","create_post":"Tráº£ lá»i / Xem","readonly":"Xem"},"lightbox":{"download":"táº£i vá»"},"keyboard_shortcuts_help":{"title":"PhÃ­m táº¯t","jump_to":{"title":"Nháº£y Äáº¿n","home":"%{shortcut} NhÃ ","latest":"%{shortcut} Cuá»i cÃ¹ng","new":"%{shortcut} Má»i","unread":"%{shortcut} ChÆ°a Äá»c","categories":"%{shortcut} Danh má»¥c","top":"%{shortcut} TrÃªn","bookmarks":"%{shortcut} ÄÃ¡nh dáº¥u","profile":"%{shortcut} Há» sÆ¡","messages":"%{shortcut} Tin nháº¯n"},"navigation":{"title":"Äiá»u hÆ°á»ng","jump":"%{shortcut} Äáº¿n bÃ i viáº¿t #","back":"%{shortcut} Quay láº¡i","up_down":"%{shortcut} Move selection \u0026uarr; \u0026darr;","open":"%{shortcut} Má» chá»§ Äá» ÄÃ£ chá»n","next_prev":"%{shortcut} Next/previous section"},"application":{"title":"á»¨ng dá»¥ng","create":"%{shortcut} Táº¡o má»i chá»§ Äá»","notifications":"%{shortcut} Má» thÃ´ng bÃ¡o","hamburger_menu":"%{shortcut} Má» menu mobile","user_profile_menu":"%{shortcut} Má» trÃ¬nh ÄÆ¡n thÃ nh viÃªn","show_incoming_updated_topics":"%{shortcut} Show updated topics","help":"%{shortcut} Má» trá»£ giÃºp bÃ n phÃ­m","dismiss_new_posts":"%{shortcut} Dismiss New/Posts","dismiss_topics":"%{shortcut} Bá» qua bÃ i viáº¿t","log_out":"%{shortcut} ÄÄng xuáº¥t"},"actions":{"title":"HÃ nh Äá»ng","bookmark_topic":"%{shortcut} Chuyá»n chá»§ Äá» ÄÃ¡nh dáº¥u","pin_unpin_topic":"%{shortcut} Pin/Unpin bÃ i viáº¿t","share_topic":"%{shortcut} Chia sáº» bÃ i viáº¿t","share_post":"%{shortcut} Chia sáº» bÃ i viáº¿t","reply_as_new_topic":"%{shortcut} Tráº£ lá»i nhÆ° lÃ  má»t liÃªn káº¿t Äáº¿n bÃ i viáº¿t","reply_topic":"%{shortcut} Tráº£ lá»i bÃ i viáº¿t","reply_post":"%{shortcut} Tráº£ lá»i bÃ i viáº¿t","quote_post":"%{shortcut} TrÃ­ch dáº«n bÃ i viáº¿t","like":"%{shortcut} ThÃ­ch bÃ i viáº¿t","flag":"%{shortcut} ÄÃ¡nh dáº¥u bÃ i viáº¿t","bookmark":"%{shortcut} ÄÃ¡nh dáº¥u bÃ i viáº¿t","edit":"%{shortcut} Sá»­a bÃ i viáº¿t","delete":"%{shortcut} XÃ³a bÃ i viáº¿t","mark_muted":"%{shortcut} Mute topic","mark_regular":"%{shortcut} Chá»§ Äá» thÃ´ng thÆ°á»ng (máº·c Äá»nh)","mark_tracking":"%{shortcut} Theo dÃµi chá»§ Äá»","mark_watching":"%{shortcut} theo dÃµi chá»§ Äá»"}},"badges":{"earned_n_times":{"other":"ÄÃ£ giÃ nh ÄÆ°á»£c huy hiá»u nÃ y %{count} láº§n"},"granted_on":"Cáº¥p ngÃ y %{date}","others_count":"NgÆ°á»i cÃ³ huy hiá»u nÃ y (%{count})","title":"Huy hiá»u","badge_count":{"other":"%{count} huy hiá»u"},"select_badge_for_title":"Chá»n huy hiá»u Äá» sá»­ dá»¥ng nhÆ° lÃ  tÃªn","none":"(khÃ´ng cÃ³ gÃ¬)","badge_grouping":{"getting_started":{"name":"Báº¯t Äáº§u"},"community":{"name":"Cá»ng Äá»ng"},"trust_level":{"name":"Cáº¥p Äá» tin tÆ°á»ng"},"other":{"name":"KhÃ¡c"},"posting":{"name":"Gá»­i bÃ i"}}},"tagging":{"all_tags":"Táº¥t cáº£ tháº»","selector_all_tags":"táº¥t cáº£ tháº»","selector_no_tags":"khÃ´ng cÃ³ tháº»","changed":"tháº» ÄÃ£ Äá»i:","tags":"Tháº»","add_synonyms":"ThÃªm","delete_tag":"XoÃ¡ tháº»","rename_tag":"Äá»i tÃªn tháº»","rename_instructions":"Chá»n tÃªn má»i cho tháº»:","sort_by":"Xáº¿p theo:","sort_by_count":"Äáº¿m","sort_by_name":"tÃªn","cancel_delete_unused":"Há»§y","filters":{"untagged_without_category":"%{filter} chá»§ Äá» chÆ°a ÄÆ°á»£c gáº¯n tháº»","untagged_with_category":"%{filter} chá»§ Äá» chÆ°a ÄÆ°á»£c gáº¯n tháº» trong %{category}"},"notifications":{"watching":{"title":"Äang theo dÃµi"},"watching_first_post":{"title":"Xem bÃ i viáº¿t Äáº§u tiÃªn"},"tracking":{"title":"Äang theo dÃµi"},"regular":{"title":"ThÆ°á»ng xuyÃªn"},"muted":{"title":"Im láº·ng"}},"groups":{"new":"NhÃ³m má»i","tags_label":"Tháº» trong nhÃ³m nÃ y:","parent_tag_label":"Tháº» cha:","parent_tag_placeholder":"Tuá»³ chá»n","save":"LÆ°u","delete":"XoÃ¡"},"topics":{"none":{"unread":"Báº¡n khÃ´ng cÃ³ chá»§ Äá» chÆ°a Äá»c nÃ y","new":"Báº¡n khÃ´ng cÃ³ chá»§ Äá» má»i","read":"Báº¡n chÆ°a Äá»c chá»§ Äá» nÃ o","posted":"Báº¡n chÆ°a gá»­i bÃ i trong báº¥t kÃ¬ chá»§ Äá» nÃ o","latest":"KhÃ´ng cÃ³ chá»§ Äá» má»i nháº¥t","bookmarks":"Báº¡n chÆ°a chá»§ Äá» nÃ o ÄÆ°á»£c ÄÃ¡nh dáº¥u.","top":"KhÃ´ng cÃ³ chá»§ Äá» top."},"bottom":{"latest":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» nÃ o ná»¯a.","posted":"á» ÄÃ¢y khÃ´ng cÃ³ thÃªm chá»§ Äá» nÃ o ÄÆ°á»£c ÄÄng.","read":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» chÆ°a Äá»c nÃ o ná»¯a.","new":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» má»i nÃ o ná»¯a.","unread":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» chÆ°a Äá»c nÃ o ná»¯a.","top":"KhÃ´ng cÃ²n cá»§a Äá» top nÃ o ná»¯a.","bookmarks":"KhÃ´ng cÃ²n thÃªm chá»§ Äá» ÄÆ°á»£c ÄÃ¡nh dáº¥u nÃ o ná»¯a."}}},"discourse_narrative_bot":{"welcome_post_type":{"new_user_track":"Báº­t hÆ°á»ng dáº«n cho táº¥t cáº£ ngÆ°á»i dÃ¹ng má»i","welcome_message":"Gá»­i tin nháº¯n chÃ o má»«ng cho táº¥t cáº£ thÃ nh viÃªn má»i kÃ¨m theo hÆ°á»ng dáº«n báº¯t Äáº§u."}},"details":{"title":"áº¨n thÃ´ng tin"},"discourse_local_dates":{"create":{"form":{"date_title":"Ã y","time_title":"Thá»i gian","timezone":"MÃºi giá»"}}},"poll":{"voters":{"other":"ngÆ°á»i bÃ¬nh chá»n"},"total_votes":{"other":"tá»ng sá» bÃ¬nh chá»n"},"average_rating":"Trung bÃ¬nh: \u003cstrong\u003e%{average}\u003c/strong\u003e.","public":{"title":"BÃ¬nh chá»n \u003cstrong\u003ecÃ´ng khai\u003c/strong\u003e"},"multiple":{"help":{"at_least_min_options":{"other":"Chá»n Ã­t nháº¥t \u003cstrong\u003e%{count}\u003c/strong\u003e lá»±a chá»n"},"up_to_max_options":{"other":"Chá»n tá»i Äa \u003cstrong\u003e%{count}\u003c/strong\u003e lá»±a chá»n"},"x_options":{"other":"Chá»n \u003cstrong\u003e%{count}\u003c/strong\u003e lá»±a chá»n"},"between_min_and_max_options":"Chá»n giá»¯a \u003cstrong\u003e%{min}\u003c/strong\u003e vÃ  \u003cstrong\u003e%{max}\u003c/strong\u003e lá»±a chá»n."}},"cast-votes":{"title":"Thay Äá»i bÃ¬nh chá»n cá»§a báº¡n","label":"BÃ¬nh chá»n ngay!"},"show-results":{"title":"Hiá»n thá» káº¿t quáº£ thÄm dÃ²","label":"Hiá»n káº¿t quáº£"},"hide-results":{"title":"Trá» láº¡i bÃ¬nh chá»n cá»§a báº¡n"},"export-results":{"label":"Xuáº¥t"},"open":{"title":"Má» thÄm dÃ²","label":"Má»","confirm":"Báº¡n cÃ³ muá»n má» thÄm dÃ² nÃ y?"},"close":{"title":"ÄÃ³ng thÄm dÃ²","label":"ÄÃ³ng","confirm":"Báº¡n cÃ³ muá»n ÄÃ³ng thÄm dÃ² nÃ y ?"},"error_while_toggling_status":"ÄÃ£ cÃ³ lá»i xáº£y ra khi chuyá»n tráº¡ng thÃ¡i cá»§a thÄm dÃ².","error_while_casting_votes":"ÄÃ£ cÃ³ lá»i xáº£y ra lÃ m áº£nh hÆ°á»ng Äáº¿n bÃ¬nh chá»n cá»§a báº¡n.","error_while_fetching_voters":"ÄÃ£ cÃ³ lá»i xáº£y ra khi hiá»n thá» nhá»¯ng ngÆ°á»i tham gia bÃ¬nh chá»n.","ui_builder":{"title":"Táº¡o thÄm dÃ²","insert":"ChÃ¨n thÄm dÃ²","help":{"invalid_values":"GiÃ¡ trá» nhá» nháº¥t pháº£i nhá» hÆ¡n giÃ¡ trá» lá»n nháº¥t.","min_step_value":"Khoáº£ng cÃ¡ch tá»i thiá»u lÃ  1"},"poll_type":{"label":"Loáº¡i","regular":"Má»t lá»±a chá»n","multiple":"Nhiá»u lá»±a chá»n","number":"Xáº¿p háº¡ng"},"poll_result":{"label":"Káº¿t quáº£"},"poll_config":{"max":"Tá»i Äa","min":"Tá»i thiá»u","step":"BÆ°á»c"},"poll_public":{"label":"Hiá»n thá» ngÆ°á»i ÄÃ£ bÃ¬nh chá»n"},"poll_options":{"label":"Nháº­p má»i lá»±a chá»n trong thÄm dÃ² vÃ o má»t dÃ²ng"}}},"presence":{"replying":"Äang tráº£ lá»i","editing":"Äang chá»nh sá»­a"}}},"en_US":{},"en":{"js":{"number":{"human":{"storage_units":{"units":{"byte":{"one":"Byte"}}}}},"dates":{"tiny":{"less_than_x_seconds":{"one":"\u003c %{count}s"},"x_seconds":{"one":"%{count}s"},"less_than_x_minutes":{"one":"\u003c %{count}m"},"x_minutes":{"one":"%{count}m"},"about_x_hours":{"one":"%{count}h"},"x_days":{"one":"%{count}d"},"x_months":{"one":"%{count}mon"},"about_x_years":{"one":"%{count}y"},"over_x_years":{"one":"\u003e %{count}y"},"almost_x_years":{"one":"%{count}y"}},"medium":{"x_minutes":{"one":"%{count} min"},"x_hours":{"one":"%{count} hour"},"x_days":{"one":"%{count} day"}},"medium_with_ago":{"x_minutes":{"one":"%{count} min ago"},"x_hours":{"one":"%{count} hour ago"},"x_days":{"one":"%{count} day ago"},"x_months":{"one":"%{count} month ago"},"x_years":{"one":"%{count} year ago"}},"later":{"x_days":{"one":"%{count} day later"},"x_months":{"one":"%{count} month later"},"x_years":{"one":"%{count} year later"}}},"action_codes":{"forwarded":"forwarded the above email"},"links_lowercase":{"one":"link"},"character_count":{"one":"{{count}} character"},"topic_count_latest":{"one":"See {{count}} new or updated topic"},"topic_count_unread":{"one":"See {{count}} unread topic"},"topic_count_new":{"one":"See {{count}} new topic"},"review":{"topic_has_pending":{"one":"This topic has \u003cb\u003e%{count}\u003c/b\u003e post pending approval"},"user_percentage":{"summary":{"one":"{{agreed}}, {{disagreed}}, {{ignored}} ({{count}} total flag)"},"agreed":{"one":"{{count}}% agree"},"disagreed":{"one":"{{count}}% disagree"},"ignored":{"one":"{{count}}% ignore"}},"topics":{"unique_users":{"one":"%{count} user"}},"replies":{"one":"%{count} reply"},"approval":{"pending_posts":{"one":"You have \u003cstrong\u003e%{count}\u003c/strong\u003e post pending."}}},"directory":{"total_rows":{"one":"%{count} user"}},"groups":{"allow_membership_requests":"Allow users to send membership requests to group owners (Requires publicly visible group)","title":{"one":"Group"}},"categories":{"topic_sentence":{"one":"%{count} topic"},"topic_stat_sentence_week":{"one":"%{count} new topic in the past week."},"topic_stat_sentence_month":{"one":"%{count} new topic in the past month."}},"user":{"user_notifications":{"ignore_duration_note":"Please note that all ignores are automatically removed after the ignore duration expires.","ignore_duration_time_frame_required":"Please select a time frame","ignore_option_title":"You will not receive notifications related to this user and all of their topics and replies will be hidden.","mute_option_title":"You will not receive any notifications related to this user.","normal_option_title":"You will be notified if this user replies to you, quotes you, or mentions you."},"feature_topic_on_profile":{"clear":{"warning":"Are you sure you want to clear your featured topic?"}},"profile_hidden":"This user's public profile is hidden.","desktop_notifications":{"label":"Live Notifications","consent_prompt":"Do you want live notifications when people reply to your posts?"},"text_size_default_on_all_devices":"Make this the default text size on all my devices","allow_private_messages":"Allow other users to send me personal messages","enable_defer":"Enable defer to mark topics unread","featured_topic":"Featured Topic","silenced_tooltip":"This user is silenced","mailing_list_mode":{"warning":"Mailing list mode enabled. Email notification settings are overridden."},"tracked_categories_instructions":"You will automatically track all topics in these categories. A count of new posts will appear next to the topic.","muted_categories_instructions":"You will not be notified of anything about new topics in these categories, and they will not appear on the categories or latest pages.","muted_categories_instructions_dont_hide":"You will not be notified of anything about new topics in these categories.","no_category_access":"As a moderator you have limited category access, save is disabled.","delete_yourself_not_allowed":"Please contact a staff member if you wish your account to be deleted.","ignored_users_instructions":"Suppress all posts and notifications from these users.","staged":"Staged","second_factor_backup":{"title":"Two Factor Backup Codes","manage":"Manage backup codes. You have \u003cstrong\u003e{{count}}\u003c/strong\u003e backup codes remaining.","enable_prerequisites":"You must enable a primary second factor before generating backup codes.","codes":{"title":"Backup Codes Generated","description":"Each of these backup codes can only be used once. Keep them somewhere safe but accessible."}},"second_factor":{"enable":"Manage Two Factor Authentication","forgot_password":"Forgot password?","confirm_password_description":"Please confirm your password to continue","label":"Code","rate_limit":"Please wait before trying another authentication code.","enable_description":"Scan this QR code in a supported app (\u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+android\" target=\"_blank\"\u003eAndroid\u003c/a\u003e â \u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+ios\" target=\"_blank\"\u003eiOS\u003c/a\u003e) and enter your authentication code.\n","disable_description":"Please enter the authentication code from your app","short_description":"Protect your account with one-time use security codes.\n","extended_description":"Two factor authentication adds extra security to your account by requiring a one-time token in addition to your password. Tokens can be generated on \u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+android\" target='_blank'\u003eAndroid\u003c/a\u003e and \u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+ios\"\u003eiOS\u003c/a\u003e devices.\n","use":"Use Authenticator app","enforced_notice":"You are required to enable two factor authentication before accessing this site.","disable":"disable","disable_title":"Disable Second Factor","disable_confirm":"Are you sure you want to disable all second factors?","edit_title":"Edit Second Factor","edit_description":"Second Factor Name","enable_security_key_description":"When you have your physical security key prepared press the Register button below.","totp":{"title":"Token-Based Authenticators","add":"New Authenticator"},"security_key":{"register":"Register","title":"Security Keys","add":"Register Security Key","default_name":"Main Security Key","not_allowed_error":"The security key registration process either timed out or was cancelled.","already_added_error":"You have already registered this security key. You donât have to register it again.","edit":"Edit Security Key","edit_description":"Security Key Name"}},"change_username":{"confirm":"Are you absolutely sure you want to change your username?"},"change_email":{"success_staff":"We've sent an email to your current address. Please follow the confirmation instructions."},"change_avatar":{"gravatar_failed":"We could not find a Gravatar with that email address."},"change_profile_background":{"title":"Profile Header","instructions":"Profile headers will be centered and have a default width of 1110px."},"change_featured_topic":{"title":"Featured Topic","instructions":"A link to this topic will be on your user card, and profile."},"email":{"sso_override_instructions":"Email can be updated from SSO provider.","frequency":{"one":"We'll only email you if we haven't seen you in the last minute."}},"associated_accounts":{"title":"Associated Accounts","confirm_description":{"account_specific":"Your %{provider} account '%{account_description}' will be used for authentication.","generic":"Your %{provider} account will be used for authentication."}},"auth_tokens":{"was_this_you_description":"If it wasnât you, we recommend you change your password and log out everywhere.","browser_and_device":"{{browser}} on {{device}}"},"hide_profile_and_presence":"Hide my public profile and presence features","enable_physical_keyboard":"Enable physical keyboard support on iPad","title_count_mode":{"title":"Background page title displays count of:"},"email_digests":{"title":"When I donât visit here, send me an email summary of popular topics and replies"},"email_level":{"only_when_away":"only when away"},"notification_level_when_replying":"When I post in a topic, set that topic to","invited":{"truncated":{"one":"Showing the first invite."},"rescind_all":"Remove all Expired Invites","rescinded_all":"All Expired Invites removed!","rescind_all_confirm":"Are you sure you want to remove all expired invites?","bulk_invite":{"none":"You haven't invited anyone here yet. Send individual invites, or invite many people at once by \u003ca href='https://meta.discourse.org/t/send-bulk-invites/16468'\u003euploading a CSV file\u003c/a\u003e.","confirmation_message":"Youâre about to email invites to everyone in the uploaded file."}},"summary":{"topic_count":{"one":"topic created"},"post_count":{"one":"post created"},"likes_given":{"one":"given"},"likes_received":{"one":"received"},"days_visited":{"one":"day visited"},"topics_entered":{"one":"topic viewed"},"posts_read":{"one":"post read"},"bookmark_count":{"one":"bookmark"},"most_replied_to_users":"Most Replied To","no_likes":"No likes yet.","top_categories":"Top Categories"}},"too_few_topics_and_posts_notice":"Let's \u003ca href='https://blog.discourse.org/2014/08/building-a-discourse-community/'\u003estart the discussion!\u003c/a\u003e There are \u003cstrong\u003e%{currentTopics}\u003c/strong\u003e topics and \u003cstrong\u003e%{currentPosts}\u003c/strong\u003e posts. Visitors need more to read and reply to â we recommend at least \u003cstrong\u003e%{requiredTopics}\u003c/strong\u003e topics and \u003cstrong\u003e%{requiredPosts}\u003c/strong\u003e posts. Only staff can see this message.","too_few_topics_notice":"Let's \u003ca href='https://blog.discourse.org/2014/08/building-a-discourse-community/'\u003estart the discussion!\u003c/a\u003e There are \u003cstrong\u003e%{currentTopics}\u003c/strong\u003e topics. Visitors need more to read and reply to â we recommend at least \u003cstrong\u003e%{requiredTopics}\u003c/strong\u003e topics. Only staff can see this message.","too_few_posts_notice":"Let's \u003ca href='https://blog.discourse.org/2014/08/building-a-discourse-community/'\u003estart the discussion!\u003c/a\u003e There are \u003cstrong\u003e%{currentPosts}\u003c/strong\u003e posts. Visitors need more to read and reply to â we recommend at least \u003cstrong\u003e%{requiredPosts}\u003c/strong\u003e posts. Only staff can see this message.","logs_error_rate_notice":{},"time_read_recently":"%{time_read} recently","time_read_tooltip":"%{time_read} total time read","time_read_recently_tooltip":"%{time_read} total time read (%{recent_time_read} in the last 60 days)","replies_lowercase":{"one":"reply"},"signup_cta":{"intro":"Hello! Looks like youâre enjoying the discussion, but you havenât signed up for an account yet.","value_prop":"When you create an account, we remember exactly what youâve read, so you always come right back where you left off. You also get notifications, here and via email, whenever someone replies to you. And you can like posts to share the love. :heartpulse:"},"private_message_info":{"invite":"Invite Others ...","leave_message":"Do you really want to leave this message?"},"forgot_password":{"complete_username_found":"We found an account that matches the username \u003cb\u003e%{username}\u003c/b\u003e. You should receive an email with instructions on how to reset your password shortly.","complete_email_found":"We found an account that matches \u003cb\u003e%{email}\u003c/b\u003e. You should receive an email with instructions on how to reset your password shortly.","help":"Email not arriving? Be sure to check your spam folder first.\u003cp\u003eNot sure which email address you used? Enter an email address and weâll let you know if it exists here.\u003c/p\u003e\u003cp\u003eIf you no longer have access to the email address on your account, please contact \u003ca href='%{basePath}/about'\u003eour helpful staff.\u003c/a\u003e\u003c/p\u003e"},"email_login":{"logging_in_as":"Logging in as %{email}"},"login":{"second_factor_backup":"Log in using a backup code","second_factor_backup_title":"Two Factor Backup","second_factor_backup_description":"Please enter one of your backup codes:","second_factor":"Log in using Authenticator app","security_key_description":"When you have your physical security key prepared press the Authenticate with Security Key button below.","security_key_alternative":"Try another way","security_key_authenticate":"Authenticate with Security Key","security_key_not_allowed_error":"The security key authentication process either timed out or was cancelled.","security_key_no_matching_credential_error":"No matching credentials could be found in the provided security key.","security_key_support_missing_error":"Your current device or browser does not support the use of security keys. Please use a different method.","cookies_error":"Your browser seems to have cookies disabled. You might not be able to log in without enabling them first.","omniauth_disallow_totp":"Your account has two factor authentication enabled. Please log in with your password.","sent_activation_email_again_generic":"We sent another activation email. It might take a few minutes for it to arrive; be sure to check your spam folder.","discord":{"title":"with Discord"},"second_factor_toggle":{"totp":"Use an authenticator app instead","backup_code":"Use a backup code instead"}},"invites":{"success":"Your account has been created and you're now logged in."},"emoji_set":{"emoji_one":"JoyPixels (formerly EmojiOne)"},"category_page_style":{"categories_boxes":"Boxes with Subcategories","categories_boxes_with_topics":"Boxes with Featured Topics"},"category_row":{"topic_count":"{{count}} topics in this category"},"select_kit":{"max_content_reached":{"one":"You can only select {{count}} item.","other":"You can only select {{count}} items."},"min_content_not_reached":{"one":"Select at least {{count}} item.","other":"Select at least {{count}} items."},"invalid_selection_length":"Selection must be at least {{count}} characters."},"date_time_picker":{"errors":{"to_before_from":"To date must be later than from date."}},"emoji_picker":{"smileys_\u0026_emotion":"Smileys and Emotion","people_\u0026_body":"People and Body","animals_\u0026_nature":"Animals and Nature","food_\u0026_drink":"Food and Drink","travel_\u0026_places":"Travel and Places","symbols":"Symbols","custom":"Custom emojis","recent":"Recently used","default_tone":"No skin tone","light_tone":"Light skin tone","medium_light_tone":"Medium light skin tone","medium_tone":"Medium skin tone","medium_dark_tone":"Medium dark skin tone","dark_tone":"Dark skin tone"},"shared_drafts":{"title":"Shared Drafts","notice":"This topic is only visible to those who can see the \u003cb\u003e{{category}}\u003c/b\u003e category.","destination_category":"Destination Category","publish":"Publish Shared Draft","confirm_publish":"Are you sure you want to publish this draft?"},"composer":{"toggle_unlisted":"Toggle Unlisted","group_mentioned_limit":"\u003cb\u003eWarning!\u003c/b\u003e You mentioned \u003ca href='{{group_link}}'\u003e{{group}}\u003c/a\u003e, however this group has more members than the administrator configured mention limit of {{max}} users. Nobody will be notified.","group_mentioned":{"one":"By mentioning {{group}}, you are about to notify \u003ca href='{{group_link}}'\u003e%{count} person\u003c/a\u003e â are you sure?","other":"By mentioning {{group}}, you are about to notify \u003ca href='{{group_link}}'\u003e{{count}} people\u003c/a\u003e â are you sure?"},"cannot_see_mention":{"category":"You mentioned {{username}} but they won't be notified because they do not have access to this category. You will need to add them to a group that has access to this category.","private":"You mentioned {{username}} but they won't be notified because they are unable to see this personal message. You will need to invite them to this PM."},"duplicate_link":"It looks like your link to \u003cb\u003e{{domain}}\u003c/b\u003e was already posted in the topic by \u003cb\u003e@{{username}}\u003c/b\u003e in \u003ca href='{{post_url}}'\u003ea reply on {{ago}}\u003c/a\u003e â are you sure you want to post it again?","reference_topic_title":"RE: {{title}}","error":{"post_missing":"Post canât be empty","try_like":"Have you tried the {{heart}} button?","tags_missing":"You must choose at least {{count}} tags","topic_template_not_modified":"Please add details and specifics to your topic by editing the topic template."},"overwrite_edit":"Overwrite Edit","create_whisper":"Whisper","create_shared_draft":"Create Shared Draft","edit_shared_draft":"Edit Shared Draft","topic_featured_link_placeholder":"Enter link shown with title.","remove_featured_link":"Remove link from topic.","reply_placeholder_no_images":"Type here. Use Markdown, BBCode, or HTML to format.","reply_placeholder_choose_category":"Select a category before typing here.","saved_draft":"Post draft in progress. Tap to resume.","link_url_placeholder":"Paste a URL or type to search topics","toggle_direction":"Toggle Direction","collapse":"minimize the composer panel","open":"open the composer panel","abandon":"close composer and discard draft","enter_fullscreen":"enter fullscreen composer","exit_fullscreen":"exit fullscreen composer","yourself_confirm":{"body":"Right now this message is only being sent to yourself!"},"composer_actions":{"draft":"Draft","reply_to_post":{"label":"Reply to post %{postNumber} by %{postUsername}","desc":"Reply to a specific post"},"reply_as_new_topic":{"label":"Reply as linked topic","desc":"Create a new topic linked to this topic","confirm":"You have a new topic draft saved, which will be overwritten if you create a linked topic."},"reply_as_private_message":{"label":"New message","desc":"Create a new personal message"},"reply_to_topic":{"label":"Reply to topic","desc":"Reply to the topic, not any specific post"},"toggle_whisper":{"label":"Toggle whisper","desc":"Whispers are only visible to staff members"},"shared_draft":{"label":"Shared Draft","desc":"Draft a topic that will only be visible to staff"},"toggle_topic_bump":{"label":"Toggle topic bump","desc":"Reply without changing latest reply date"}},"details_text":"This text will be hidden"},"notifications":{"tooltip":{"regular":{"one":"%{count} unseen notification","other":"{{count}} unseen notifications"},"message":{"one":"%{count} unread message","other":"{{count}} unread messages"}},"reviewable_items":"items requiring review","mentioned":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","group_mentioned":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","quoted":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","replied":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","posted":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","edited":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","liked":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","liked_2":"\u003cspan\u003e{{username}}, {{username2}}\u003c/span\u003e {{description}}","liked_many":{"one":"\u003cspan\u003e{{username}}, {{username2}} and %{count} other\u003c/span\u003e {{description}}","other":"\u003cspan\u003e{{username}}, {{username2}} and {{count}} others\u003c/span\u003e {{description}}"},"liked_consolidated_description":{"one":"liked {{count}} of your posts"},"liked_consolidated":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","private_message":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","invited_to_topic":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","linked":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","granted_badge":"Earned '{{description}}'","topic_reminder":"\u003cspan\u003e{{username}}\u003c/span\u003e {{description}}","watching_first_post":"\u003cspan\u003eNew Topic\u003c/span\u003e {{description}}","membership_request_accepted":"Membership accepted in '{{group_name}}'","membership_request_consolidated":"{{count}} open membership requests for '{{group_name}}'","group_message_summary":{"one":"{{count}} message in your {{group_name}} inbox","other":"{{count}} messages in your {{group_name}} inbox"},"popup":{"private_message":"{{username}} sent you a personal message in \"{{topic}}\" - {{site_title}}","watching_first_post":"{{username}} created a new topic \"{{topic}}\" - {{site_title}}","confirm_title":"Notifications enabled - %{site_title}","confirm_body":"Success! Notifications have been enabled.","custom":"Notification from {{username}} on %{site_title}"},"titles":{"mentioned":"mentioned","replied":"new reply","quoted":"quoted","edited":"edited","liked":"new like","private_message":"new private message","invited_to_private_message":"invited to private message","invitee_accepted":"invite accepted","posted":"new post","moved_post":"post moved","linked":"linked","granted_badge":"badge granted","invited_to_topic":"invited to topic","group_mentioned":"group mentioned","group_message_summary":"new group messages","topic_reminder":"topic reminder","liked_consolidated":"new likes","post_approved":"post approved","membership_request_consolidated":"new membership requests"}},"search":{"result_count":{"one":"\u003cspan\u003e%{count} result for\u003c/span\u003e\u003cspan class='term'\u003e{{term}}\u003c/span\u003e"},"full_page_title":"search topics or posts","more_results":"There are more results. Please narrow your search criteria.","cant_find":"Canât find what youâre looking for?","start_new_topic":"Perhaps start a new topic?","or_search_google":"Or try searching with Google instead:","search_google":"Try searching with Google instead:","context":{"category":"Search the #{{category}} category","tag":"Search the #{{tag}} tag"},"advanced":{"in_category":{"label":"Categorized"},"with_tags":{"label":"Tagged"},"filters":{"label":"Only return topics/posts...","created":"I created","watching":"I'm watching","tracking":"I'm tracking","private":"In my messages","bookmarks":"I bookmarked","first":"are the very first post","seen":"I read","images":"include image(s)","all_tags":"All the above tags"},"statuses":{"label":"Where topics","public":"are public"}}},"view_all":"view all","topics":{"bulk":{"relist_topics":"Relist Topics","change_category":"Set Category","selected":{"one":"You have selected \u003cb\u003e%{count}\u003c/b\u003e topic."},"change_tags":"Replace Tags","append_tags":"Append Tags","choose_append_tags":"Choose new tags to append for these topics:","changed_tags":"The tags of those topics were changed."}},"topic":{"filter_to":{"one":"%{count} post in topic","other":"{{count}} posts in topic"},"open_draft":"Open Draft","edit_message":{"help":"Edit first post of the message","title":"Edit Message"},"defer":{"help":"Mark as unread"},"feature_on_profile":{"help":"Add a link to this topic on your user card and profile","title":"Feature On Profile"},"remove_from_profile":{"warning":"Your profile already has a featured topic. If you continue, this topic will replace the existing topic.","help":"Remove the link to this topic on your user profile","title":"Remove From Profile"},"new_topics":{"one":"%{count} new topic"},"unread_topics":{"one":"%{count} unread topic"},"total_unread_posts":{"one":"you have %{count} unread post in this topic"},"unread_posts":{"one":"you have %{count} unread old post in this topic"},"new_posts":{"one":"there is %{count} new post in this topic since you last read it"},"likes":{"one":"there is %{count} like in this topic"},"group_request":"You need to request membership to the `{{name}}` group to see this topic","group_join":"You need join the `{{name}}` group to see this topic","group_request_sent":"Your group membership request has been sent. You will be informed when it's accepted.","unread_indicator":"No member has read the last post of this topic yet.","topic_status_update":{"title":"Topic Timer","save":"Set Timer","publish_to":"Publish To:","public_timer_types":"Topic Timers","private_timer_types":"User Topic Timers","time_frame_required":"Please select a time frame"},"auto_update_input":{"none":"Select a timeframe","later_today":"Later today","later_this_week":"Later this week","two_weeks":"Two Weeks","two_months":"Two Months","three_months":"Three Months","four_months":"Four Months","six_months":"Six Months","one_year":"One Year","forever":"Forever","set_based_on_last_post":"Close based on last post"},"publish_to_category":{"title":"Schedule Publishing"},"temp_open":{"title":"Open Temporarily"},"auto_reopen":{"title":"Auto-open Topic"},"auto_close":{"title":"Auto-Close Topic","label":"Auto-close topic hours:"},"auto_delete":{"title":"Auto-Delete Topic"},"auto_bump":{"title":"Auto-Bump Topic"},"status_update_notice":{"auto_publish_to_category":"This topic will be published to \u003ca href=%{categoryUrl}\u003e#%{categoryName}\u003c/a\u003e %{timeLeft}.","auto_delete":"This topic will be automatically deleted %{timeLeft}.","auto_bump":"This topic will be automatically bumped %{timeLeft}.","auto_reminder":"You will be reminded about this topic %{timeLeft}."},"auto_close_immediate":{"one":"The last post in the topic is already %{count} hour old, so the topic will be closed immediately.","other":"The last post in the topic is already %{count} hours old, so the topic will be closed immediately."},"timeline":{"back_description":"Go back to your last unread post"},"progress":{"jump_prompt_long":"Jump to...","jump_prompt_to_date":"to date"},"notifications":{"title":"change how often you get notified about this topic","reasons":{"mailing_list_mode":"You have mailing list mode enabled, so you will be notified of replies to this topic via email.","3_10":"You will receive notifications because you are watching a tag on this topic.","2_4":"You will see a count of new replies because you posted a reply to this topic.","2_2":"You will see a count of new replies because you are tracking this topic."}},"actions":{"timed_update":"Set Topic Timer...","make_private":"Make Personal Message","reset_bump_date":"Reset Bump Date"},"share":{"extended_title":"Share a link"},"print":{"help":"Open a printer friendly version of this topic"},"make_public":{"title":"Convert to Public Topic","choose_category":"Please choose a category for the public topic:"},"feature_topic":{"already_pinned":{"one":"Topics currently pinned in {{categoryLink}}: \u003cstrong class='badge badge-notification unread'\u003e%{count}\u003c/strong\u003e"},"already_pinned_globally":{"one":"Topics currently pinned globally: \u003cstrong class='badge badge-notification unread'\u003e%{count}\u003c/strong\u003e"}},"automatically_add_to_groups":"This invite also includes access to these groups:","invite_private":{"success_group":"We've invited that group to participate in this message."},"invite_reply":{"success_existing_email":"A user with email \u003cb\u003e{{emailOrUsername}}\u003c/b\u003e already exists. We've invited that user to participate in this topic."},"filters":{"n_posts":{"one":"%{count} post"}},"move_to":{"title":"Move to","action":"move to","error":"There was an error moving posts."},"split_topic":{"topic_name":"New Topic Title","instructions":{"one":"You are about to create a new topic and populate it with the post you've selected."}},"merge_topic":{"radio_label":"Existing Topic","instructions":{"one":"Please choose the topic you'd like to move that post to."}},"move_to_new_message":{"title":"Move to New Message","action":"move to new message","message_title":"New Message Title","participants":"Participants","instructions":{"one":"You are about to create a new message and populate it with the post you've selected.","other":"You are about to create a new message and populate it with the \u003cb\u003e{{count}}\u003c/b\u003e posts you've selected."}},"move_to_existing_message":{"title":"Move to Existing Message","action":"move to existing message","radio_label":"Existing Message","participants":"Participants","instructions":{"one":"Please choose the message you'd like to move that post to.","other":"Please choose the message you'd like to move those \u003cb\u003e{{count}}\u003c/b\u003e posts to."}},"merge_posts":{"title":"Merge Selected Posts","action":"merge selected posts","error":"There was an error merging the selected posts."},"change_owner":{"title":"Change Owner","instructions":{"one":"Please choose a new owner for the post by \u003cb\u003e@{{old_user}}\u003c/b\u003e","other":"Please choose a new owner for the {{count}} posts by \u003cb\u003e@{{old_user}}\u003c/b\u003e"}},"change_timestamp":{"title":"Change Timestamp..."},"multi_select":{"select_post":{"title":"Add post to selection"},"selected_post":{"label":"selected","title":"Click to remove post from selection"},"select_replies":{"title":"Add post and all its replies to selection"},"select_below":{"label":"select +below","title":"Add post and all after it to selection"},"description":{"one":"You have selected \u003cb\u003e%{count}\u003c/b\u003e post."}},"deleted_by_author":{"one":"(topic withdrawn by author, will be automatically deleted in %{count} hour unless flagged)","other":"(topic withdrawn by author, will be automatically deleted in %{count} hours unless flagged)"}},"post":{"ignored":"Ignored content","wiki_last_edited_on":"wiki last edited on","reply_as_new_private_message":"Reply as new message to the same recipients","show_hidden":"View ignored content.","deleted_by_author":{"one":"(post withdrawn by author, will be automatically deleted in %{count} hour unless flagged)"},"collapse":"collapse","locked":"a staff member has locked this post from being edited","gap":{"one":"view %{count} hidden reply"},"notice":{"new_user":"This is the first time {{user}} has posted â letâs welcome them to our community!","returning_user":"Itâs been a while since weâve seen {{user}} â their last post was {{time}}."},"has_replies":{"one":"{{count}} Reply"},"has_likes_title":{"one":"%{count} person liked this post"},"has_likes_title_you":{"one":"you and %{count} other person liked this post"},"errors":{"file_too_large":"Sorry, that file is too big (maximum size is {{max_size_kb}}kb). Why not upload your large file to a cloud sharing service, then paste the link?","too_many_dragged_and_dropped_files":"Sorry, you can only upload {{max}} files at a time.","upload_not_authorized":"Sorry, the file you are trying to upload is not authorized (authorized extensions: {{authorized_extensions}})."},"abandon_edit":{"confirm":"Are you sure you want to discard your changes?","no_save_draft":"No, save draft","yes_value":"Yes, discard edit"},"abandon":{"no_save_draft":"No, save draft"},"via_auto_generated_email":"this post arrived via an auto generated email","controls":{"read_indicator":"members who read this post","delete_replies":{"confirm":"Do you also want to delete the replies to this post?","direct_replies":{"one":"Yes, and %{count} direct reply","other":"Yes, and {{count}} direct replies"},"all_replies":{"one":"Yes, and %{count} reply","other":"Yes, and all {{count}} replies"}},"lock_post":"Lock Post","lock_post_description":"prevent the poster from editing this post","unlock_post":"Unlock Post","unlock_post_description":"allow the poster to edit this post","delete_topic_disallowed_modal":"You don't have permission to delete this topic. If you really want it to be deleted, submit a flag for moderator attention together with reasoning.","delete_topic_disallowed":"you don't have permission to delete this topic","add_post_notice":"Add Staff Notice","remove_post_notice":"Remove Staff Notice","remove_timer":"remove timer"},"actions":{"defer_flags":{"one":"Ignore flag","other":"Ignore flags"},"people":{"like":{"one":"liked this","other":"liked this"},"read":{"one":"read this","other":"read this"},"like_capped":{"one":"and {{count}} other liked this","other":"and {{count}} others liked this"},"read_capped":{"one":"and {{count}} other read this","other":"and {{count}} others read this"}}},"delete":{"confirm":{"one":"Are you sure you want to delete that post?","other":"Are you sure you want to delete those {{count}} posts?"}},"merge":{"confirm":{"one":"Are you sure you want to merge those posts?","other":"Are you sure you want to merge those {{count}} posts?"}},"revisions":{"controls":{"comparing_previous_to_current_out_of_total":"\u003cstrong\u003e{{previous}}\u003c/strong\u003e {{icon}} \u003cstrong\u003e{{current}}\u003c/strong\u003e / {{total}}"}},"raw_email":{"displays":{"raw":{"title":"Show the raw email"},"text_part":{"title":"Show the text part of the email"},"html_part":{"title":"Show the html part of the email"}}},"bookmarks":{"create":"Create bookmark","name_placeholder":"Name the bookmark to help jog your memory","set_reminder":"Set a reminder","actions":{"delete_bookmark":{"name":"Delete bookmark","description":"Removes the bookmark from your profile and stops all reminders for the bookmark"}}}},"category":{"choose":"category\u0026hellip;","edit_dialog_title":"Edit: %{categoryName}","tags_allowed_tags":"Restrict these tags to this category:","tags_allowed_tag_groups":"Restrict these tag groups to this category:","tags_tab_description":"Tags and tag groups specified above will only be available in this category and other categories that also specify them. They won't be available for use in other categories.","tag_groups_placeholder":"(Optional) list of allowed tag groups","manage_tag_groups_link":"Manage tag groups here.","allow_global_tags_label":"Also allow other tags","tag_group_selector_placeholder":"(Optional) Tag group","required_tag_group_description":"Require new topics to have tags from a tag group:","min_tags_from_required_group_label":"Num Tags:","required_tag_group_label":"Tag group:","topic_featured_link_allowed":"Allow featured links in this category","uncategorized_security_warning":"This category is special. It is intended as holding area for topics that have no category; it cannot have security settings.","uncategorized_general_warning":"This category is special. It is used as the default category for new topics that do not have a category selected. If you want to prevent this behavior and force category selection, \u003ca href=\"%{settingLink}\"\u003eplease disable the setting here\u003c/a\u003e. If you want to change the name or description, go to \u003ca href=\"%{customizeLink}\"\u003eCustomize / Text Content\u003c/a\u003e.","pending_permission_change_alert":"You haven't added %{group} to this category; click this button to add them.","mailinglist_mirror":"Category mirrors a mailing list","show_subcategory_list":"Show subcategory list above topics in this category.","num_featured_topics":"Number of topics shown on the categories page:","subcategory_num_featured_topics":"Number of featured topics on parent category's page:","all_topics_wiki":"Make new topics wikis by default","subcategory_list_style":"Subcategory List Style:","sort_order":"Topic List Sort By:","default_view":"Default Topic List:","default_top_period":"Default Top Period:","reviewable_by_group":"In addition to staff, posts and flags in this category can be also be reviewed by:","require_topic_approval":"Require moderator approval of all new topics","require_reply_approval":"Require moderator approval of all new replies","position":"Position on the categories page:","minimum_required_tags":"Minimum number of tags required in a topic:","num_auto_bump_daily":"Number of open topics to automatically bump daily:","navigate_to_first_post_after_read":"Navigate to first post after topics are read","notifications":{"watching":{"description":"You will automatically watch all topics in these categories. You will be notified of every new post in every topic, and a count of new replies will be shown."},"watching_first_post":{"description":"You will be notified of new topics in this category but not replies to the topics."},"tracking":{"description":"You will automatically track all topics in these categories. You will be notified if someone mentions your @name or replies to you, and a count of new replies will be shown."}},"search_priority":{"label":"Search Priority","options":{"very_low":"Very Low","low":"Low","very_high":"Very High"}},"sort_options":{"op_likes":"Original Post Likes"},"subcategory_list_styles":{"rows":"Rows","rows_with_featured_topics":"Rows with featured topics","boxes":"Boxes","boxes_with_featured_topics":"Boxes with featured topics"},"settings_sections":{"moderation":"Moderation","appearance":"Appearance"}},"flagging":{"custom_message":{"at_least":{"one":"enter at least %{count} character"},"more":{"one":"%{count} to go...","other":"{{count}} to go..."},"left":{"one":"%{count} remaining"}}},"topic_map":{"clicks":{"one":"%{count} click"}},"post_links":{"about":"expand more links for this post","title":{"one":"%{count} more"}},"topic_statuses":{"personal_message":{"title":"This topic is a personal message"}},"views_lowercase":{"one":"view"},"views_long":{"one":"this topic has been viewed %{count} time"},"likes_lowercase":{"one":"like"},"users_lowercase":{"one":"user"},"raw_email":{"title":"Incoming Email"},"filters":{"latest":{"title_with_count":{"one":"Latest (%{count})"}},"unread":{"title_with_count":{"one":"Unread (%{count})"},"lower_title_with_count":{"one":"%{count} unread"}},"new":{"lower_title_with_count":{"one":"%{count} new"},"title_with_count":{"one":"New (%{count})"}},"category":{"title_with_count":{"one":"{{categoryName}} (%{count})"}}},"browser_update":"Unfortunately, \u003ca href=\"https://www.discourse.org/faq/#browser\"\u003eyour browser is too old to work on this site\u003c/a\u003e. Please \u003ca href=\"https://browsehappy.com\"\u003eupgrade your browser\u003c/a\u003e.","lightbox":{"previous":"Previous (Left arrow key)","next":"Next (Right arrow key)","counter":"%curr% of %total%","close":"Close (Esc)","content_load_error":"\u003ca href=\"%url%\"\u003eThe content\u003c/a\u003e could not be loaded.","image_load_error":"\u003ca href=\"%url%\"\u003eThe image\u003c/a\u003e could not be loaded."},"keyboard_shortcuts_help":{"shortcut_key_delimiter_comma":", ","shortcut_key_delimiter_plus":"+","shortcut_delimiter_or":"%{shortcut1} or %{shortcut2}","shortcut_delimiter_slash":"%{shortcut1}/%{shortcut2}","shortcut_delimiter_space":"%{shortcut1} %{shortcut2}","jump_to":{"drafts":"%{shortcut} Drafts"},"navigation":{"go_to_unread_post":"%{shortcut} Go to the first unread post"},"application":{"search":"%{shortcut} Search"},"composing":{"title":"Composing","return":"%{shortcut} Return to composer","fullscreen":"%{shortcut} Fullscreen composer"},"actions":{"print":"%{shortcut} Print topic","defer":"%{shortcut} Defer topic","topic_admin_actions":"%{shortcut} Open topic admin actions"}},"badges":{"earned_n_times":{"one":"Earned this badge %{count} time"},"allow_title":"You can use this badge as a title","multiple_grant":"You can earn this multiple times","badge_count":{"one":"%{count} Badge"},"more_badges":{"one":"+%{count} More","other":"+%{count} More"},"granted":{"one":"%{count} granted","other":"%{count} granted"},"successfully_granted":"Successfully granted %{badge} to %{username}"},"tagging":{"other_tags":"Other Tags","choose_for_topic":"optional tags","info":"Info","default_info":"This tag isn't restricted to any categories, and has no synonyms.","category_restricted":"This tag is restricted to categories you don't have permission to access.","synonyms":"Synonyms","synonyms_description":"When the following tags are used, they will be replaced with \u003cb\u003e%{base_tag_name}\u003c/b\u003e.","tag_groups_info":{"one":"This tag belongs to the group \"{{tag_groups}}\".","other":"This tag belongs to these groups: {{tag_groups}}."},"category_restrictions":{"one":"It can only be used in this category:","other":"It can only be used in these categories:"},"edit_synonyms":"Manage Synonyms","add_synonyms_label":"Add synonyms:","add_synonyms_explanation":{"one":"Any place that currently uses this tag will be changed to use \u003cb\u003e%{tag_name}\u003c/b\u003e instead. Are you sure you want to make this change?","other":"Any place that currently uses these tags will be changed to use \u003cb\u003e%{tag_name}\u003c/b\u003e instead. Are you sure you want to make this change?"},"add_synonyms_failed":"The following tags couldn't be added as synonyms: \u003cb\u003e%{tag_names}\u003c/b\u003e. Ensure they don't have synonyms and aren't synonyms of another tag.","remove_synonym":"Remove Synonym","delete_synonym_confirm":"Are you sure you want to delete the synonym \"%{tag_name}\"?","delete_confirm":{"one":"Are you sure you want to delete this tag and remove it from %{count} topic it is assigned to?","other":"Are you sure you want to delete this tag and remove it from {{count}} topics it is assigned to?"},"delete_confirm_no_topics":"Are you sure you want to delete this tag?","delete_confirm_synonyms":{"one":"Its synonym will also be deleted.","other":"Its {{count}} synonyms will also be deleted."},"manage_groups":"Manage Tag Groups","manage_groups_description":"Define groups to organize tags","upload":"Upload Tags","upload_description":"Upload a csv file to create tags in bulk","upload_instructions":"One per line, optionally with a tag group in the format 'tag_name,tag_group'.","upload_successful":"Tags uploaded successfully","delete_unused_confirmation":{"one":"%{count} tag will be deleted: %{tags}","other":"%{count} tags will be deleted: %{tags}"},"delete_unused_confirmation_more_tags":{"one":"%{tags} and %{count} more","other":"%{tags} and %{count} more"},"delete_unused":"Delete Unused Tags","delete_unused_description":"Delete all tags which are not attached to any topics or personal messages","filters":{"without_category":"%{filter} %{tag} topics","with_category":"%{filter} %{tag} topics in %{category}"},"notifications":{"watching":{"description":"You will automatically watch all topics with this tag. You will be notified of all new posts and topics, plus the count of unread and new posts will also appear next to the topic."},"watching_first_post":{"description":"You will be notified of new topics in this tag but not replies to the topics."},"tracking":{"description":"You will automatically track all topics with this tag. A count of unread and new posts will appear next to the topic."},"regular":{"description":"You will be notified if someone mentions your @name or replies to your post."},"muted":{"description":"You will not be notified of anything about new topics with this tag, and they will not appear on your unread tab."}},"groups":{"title":"Tag Groups","about":"Add tags to groups to manage them more easily.","tags_placeholder":"tags","parent_tag_description":"Tags from this group can't be used unless the parent tag is present.","one_per_topic_label":"Limit one tag per topic from this group","new_name":"New Tag Group","name_placeholder":"Tag Group Name","confirm_delete":"Are you sure you want to delete this tag group?","everyone_can_use":"Tags can be used by everyone","usable_only_by_staff":"Tags are visible to everyone, but only staff can use them","visible_only_to_staff":"Tags are visible only to staff"}},"invite":{"custom_message":"Make your invite a little bit more personal by writing a \u003ca href\u003ecustom message\u003c/a\u003e.","custom_message_placeholder":"Enter your custom message","custom_message_template_forum":"Hey, you should join this forum!","custom_message_template_topic":"Hey, I thought you might enjoy this topic!"},"forced_anonymous":"Due to extreme load, this is temporarily being shown to everyone as a logged out user would see it.","safe_mode":{"enabled":"Safe mode is enabled, to exit safe mode close this browser window"},"discourse_internet_explorer":{"deprecation_warning":"This site will soon remove support for Internet Explorer 11 - please update your browser"},"discourse_local_dates":{"relative_dates":{"today":"Today %{time}","tomorrow":"Tomorrow %{time}","yesterday":"Yesterday %{time}","countdown":{"passed":"date has passed"}},"title":"Insert date / time","create":{"form":{"insert":"Insert","advanced_mode":"Advanced mode","simple_mode":"Simple mode","format_description":"Format used to display the date to the user. Use \"\\T\\Z\" to display the user timezone in words (Europe/Paris)","timezones_title":"Timezones to display","timezones_description":"Timezones will be used to display dates in preview and fallback.","recurring_title":"Recurrence","recurring_description":"Define the recurrence of an event. You can also manually edit the recurring option generated by the form and use one of the following keys: years, quarters, months, weeks, days, hours, minutes, seconds, milliseconds.","recurring_none":"No recurrence","invalid_date":"Invalid date, make sure date and time are correct","format_title":"Date format","until":"Until...","recurring":{"every_day":"Every day","every_week":"Every week","every_two_weeks":"Every two weeks","every_month":"Every month","every_two_months":"Every two months","every_three_months":"Every three months","every_six_months":"Every six months","every_year":"Every year"}}}},"poll":{"voters":{"one":"voter"},"total_votes":{"one":"total vote"},"results":{"groups":{"title":"You need to be a member of %{groups} to vote in this poll."},"vote":{"title":"Results will be shown on \u003cstrong\u003evote\u003c/strong\u003e."},"closed":{"title":"Results will be shown once \u003cstrong\u003eclosed\u003c/strong\u003e."},"staff":{"title":"Results are only shown to \u003cstrong\u003estaff\u003c/strong\u003e members."}},"multiple":{"help":{"at_least_min_options":{"one":"Choose at least \u003cstrong\u003e%{count}\u003c/strong\u003e option"},"up_to_max_options":{"one":"Choose up to \u003cstrong\u003e%{count}\u003c/strong\u003e option"},"x_options":{"one":"Choose \u003cstrong\u003e%{count}\u003c/strong\u003e option"}}},"hide-results":{"label":"Show vote"},"group-results":{"title":"Group votes by user field","label":"Show breakdown"},"ungroup-results":{"title":"Combine all votes","label":"Hide breakdown"},"export-results":{"title":"Export the poll results"},"automatic_close":{"closes_in":"Closes in \u003cstrong\u003e%{timeLeft}\u003c/strong\u003e.","age":"Closed \u003cstrong\u003e%{age}\u003c/strong\u003e"},"error_while_exporting_results":"Sorry, there was an error exporting poll results.","ui_builder":{"help":{"options_count":"Enter at least 1 option"},"poll_result":{"always":"Always visible","vote":"On vote","closed":"When closed","staff":"Staff only"},"poll_groups":{"label":"Allowed groups"},"poll_chart_type":{"label":"Chart type"},"automatic_close":{"label":"Automatically close poll"}}},"presence":{"replying_to_topic":{"one":"replying","other":"replying"}}}}};
I18n.locale = 'vi';
I18n.pluralizationRules.vi = MessageFormat.locale.vi;
//! moment.js

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));
//! moment-timezone.js
//! version : 0.5.25
//! Copyright (c) JS Foundation and other contributors
//! license : MIT
//! github.com/moment/moment-timezone

(function (root, factory) {
	"use strict";

	/*global define*/
	if (typeof module === 'object' && module.exports) {
		module.exports = factory(require('moment')); // Node
	} else if (typeof define === 'function' && define.amd) {
		define(['moment'], factory);                 // AMD
	} else {
		factory(root.moment);                        // Browser
	}
}(this, function (moment) {
	"use strict";

	// Do not load moment-timezone a second time.
	// if (moment.tz !== undefined) {
	// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
	// 	return moment;
	// }

	var VERSION = "0.5.25",
		zones = {},
		links = {},
		names = {},
		guesses = {},
		cachedGuess;

	if (!moment || typeof moment.version !== 'string') {
		logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');
	}

	var momentVersion = moment.version.split('.'),
		major = +momentVersion[0],
		minor = +momentVersion[1];

	// Moment.js version check
	if (major < 2 || (major === 2 && minor < 6)) {
		logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');
	}

	/************************************
		Unpacking
	************************************/

	function charCodeToInt(charCode) {
		if (charCode > 96) {
			return charCode - 87;
		} else if (charCode > 64) {
			return charCode - 29;
		}
		return charCode - 48;
	}

	function unpackBase60(string) {
		var i = 0,
			parts = string.split('.'),
			whole = parts[0],
			fractional = parts[1] || '',
			multiplier = 1,
			num,
			out = 0,
			sign = 1;

		// handle negative numbers
		if (string.charCodeAt(0) === 45) {
			i = 1;
			sign = -1;
		}

		// handle digits before the decimal
		for (i; i < whole.length; i++) {
			num = charCodeToInt(whole.charCodeAt(i));
			out = 60 * out + num;
		}

		// handle digits after the decimal
		for (i = 0; i < fractional.length; i++) {
			multiplier = multiplier / 60;
			num = charCodeToInt(fractional.charCodeAt(i));
			out += num * multiplier;
		}

		return out * sign;
	}

	function arrayToInt (array) {
		for (var i = 0; i < array.length; i++) {
			array[i] = unpackBase60(array[i]);
		}
	}

	function intToUntil (array, length) {
		for (var i = 0; i < length; i++) {
			array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds
		}

		array[length - 1] = Infinity;
	}

	function mapIndices (source, indices) {
		var out = [], i;

		for (i = 0; i < indices.length; i++) {
			out[i] = source[indices[i]];
		}

		return out;
	}

	function unpack (string) {
		var data = string.split('|'),
			offsets = data[2].split(' '),
			indices = data[3].split(''),
			untils  = data[4].split(' ');

		arrayToInt(offsets);
		arrayToInt(indices);
		arrayToInt(untils);

		intToUntil(untils, indices.length);

		return {
			name       : data[0],
			abbrs      : mapIndices(data[1].split(' '), indices),
			offsets    : mapIndices(offsets, indices),
			untils     : untils,
			population : data[5] | 0
		};
	}

	/************************************
		Zone object
	************************************/

	function Zone (packedString) {
		if (packedString) {
			this._set(unpack(packedString));
		}
	}

	Zone.prototype = {
		_set : function (unpacked) {
			this.name       = unpacked.name;
			this.abbrs      = unpacked.abbrs;
			this.untils     = unpacked.untils;
			this.offsets    = unpacked.offsets;
			this.population = unpacked.population;
		},

		_index : function (timestamp) {
			var target = +timestamp,
				untils = this.untils,
				i;

			for (i = 0; i < untils.length; i++) {
				if (target < untils[i]) {
					return i;
				}
			}
		},

		parse : function (timestamp) {
			var target  = +timestamp,
				offsets = this.offsets,
				untils  = this.untils,
				max     = untils.length - 1,
				offset, offsetNext, offsetPrev, i;

			for (i = 0; i < max; i++) {
				offset     = offsets[i];
				offsetNext = offsets[i + 1];
				offsetPrev = offsets[i ? i - 1 : i];

				if (offset < offsetNext && tz.moveAmbiguousForward) {
					offset = offsetNext;
				} else if (offset > offsetPrev && tz.moveInvalidForward) {
					offset = offsetPrev;
				}

				if (target < untils[i] - (offset * 60000)) {
					return offsets[i];
				}
			}

			return offsets[max];
		},

		abbr : function (mom) {
			return this.abbrs[this._index(mom)];
		},

		offset : function (mom) {
			logError("zone.offset has been deprecated in favor of zone.utcOffset");
			return this.offsets[this._index(mom)];
		},

		utcOffset : function (mom) {
			return this.offsets[this._index(mom)];
		}
	};

	/************************************
		Current Timezone
	************************************/

	function OffsetAt(at) {
		var timeString = at.toTimeString();
		var abbr = timeString.match(/\([a-z ]+\)/i);
		if (abbr && abbr[0]) {
			// 17:56:31 GMT-0600 (CST)
			// 17:56:31 GMT-0600 (Central Standard Time)
			abbr = abbr[0].match(/[A-Z]/g);
			abbr = abbr ? abbr.join('') : undefined;
		} else {
			// 17:56:31 CST
			// 17:56:31 GMT+0800 (å°åæ¨æºæé)
			abbr = timeString.match(/[A-Z]{3,5}/g);
			abbr = abbr ? abbr[0] : undefined;
		}

		if (abbr === 'GMT') {
			abbr = undefined;
		}

		this.at = +at;
		this.abbr = abbr;
		this.offset = at.getTimezoneOffset();
	}

	function ZoneScore(zone) {
		this.zone = zone;
		this.offsetScore = 0;
		this.abbrScore = 0;
	}

	ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
		this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
		if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {
			this.abbrScore++;
		}
	};

	function findChange(low, high) {
		var mid, diff;

		while ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {
			mid = new OffsetAt(new Date(low.at + diff));
			if (mid.offset === low.offset) {
				low = mid;
			} else {
				high = mid;
			}
		}

		return low;
	}

	function userOffsets() {
		var startYear = new Date().getFullYear() - 2,
			last = new OffsetAt(new Date(startYear, 0, 1)),
			offsets = [last],
			change, next, i;

		for (i = 1; i < 48; i++) {
			next = new OffsetAt(new Date(startYear, i, 1));
			if (next.offset !== last.offset) {
				change = findChange(last, next);
				offsets.push(change);
				offsets.push(new OffsetAt(new Date(change.at + 6e4)));
			}
			last = next;
		}

		for (i = 0; i < 4; i++) {
			offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
			offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
		}

		return offsets;
	}

	function sortZoneScores (a, b) {
		if (a.offsetScore !== b.offsetScore) {
			return a.offsetScore - b.offsetScore;
		}
		if (a.abbrScore !== b.abbrScore) {
			return a.abbrScore - b.abbrScore;
		}
		return b.zone.population - a.zone.population;
	}

	function addToGuesses (name, offsets) {
		var i, offset;
		arrayToInt(offsets);
		for (i = 0; i < offsets.length; i++) {
			offset = offsets[i];
			guesses[offset] = guesses[offset] || {};
			guesses[offset][name] = true;
		}
	}

	function guessesForUserOffsets (offsets) {
		var offsetsLength = offsets.length,
			filteredGuesses = {},
			out = [],
			i, j, guessesOffset;

		for (i = 0; i < offsetsLength; i++) {
			guessesOffset = guesses[offsets[i].offset] || {};
			for (j in guessesOffset) {
				if (guessesOffset.hasOwnProperty(j)) {
					filteredGuesses[j] = true;
				}
			}
		}

		for (i in filteredGuesses) {
			if (filteredGuesses.hasOwnProperty(i)) {
				out.push(names[i]);
			}
		}

		return out;
	}

	function rebuildGuess () {

		// use Intl API when available and returning valid time zone
		try {
			var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
			if (intlName && intlName.length > 3) {
				var name = names[normalizeName(intlName)];
				if (name) {
					return name;
				}
				logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
			}
		} catch (e) {
			// Intl unavailable, fall back to manual guessing.
		}

		var offsets = userOffsets(),
			offsetsLength = offsets.length,
			guesses = guessesForUserOffsets(offsets),
			zoneScores = [],
			zoneScore, i, j;

		for (i = 0; i < guesses.length; i++) {
			zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);
			for (j = 0; j < offsetsLength; j++) {
				zoneScore.scoreOffsetAt(offsets[j]);
			}
			zoneScores.push(zoneScore);
		}

		zoneScores.sort(sortZoneScores);

		return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;
	}

	function guess (ignoreCache) {
		if (!cachedGuess || ignoreCache) {
			cachedGuess = rebuildGuess();
		}
		return cachedGuess;
	}

	/************************************
		Global Methods
	************************************/

	function normalizeName (name) {
		return (name || '').toLowerCase().replace(/\//g, '_');
	}

	function addZone (packed) {
		var i, name, split, normalized;

		if (typeof packed === "string") {
			packed = [packed];
		}

		for (i = 0; i < packed.length; i++) {
			split = packed[i].split('|');
			name = split[0];
			normalized = normalizeName(name);
			zones[normalized] = packed[i];
			names[normalized] = name;
			addToGuesses(normalized, split[2].split(' '));
		}
	}

	function getZone (name, caller) {
		
		name = normalizeName(name);

		var zone = zones[name];
		var link;

		if (zone instanceof Zone) {
			return zone;
		}

		if (typeof zone === 'string') {
			zone = new Zone(zone);
			zones[name] = zone;
			return zone;
		}

		// Pass getZone to prevent recursion more than 1 level deep
		if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
			zone = zones[name] = new Zone();
			zone._set(link);
			zone.name = names[name];
			return zone;
		}

		return null;
	}

	function getNames () {
		var i, out = [];

		for (i in names) {
			if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
				out.push(names[i]);
			}
		}

		return out.sort();
	}

	function addLink (aliases) {
		var i, alias, normal0, normal1;

		if (typeof aliases === "string") {
			aliases = [aliases];
		}

		for (i = 0; i < aliases.length; i++) {
			alias = aliases[i].split('|');

			normal0 = normalizeName(alias[0]);
			normal1 = normalizeName(alias[1]);

			links[normal0] = normal1;
			names[normal0] = alias[0];

			links[normal1] = normal0;
			names[normal1] = alias[1];
		}
	}

	function loadData (data) {
		addZone(data.zones);
		addLink(data.links);
		tz.dataVersion = data.version;
	}

	function zoneExists (name) {
		if (!zoneExists.didShowError) {
			zoneExists.didShowError = true;
				logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
		}
		return !!getZone(name);
	}

	function needsOffset (m) {
		var isUnixTimestamp = (m._f === 'X' || m._f === 'x');
		return !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);
	}

	function logError (message) {
		if (typeof console !== 'undefined' && typeof console.error === 'function') {
			console.error(message);
		}
	}

	/************************************
		moment.tz namespace
	************************************/

	function tz (input) {
		var args = Array.prototype.slice.call(arguments, 0, -1),
			name = arguments[arguments.length - 1],
			zone = getZone(name),
			out  = moment.utc.apply(null, args);

		if (zone && !moment.isMoment(input) && needsOffset(out)) {
			out.add(zone.parse(out), 'minutes');
		}

		out.tz(name);

		return out;
	}

	tz.version      = VERSION;
	tz.dataVersion  = '';
	tz._zones       = zones;
	tz._links       = links;
	tz._names       = names;
	tz.add          = addZone;
	tz.link         = addLink;
	tz.load         = loadData;
	tz.zone         = getZone;
	tz.zoneExists   = zoneExists; // deprecated in 0.1.0
	tz.guess        = guess;
	tz.names        = getNames;
	tz.Zone         = Zone;
	tz.unpack       = unpack;
	tz.unpackBase60 = unpackBase60;
	tz.needsOffset  = needsOffset;
	tz.moveInvalidForward   = true;
	tz.moveAmbiguousForward = false;

	/************************************
		Interface with Moment.js
	************************************/

	var fn = moment.fn;

	moment.tz = tz;

	moment.defaultZone = null;

	moment.updateOffset = function (mom, keepTime) {
		var zone = moment.defaultZone,
			offset;

		if (mom._z === undefined) {
			if (zone && needsOffset(mom) && !mom._isUTC) {
				mom._d = moment.utc(mom._a)._d;
				mom.utc().add(zone.parse(mom), 'minutes');
			}
			mom._z = zone;
		}
		if (mom._z) {
			offset = mom._z.utcOffset(mom);
			if (Math.abs(offset) < 16) {
				offset = offset / 60;
			}
			if (mom.utcOffset !== undefined) {
				var z = mom._z;
				mom.utcOffset(-offset, keepTime);
				mom._z = z;
			} else {
				mom.zone(offset, keepTime);
			}
		}
	};

	fn.tz = function (name, keepTime) {
		if (name) {
			if (typeof name !== 'string') {
				throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');
			}
			this._z = getZone(name);
			if (this._z) {
				moment.updateOffset(this, keepTime);
			} else {
				logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
			}
			return this;
		}
		if (this._z) { return this._z.name; }
	};

	function abbrWrap (old) {
		return function () {
			if (this._z) { return this._z.abbr(this); }
			return old.call(this);
		};
	}

	function resetZoneWrap (old) {
		return function () {
			this._z = null;
			return old.apply(this, arguments);
		};
	}

	function resetZoneWrap2 (old) {
		return function () {
			if (arguments.length > 0) this._z = null;
			return old.apply(this, arguments);
		};
	}

	fn.zoneName  = abbrWrap(fn.zoneName);
	fn.zoneAbbr  = abbrWrap(fn.zoneAbbr);
	fn.utc       = resetZoneWrap(fn.utc);
	fn.local     = resetZoneWrap(fn.local);
	fn.utcOffset = resetZoneWrap2(fn.utcOffset);
	
	moment.tz.setDefault = function(name) {
		if (major < 2 || (major === 2 && minor < 9)) {
			logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');
		}
		moment.defaultZone = name ? getZone(name) : null;
		return moment;
	};

	// Cloning a moment should include the _z property.
	var momentProperties = moment.momentProperties;
	if (Object.prototype.toString.call(momentProperties) === '[object Array]') {
		// moment 2.8.1+
		momentProperties.push('_z');
		momentProperties.push('_a');
	} else if (momentProperties) {
		// moment 2.7.0
		momentProperties._z = null;
	}

	loadData({
		"version": "2019a",
		"zones": [
			"Africa/Abidjan|GMT|0|0||48e5",
			"Africa/Nairobi|EAT|-30|0||47e5",
			"Africa/Algiers|CET|-10|0||26e5",
			"Africa/Lagos|WAT|-10|0||17e6",
			"Africa/Maputo|CAT|-20|0||26e5",
			"Africa/Cairo|EET EEST|-20 -30|01010|1M2m0 gL0 e10 mn0|15e6",
			"Africa/Casablanca|+00 +01|0 -10|01010101010101010101010101010101|1LHC0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00|32e5",
			"Europe/Paris|CET CEST|-10 -20|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|11e6",
			"Africa/Johannesburg|SAST|-20|0||84e5",
			"Africa/Khartoum|EAT CAT|-30 -20|01|1Usl0|51e5",
			"Africa/Sao_Tome|GMT WAT|0 -10|010|1UQN0 2q00",
			"Africa/Tripoli|EET|-20|0||11e5",
			"Africa/Windhoek|CAT WAT|-20 -10|010101010|1LKo0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
			"America/Adak|HST HDT|a0 90|01010101010101010101010|1Lzo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
			"America/Anchorage|AKST AKDT|90 80|01010101010101010101010|1Lzn0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
			"America/Santo_Domingo|AST|40|0||29e5",
			"America/Fortaleza|-03|30|0||34e5",
			"America/Asuncion|-03 -04|30 40|01010101010101010101010|1LEP0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0|28e5",
			"America/Panama|EST|50|0||15e5",
			"America/Mexico_City|CST CDT|60 50|01010101010101010101010|1LKw0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0|20e6",
			"America/Managua|CST|60|0||22e5",
			"America/La_Paz|-04|40|0||19e5",
			"America/Lima|-05|50|0||11e6",
			"America/Denver|MST MDT|70 60|01010101010101010101010|1Lzl0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
			"America/Campo_Grande|-03 -04|30 40|01010101010101010101010|1LqP0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0 1HB0 FX0 1HB0 IL0 1HB0 FX0 1HB0 IL0 1EN0 FX0 1HB0|77e4",
			"America/Cancun|CST CDT EST|60 50 50|0102|1LKw0 1lb0 Dd0|63e4",
			"America/Caracas|-0430 -04|4u 40|01|1QMT0|29e5",
			"America/Chicago|CST CDT|60 50|01010101010101010101010|1Lzk0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
			"America/Chihuahua|MST MDT|70 60|01010101010101010101010|1LKx0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0|81e4",
			"America/Phoenix|MST|70|0||42e5",
			"America/Los_Angeles|PST PDT|80 70|01010101010101010101010|1Lzm0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
			"America/New_York|EST EDT|50 40|01010101010101010101010|1Lzj0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
			"America/Fort_Nelson|PST PDT MST|80 70 70|0102|1Lzm0 1zb0 Op0|39e2",
			"America/Halifax|AST ADT|40 30|01010101010101010101010|1Lzi0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
			"America/Godthab|-03 -02|30 20|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|17e3",
			"America/Grand_Turk|EST EDT AST|50 40 40|0101210101010101010|1Lzj0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
			"America/Havana|CST CDT|50 40|01010101010101010101010|1Lzh0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
			"America/Metlakatla|PST AKST AKDT|80 90 80|012121201212121212121|1PAa0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
			"America/Miquelon|-03 -02|30 20|01010101010101010101010|1Lzh0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
			"America/Montevideo|-02 -03|20 30|0101|1Lzg0 1o10 11z0|17e5",
			"America/Noronha|-02|20|0||30e2",
			"America/Port-au-Prince|EST EDT|50 40|010101010101010101010|1Lzj0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
			"Antarctica/Palmer|-03 -04|30 40|01010|1LSP0 Rd0 46n0 Ap0|40",
			"America/Santiago|-03 -04|30 40|010101010101010101010|1LSP0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0|62e5",
			"America/Sao_Paulo|-02 -03|20 30|01010101010101010101010|1LqO0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0 1HB0 FX0 1HB0 IL0 1HB0 FX0 1HB0 IL0 1EN0 FX0 1HB0|20e6",
			"Atlantic/Azores|-01 +00|10 0|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|25e4",
			"America/St_Johns|NST NDT|3u 2u|01010101010101010101010|1Lzhu 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
			"Antarctica/Casey|+08 +11|-80 -b0|010|1RWg0 3m10|10",
			"Asia/Bangkok|+07|-70|0||15e6",
			"Pacific/Port_Moresby|+10|-a0|0||25e4",
			"Pacific/Guadalcanal|+11|-b0|0||11e4",
			"Asia/Tashkent|+05|-50|0||23e5",
			"Pacific/Auckland|NZDT NZST|-d0 -c0|01010101010101010101010|1LKe0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00|14e5",
			"Asia/Baghdad|+03|-30|0||66e5",
			"Antarctica/Troll|+00 +02|0 -20|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|40",
			"Asia/Dhaka|+06|-60|0||16e6",
			"Asia/Amman|EET EEST|-20 -30|01010101010101010101010|1LGK0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|25e5",
			"Asia/Kamchatka|+12|-c0|0||18e4",
			"Asia/Baku|+04 +05|-40 -50|01010|1LHA0 1o00 11A0 1o00|27e5",
			"Asia/Barnaul|+07 +06|-70 -60|010|1N7v0 3rd0",
			"Asia/Beirut|EET EEST|-20 -30|01010101010101010101010|1LHy0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0|22e5",
			"Asia/Kuala_Lumpur|+08|-80|0||71e5",
			"Asia/Kolkata|IST|-5u|0||15e6",
			"Asia/Chita|+10 +08 +09|-a0 -80 -90|012|1N7s0 3re0|33e4",
			"Asia/Ulaanbaatar|+08 +09|-80 -90|01010|1O8G0 1cJ0 1cP0 1cJ0|12e5",
			"Asia/Shanghai|CST|-80|0||23e6",
			"Asia/Colombo|+0530|-5u|0||22e5",
			"Asia/Damascus|EET EEST|-20 -30|01010101010101010101010|1LGK0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|26e5",
			"Asia/Dili|+09|-90|0||19e4",
			"Asia/Dubai|+04|-40|0||39e5",
			"Asia/Famagusta|EET EEST +03|-20 -30 -30|0101012010101010101010|1LHB0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00",
			"Asia/Gaza|EET EEST|-20 -30|01010101010101010101010|1LGK0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0|18e5",
			"Asia/Hong_Kong|HKT|-80|0||73e5",
			"Asia/Hovd|+07 +08|-70 -80|01010|1O8H0 1cJ0 1cP0 1cJ0|81e3",
			"Asia/Irkutsk|+09 +08|-90 -80|01|1N7t0|60e4",
			"Europe/Istanbul|EET EEST +03|-20 -30 -30|0101012|1LI10 1nA0 11A0 1tA0 U00 15w0|13e6",
			"Asia/Jakarta|WIB|-70|0||31e6",
			"Asia/Jayapura|WIT|-90|0||26e4",
			"Asia/Jerusalem|IST IDT|-20 -30|01010101010101010101010|1LGM0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0|81e4",
			"Asia/Kabul|+0430|-4u|0||46e5",
			"Asia/Karachi|PKT|-50|0||24e6",
			"Asia/Kathmandu|+0545|-5J|0||12e5",
			"Asia/Yakutsk|+10 +09|-a0 -90|01|1N7s0|28e4",
			"Asia/Krasnoyarsk|+08 +07|-80 -70|01|1N7u0|10e5",
			"Asia/Magadan|+12 +10 +11|-c0 -a0 -b0|012|1N7q0 3Cq0|95e3",
			"Asia/Makassar|WITA|-80|0||15e5",
			"Asia/Manila|PST|-80|0||24e6",
			"Europe/Athens|EET EEST|-20 -30|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|35e5",
			"Asia/Novosibirsk|+07 +06|-70 -60|010|1N7v0 4eN0|15e5",
			"Asia/Omsk|+07 +06|-70 -60|01|1N7v0|12e5",
			"Asia/Pyongyang|KST KST|-90 -8u|010|1P4D0 6BA0|29e5",
			"Asia/Qyzylorda|+06 +05|-60 -50|01|1Xei0|73e4",
			"Asia/Rangoon|+0630|-6u|0||48e5",
			"Asia/Sakhalin|+11 +10|-b0 -a0|010|1N7r0 3rd0|58e4",
			"Asia/Seoul|KST|-90|0||23e6",
			"Asia/Srednekolymsk|+12 +11|-c0 -b0|01|1N7q0|35e2",
			"Asia/Tehran|+0330 +0430|-3u -4u|01010101010101010101010|1LEku 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
			"Asia/Tokyo|JST|-90|0||38e6",
			"Asia/Tomsk|+07 +06|-70 -60|010|1N7v0 3Qp0|10e5",
			"Asia/Vladivostok|+11 +10|-b0 -a0|01|1N7r0|60e4",
			"Asia/Yekaterinburg|+06 +05|-60 -50|01|1N7w0|14e5",
			"Europe/Lisbon|WET WEST|0 -10|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|27e5",
			"Atlantic/Cape_Verde|-01|10|0||50e4",
			"Australia/Sydney|AEDT AEST|-b0 -a0|01010101010101010101010|1LKg0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0|40e5",
			"Australia/Adelaide|ACDT ACST|-au -9u|01010101010101010101010|1LKgu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0|11e5",
			"Australia/Brisbane|AEST|-a0|0||20e5",
			"Australia/Darwin|ACST|-9u|0||12e4",
			"Australia/Eucla|+0845|-8J|0||368",
			"Australia/Lord_Howe|+11 +1030|-b0 -au|01010101010101010101010|1LKf0 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu|347",
			"Australia/Perth|AWST|-80|0||18e5",
			"Pacific/Easter|-05 -06|50 60|010101010101010101010|1LSP0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0|30e2",
			"Europe/Dublin|GMT IST|0 -10|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|12e5",
			"Etc/GMT-1|+01|-10|0|",
			"Pacific/Fakaofo|+13|-d0|0||483",
			"Pacific/Kiritimati|+14|-e0|0||51e2",
			"Etc/GMT-2|+02|-20|0|",
			"Pacific/Tahiti|-10|a0|0||18e4",
			"Pacific/Niue|-11|b0|0||12e2",
			"Etc/GMT+12|-12|c0|0|",
			"Pacific/Galapagos|-06|60|0||25e3",
			"Etc/GMT+7|-07|70|0|",
			"Pacific/Pitcairn|-08|80|0||56",
			"Pacific/Gambier|-09|90|0||125",
			"Etc/UTC|UTC|0|0|",
			"Europe/Ulyanovsk|+04 +03|-40 -30|010|1N7y0 3rd0|13e5",
			"Europe/London|GMT BST|0 -10|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|10e6",
			"Europe/Chisinau|EET EEST|-20 -30|01010101010101010101010|1LHA0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00|67e4",
			"Europe/Kaliningrad|+03 EET|-30 -20|01|1N7z0|44e4",
			"Europe/Kirov|+04 +03|-40 -30|01|1N7y0|48e4",
			"Europe/Moscow|MSK MSK|-40 -30|01|1N7y0|16e6",
			"Europe/Saratov|+04 +03|-40 -30|010|1N7y0 5810",
			"Europe/Simferopol|EET MSK MSK|-20 -40 -30|012|1LHA0 1nW0|33e4",
			"Europe/Volgograd|+04 +03|-40 -30|010|1N7y0 9Jd0|10e5",
			"Pacific/Honolulu|HST|a0|0||37e4",
			"MET|MET MEST|-10 -20|01010101010101010101010|1LHB0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00",
			"Pacific/Chatham|+1345 +1245|-dJ -cJ|01010101010101010101010|1LKe0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00|600",
			"Pacific/Apia|+14 +13|-e0 -d0|01010101010101010101010|1LKe0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00|37e3",
			"Pacific/Bougainville|+10 +11|-a0 -b0|01|1NwE0|18e4",
			"Pacific/Fiji|+13 +12|-d0 -c0|01010101010101010101010|1Lfp0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0|88e4",
			"Pacific/Guam|ChST|-a0|0||17e4",
			"Pacific/Marquesas|-0930|9u|0||86e2",
			"Pacific/Pago_Pago|SST|b0|0||37e2",
			"Pacific/Norfolk|+1130 +11|-bu -b0|01|1PoCu|25e4",
			"Pacific/Tongatapu|+13 +14|-d0 -e0|010|1S4d0 s00|75e3"
		],
		"links": [
			"Africa/Abidjan|Africa/Accra",
			"Africa/Abidjan|Africa/Bamako",
			"Africa/Abidjan|Africa/Banjul",
			"Africa/Abidjan|Africa/Bissau",
			"Africa/Abidjan|Africa/Conakry",
			"Africa/Abidjan|Africa/Dakar",
			"Africa/Abidjan|Africa/Freetown",
			"Africa/Abidjan|Africa/Lome",
			"Africa/Abidjan|Africa/Monrovia",
			"Africa/Abidjan|Africa/Nouakchott",
			"Africa/Abidjan|Africa/Ouagadougou",
			"Africa/Abidjan|Africa/Timbuktu",
			"Africa/Abidjan|America/Danmarkshavn",
			"Africa/Abidjan|Atlantic/Reykjavik",
			"Africa/Abidjan|Atlantic/St_Helena",
			"Africa/Abidjan|Etc/GMT",
			"Africa/Abidjan|Etc/GMT+0",
			"Africa/Abidjan|Etc/GMT-0",
			"Africa/Abidjan|Etc/GMT0",
			"Africa/Abidjan|Etc/Greenwich",
			"Africa/Abidjan|GMT",
			"Africa/Abidjan|GMT+0",
			"Africa/Abidjan|GMT-0",
			"Africa/Abidjan|GMT0",
			"Africa/Abidjan|Greenwich",
			"Africa/Abidjan|Iceland",
			"Africa/Algiers|Africa/Tunis",
			"Africa/Cairo|Egypt",
			"Africa/Casablanca|Africa/El_Aaiun",
			"Africa/Johannesburg|Africa/Maseru",
			"Africa/Johannesburg|Africa/Mbabane",
			"Africa/Lagos|Africa/Bangui",
			"Africa/Lagos|Africa/Brazzaville",
			"Africa/Lagos|Africa/Douala",
			"Africa/Lagos|Africa/Kinshasa",
			"Africa/Lagos|Africa/Libreville",
			"Africa/Lagos|Africa/Luanda",
			"Africa/Lagos|Africa/Malabo",
			"Africa/Lagos|Africa/Ndjamena",
			"Africa/Lagos|Africa/Niamey",
			"Africa/Lagos|Africa/Porto-Novo",
			"Africa/Maputo|Africa/Blantyre",
			"Africa/Maputo|Africa/Bujumbura",
			"Africa/Maputo|Africa/Gaborone",
			"Africa/Maputo|Africa/Harare",
			"Africa/Maputo|Africa/Kigali",
			"Africa/Maputo|Africa/Lubumbashi",
			"Africa/Maputo|Africa/Lusaka",
			"Africa/Nairobi|Africa/Addis_Ababa",
			"Africa/Nairobi|Africa/Asmara",
			"Africa/Nairobi|Africa/Asmera",
			"Africa/Nairobi|Africa/Dar_es_Salaam",
			"Africa/Nairobi|Africa/Djibouti",
			"Africa/Nairobi|Africa/Juba",
			"Africa/Nairobi|Africa/Kampala",
			"Africa/Nairobi|Africa/Mogadishu",
			"Africa/Nairobi|Indian/Antananarivo",
			"Africa/Nairobi|Indian/Comoro",
			"Africa/Nairobi|Indian/Mayotte",
			"Africa/Tripoli|Libya",
			"America/Adak|America/Atka",
			"America/Adak|US/Aleutian",
			"America/Anchorage|America/Juneau",
			"America/Anchorage|America/Nome",
			"America/Anchorage|America/Sitka",
			"America/Anchorage|America/Yakutat",
			"America/Anchorage|US/Alaska",
			"America/Campo_Grande|America/Cuiaba",
			"America/Chicago|America/Indiana/Knox",
			"America/Chicago|America/Indiana/Tell_City",
			"America/Chicago|America/Knox_IN",
			"America/Chicago|America/Matamoros",
			"America/Chicago|America/Menominee",
			"America/Chicago|America/North_Dakota/Beulah",
			"America/Chicago|America/North_Dakota/Center",
			"America/Chicago|America/North_Dakota/New_Salem",
			"America/Chicago|America/Rainy_River",
			"America/Chicago|America/Rankin_Inlet",
			"America/Chicago|America/Resolute",
			"America/Chicago|America/Winnipeg",
			"America/Chicago|CST6CDT",
			"America/Chicago|Canada/Central",
			"America/Chicago|US/Central",
			"America/Chicago|US/Indiana-Starke",
			"America/Chihuahua|America/Mazatlan",
			"America/Chihuahua|Mexico/BajaSur",
			"America/Denver|America/Boise",
			"America/Denver|America/Cambridge_Bay",
			"America/Denver|America/Edmonton",
			"America/Denver|America/Inuvik",
			"America/Denver|America/Ojinaga",
			"America/Denver|America/Shiprock",
			"America/Denver|America/Yellowknife",
			"America/Denver|Canada/Mountain",
			"America/Denver|MST7MDT",
			"America/Denver|Navajo",
			"America/Denver|US/Mountain",
			"America/Fortaleza|America/Araguaina",
			"America/Fortaleza|America/Argentina/Buenos_Aires",
			"America/Fortaleza|America/Argentina/Catamarca",
			"America/Fortaleza|America/Argentina/ComodRivadavia",
			"America/Fortaleza|America/Argentina/Cordoba",
			"America/Fortaleza|America/Argentina/Jujuy",
			"America/Fortaleza|America/Argentina/La_Rioja",
			"America/Fortaleza|America/Argentina/Mendoza",
			"America/Fortaleza|America/Argentina/Rio_Gallegos",
			"America/Fortaleza|America/Argentina/Salta",
			"America/Fortaleza|America/Argentina/San_Juan",
			"America/Fortaleza|America/Argentina/San_Luis",
			"America/Fortaleza|America/Argentina/Tucuman",
			"America/Fortaleza|America/Argentina/Ushuaia",
			"America/Fortaleza|America/Bahia",
			"America/Fortaleza|America/Belem",
			"America/Fortaleza|America/Buenos_Aires",
			"America/Fortaleza|America/Catamarca",
			"America/Fortaleza|America/Cayenne",
			"America/Fortaleza|America/Cordoba",
			"America/Fortaleza|America/Jujuy",
			"America/Fortaleza|America/Maceio",
			"America/Fortaleza|America/Mendoza",
			"America/Fortaleza|America/Paramaribo",
			"America/Fortaleza|America/Recife",
			"America/Fortaleza|America/Rosario",
			"America/Fortaleza|America/Santarem",
			"America/Fortaleza|Antarctica/Rothera",
			"America/Fortaleza|Atlantic/Stanley",
			"America/Fortaleza|Etc/GMT+3",
			"America/Halifax|America/Glace_Bay",
			"America/Halifax|America/Goose_Bay",
			"America/Halifax|America/Moncton",
			"America/Halifax|America/Thule",
			"America/Halifax|Atlantic/Bermuda",
			"America/Halifax|Canada/Atlantic",
			"America/Havana|Cuba",
			"America/La_Paz|America/Boa_Vista",
			"America/La_Paz|America/Guyana",
			"America/La_Paz|America/Manaus",
			"America/La_Paz|America/Porto_Velho",
			"America/La_Paz|Brazil/West",
			"America/La_Paz|Etc/GMT+4",
			"America/Lima|America/Bogota",
			"America/Lima|America/Eirunepe",
			"America/Lima|America/Guayaquil",
			"America/Lima|America/Porto_Acre",
			"America/Lima|America/Rio_Branco",
			"America/Lima|Brazil/Acre",
			"America/Lima|Etc/GMT+5",
			"America/Los_Angeles|America/Dawson",
			"America/Los_Angeles|America/Ensenada",
			"America/Los_Angeles|America/Santa_Isabel",
			"America/Los_Angeles|America/Tijuana",
			"America/Los_Angeles|America/Vancouver",
			"America/Los_Angeles|America/Whitehorse",
			"America/Los_Angeles|Canada/Pacific",
			"America/Los_Angeles|Canada/Yukon",
			"America/Los_Angeles|Mexico/BajaNorte",
			"America/Los_Angeles|PST8PDT",
			"America/Los_Angeles|US/Pacific",
			"America/Los_Angeles|US/Pacific-New",
			"America/Managua|America/Belize",
			"America/Managua|America/Costa_Rica",
			"America/Managua|America/El_Salvador",
			"America/Managua|America/Guatemala",
			"America/Managua|America/Regina",
			"America/Managua|America/Swift_Current",
			"America/Managua|America/Tegucigalpa",
			"America/Managua|Canada/Saskatchewan",
			"America/Mexico_City|America/Bahia_Banderas",
			"America/Mexico_City|America/Merida",
			"America/Mexico_City|America/Monterrey",
			"America/Mexico_City|Mexico/General",
			"America/New_York|America/Detroit",
			"America/New_York|America/Fort_Wayne",
			"America/New_York|America/Indiana/Indianapolis",
			"America/New_York|America/Indiana/Marengo",
			"America/New_York|America/Indiana/Petersburg",
			"America/New_York|America/Indiana/Vevay",
			"America/New_York|America/Indiana/Vincennes",
			"America/New_York|America/Indiana/Winamac",
			"America/New_York|America/Indianapolis",
			"America/New_York|America/Iqaluit",
			"America/New_York|America/Kentucky/Louisville",
			"America/New_York|America/Kentucky/Monticello",
			"America/New_York|America/Louisville",
			"America/New_York|America/Montreal",
			"America/New_York|America/Nassau",
			"America/New_York|America/Nipigon",
			"America/New_York|America/Pangnirtung",
			"America/New_York|America/Thunder_Bay",
			"America/New_York|America/Toronto",
			"America/New_York|Canada/Eastern",
			"America/New_York|EST5EDT",
			"America/New_York|US/East-Indiana",
			"America/New_York|US/Eastern",
			"America/New_York|US/Michigan",
			"America/Noronha|Atlantic/South_Georgia",
			"America/Noronha|Brazil/DeNoronha",
			"America/Noronha|Etc/GMT+2",
			"America/Panama|America/Atikokan",
			"America/Panama|America/Cayman",
			"America/Panama|America/Coral_Harbour",
			"America/Panama|America/Jamaica",
			"America/Panama|EST",
			"America/Panama|Jamaica",
			"America/Phoenix|America/Creston",
			"America/Phoenix|America/Dawson_Creek",
			"America/Phoenix|America/Hermosillo",
			"America/Phoenix|MST",
			"America/Phoenix|US/Arizona",
			"America/Santiago|Chile/Continental",
			"America/Santo_Domingo|America/Anguilla",
			"America/Santo_Domingo|America/Antigua",
			"America/Santo_Domingo|America/Aruba",
			"America/Santo_Domingo|America/Barbados",
			"America/Santo_Domingo|America/Blanc-Sablon",
			"America/Santo_Domingo|America/Curacao",
			"America/Santo_Domingo|America/Dominica",
			"America/Santo_Domingo|America/Grenada",
			"America/Santo_Domingo|America/Guadeloupe",
			"America/Santo_Domingo|America/Kralendijk",
			"America/Santo_Domingo|America/Lower_Princes",
			"America/Santo_Domingo|America/Marigot",
			"America/Santo_Domingo|America/Martinique",
			"America/Santo_Domingo|America/Montserrat",
			"America/Santo_Domingo|America/Port_of_Spain",
			"America/Santo_Domingo|America/Puerto_Rico",
			"America/Santo_Domingo|America/St_Barthelemy",
			"America/Santo_Domingo|America/St_Kitts",
			"America/Santo_Domingo|America/St_Lucia",
			"America/Santo_Domingo|America/St_Thomas",
			"America/Santo_Domingo|America/St_Vincent",
			"America/Santo_Domingo|America/Tortola",
			"America/Santo_Domingo|America/Virgin",
			"America/Sao_Paulo|Brazil/East",
			"America/St_Johns|Canada/Newfoundland",
			"Antarctica/Palmer|America/Punta_Arenas",
			"Asia/Baghdad|Antarctica/Syowa",
			"Asia/Baghdad|Asia/Aden",
			"Asia/Baghdad|Asia/Bahrain",
			"Asia/Baghdad|Asia/Kuwait",
			"Asia/Baghdad|Asia/Qatar",
			"Asia/Baghdad|Asia/Riyadh",
			"Asia/Baghdad|Etc/GMT-3",
			"Asia/Baghdad|Europe/Minsk",
			"Asia/Bangkok|Antarctica/Davis",
			"Asia/Bangkok|Asia/Ho_Chi_Minh",
			"Asia/Bangkok|Asia/Novokuznetsk",
			"Asia/Bangkok|Asia/Phnom_Penh",
			"Asia/Bangkok|Asia/Saigon",
			"Asia/Bangkok|Asia/Vientiane",
			"Asia/Bangkok|Etc/GMT-7",
			"Asia/Bangkok|Indian/Christmas",
			"Asia/Dhaka|Antarctica/Vostok",
			"Asia/Dhaka|Asia/Almaty",
			"Asia/Dhaka|Asia/Bishkek",
			"Asia/Dhaka|Asia/Dacca",
			"Asia/Dhaka|Asia/Kashgar",
			"Asia/Dhaka|Asia/Qostanay",
			"Asia/Dhaka|Asia/Thimbu",
			"Asia/Dhaka|Asia/Thimphu",
			"Asia/Dhaka|Asia/Urumqi",
			"Asia/Dhaka|Etc/GMT-6",
			"Asia/Dhaka|Indian/Chagos",
			"Asia/Dili|Etc/GMT-9",
			"Asia/Dili|Pacific/Palau",
			"Asia/Dubai|Asia/Muscat",
			"Asia/Dubai|Asia/Tbilisi",
			"Asia/Dubai|Asia/Yerevan",
			"Asia/Dubai|Etc/GMT-4",
			"Asia/Dubai|Europe/Samara",
			"Asia/Dubai|Indian/Mahe",
			"Asia/Dubai|Indian/Mauritius",
			"Asia/Dubai|Indian/Reunion",
			"Asia/Gaza|Asia/Hebron",
			"Asia/Hong_Kong|Hongkong",
			"Asia/Jakarta|Asia/Pontianak",
			"Asia/Jerusalem|Asia/Tel_Aviv",
			"Asia/Jerusalem|Israel",
			"Asia/Kamchatka|Asia/Anadyr",
			"Asia/Kamchatka|Etc/GMT-12",
			"Asia/Kamchatka|Kwajalein",
			"Asia/Kamchatka|Pacific/Funafuti",
			"Asia/Kamchatka|Pacific/Kwajalein",
			"Asia/Kamchatka|Pacific/Majuro",
			"Asia/Kamchatka|Pacific/Nauru",
			"Asia/Kamchatka|Pacific/Tarawa",
			"Asia/Kamchatka|Pacific/Wake",
			"Asia/Kamchatka|Pacific/Wallis",
			"Asia/Kathmandu|Asia/Katmandu",
			"Asia/Kolkata|Asia/Calcutta",
			"Asia/Kuala_Lumpur|Asia/Brunei",
			"Asia/Kuala_Lumpur|Asia/Kuching",
			"Asia/Kuala_Lumpur|Asia/Singapore",
			"Asia/Kuala_Lumpur|Etc/GMT-8",
			"Asia/Kuala_Lumpur|Singapore",
			"Asia/Makassar|Asia/Ujung_Pandang",
			"Asia/Rangoon|Asia/Yangon",
			"Asia/Rangoon|Indian/Cocos",
			"Asia/Seoul|ROK",
			"Asia/Shanghai|Asia/Chongqing",
			"Asia/Shanghai|Asia/Chungking",
			"Asia/Shanghai|Asia/Harbin",
			"Asia/Shanghai|Asia/Macao",
			"Asia/Shanghai|Asia/Macau",
			"Asia/Shanghai|Asia/Taipei",
			"Asia/Shanghai|PRC",
			"Asia/Shanghai|ROC",
			"Asia/Tashkent|Antarctica/Mawson",
			"Asia/Tashkent|Asia/Aqtau",
			"Asia/Tashkent|Asia/Aqtobe",
			"Asia/Tashkent|Asia/Ashgabat",
			"Asia/Tashkent|Asia/Ashkhabad",
			"Asia/Tashkent|Asia/Atyrau",
			"Asia/Tashkent|Asia/Dushanbe",
			"Asia/Tashkent|Asia/Oral",
			"Asia/Tashkent|Asia/Samarkand",
			"Asia/Tashkent|Etc/GMT-5",
			"Asia/Tashkent|Indian/Kerguelen",
			"Asia/Tashkent|Indian/Maldives",
			"Asia/Tehran|Iran",
			"Asia/Tokyo|Japan",
			"Asia/Ulaanbaatar|Asia/Choibalsan",
			"Asia/Ulaanbaatar|Asia/Ulan_Bator",
			"Asia/Vladivostok|Asia/Ust-Nera",
			"Asia/Yakutsk|Asia/Khandyga",
			"Atlantic/Azores|America/Scoresbysund",
			"Atlantic/Cape_Verde|Etc/GMT+1",
			"Australia/Adelaide|Australia/Broken_Hill",
			"Australia/Adelaide|Australia/South",
			"Australia/Adelaide|Australia/Yancowinna",
			"Australia/Brisbane|Australia/Lindeman",
			"Australia/Brisbane|Australia/Queensland",
			"Australia/Darwin|Australia/North",
			"Australia/Lord_Howe|Australia/LHI",
			"Australia/Perth|Australia/West",
			"Australia/Sydney|Australia/ACT",
			"Australia/Sydney|Australia/Canberra",
			"Australia/Sydney|Australia/Currie",
			"Australia/Sydney|Australia/Hobart",
			"Australia/Sydney|Australia/Melbourne",
			"Australia/Sydney|Australia/NSW",
			"Australia/Sydney|Australia/Tasmania",
			"Australia/Sydney|Australia/Victoria",
			"Etc/UTC|Etc/UCT",
			"Etc/UTC|Etc/Universal",
			"Etc/UTC|Etc/Zulu",
			"Etc/UTC|UCT",
			"Etc/UTC|UTC",
			"Etc/UTC|Universal",
			"Etc/UTC|Zulu",
			"Europe/Athens|Asia/Nicosia",
			"Europe/Athens|EET",
			"Europe/Athens|Europe/Bucharest",
			"Europe/Athens|Europe/Helsinki",
			"Europe/Athens|Europe/Kiev",
			"Europe/Athens|Europe/Mariehamn",
			"Europe/Athens|Europe/Nicosia",
			"Europe/Athens|Europe/Riga",
			"Europe/Athens|Europe/Sofia",
			"Europe/Athens|Europe/Tallinn",
			"Europe/Athens|Europe/Uzhgorod",
			"Europe/Athens|Europe/Vilnius",
			"Europe/Athens|Europe/Zaporozhye",
			"Europe/Chisinau|Europe/Tiraspol",
			"Europe/Dublin|Eire",
			"Europe/Istanbul|Asia/Istanbul",
			"Europe/Istanbul|Turkey",
			"Europe/Lisbon|Atlantic/Canary",
			"Europe/Lisbon|Atlantic/Faeroe",
			"Europe/Lisbon|Atlantic/Faroe",
			"Europe/Lisbon|Atlantic/Madeira",
			"Europe/Lisbon|Portugal",
			"Europe/Lisbon|WET",
			"Europe/London|Europe/Belfast",
			"Europe/London|Europe/Guernsey",
			"Europe/London|Europe/Isle_of_Man",
			"Europe/London|Europe/Jersey",
			"Europe/London|GB",
			"Europe/London|GB-Eire",
			"Europe/Moscow|W-SU",
			"Europe/Paris|Africa/Ceuta",
			"Europe/Paris|Arctic/Longyearbyen",
			"Europe/Paris|Atlantic/Jan_Mayen",
			"Europe/Paris|CET",
			"Europe/Paris|Europe/Amsterdam",
			"Europe/Paris|Europe/Andorra",
			"Europe/Paris|Europe/Belgrade",
			"Europe/Paris|Europe/Berlin",
			"Europe/Paris|Europe/Bratislava",
			"Europe/Paris|Europe/Brussels",
			"Europe/Paris|Europe/Budapest",
			"Europe/Paris|Europe/Busingen",
			"Europe/Paris|Europe/Copenhagen",
			"Europe/Paris|Europe/Gibraltar",
			"Europe/Paris|Europe/Ljubljana",
			"Europe/Paris|Europe/Luxembourg",
			"Europe/Paris|Europe/Madrid",
			"Europe/Paris|Europe/Malta",
			"Europe/Paris|Europe/Monaco",
			"Europe/Paris|Europe/Oslo",
			"Europe/Paris|Europe/Podgorica",
			"Europe/Paris|Europe/Prague",
			"Europe/Paris|Europe/Rome",
			"Europe/Paris|Europe/San_Marino",
			"Europe/Paris|Europe/Sarajevo",
			"Europe/Paris|Europe/Skopje",
			"Europe/Paris|Europe/Stockholm",
			"Europe/Paris|Europe/Tirane",
			"Europe/Paris|Europe/Vaduz",
			"Europe/Paris|Europe/Vatican",
			"Europe/Paris|Europe/Vienna",
			"Europe/Paris|Europe/Warsaw",
			"Europe/Paris|Europe/Zagreb",
			"Europe/Paris|Europe/Zurich",
			"Europe/Paris|Poland",
			"Europe/Ulyanovsk|Europe/Astrakhan",
			"Pacific/Auckland|Antarctica/McMurdo",
			"Pacific/Auckland|Antarctica/South_Pole",
			"Pacific/Auckland|NZ",
			"Pacific/Chatham|NZ-CHAT",
			"Pacific/Easter|Chile/EasterIsland",
			"Pacific/Fakaofo|Etc/GMT-13",
			"Pacific/Fakaofo|Pacific/Enderbury",
			"Pacific/Galapagos|Etc/GMT+6",
			"Pacific/Gambier|Etc/GMT+9",
			"Pacific/Guadalcanal|Antarctica/Macquarie",
			"Pacific/Guadalcanal|Etc/GMT-11",
			"Pacific/Guadalcanal|Pacific/Efate",
			"Pacific/Guadalcanal|Pacific/Kosrae",
			"Pacific/Guadalcanal|Pacific/Noumea",
			"Pacific/Guadalcanal|Pacific/Pohnpei",
			"Pacific/Guadalcanal|Pacific/Ponape",
			"Pacific/Guam|Pacific/Saipan",
			"Pacific/Honolulu|HST",
			"Pacific/Honolulu|Pacific/Johnston",
			"Pacific/Honolulu|US/Hawaii",
			"Pacific/Kiritimati|Etc/GMT-14",
			"Pacific/Niue|Etc/GMT+11",
			"Pacific/Pago_Pago|Pacific/Midway",
			"Pacific/Pago_Pago|Pacific/Samoa",
			"Pacific/Pago_Pago|US/Samoa",
			"Pacific/Pitcairn|Etc/GMT+8",
			"Pacific/Port_Moresby|Antarctica/DumontDUrville",
			"Pacific/Port_Moresby|Etc/GMT-10",
			"Pacific/Port_Moresby|Pacific/Chuuk",
			"Pacific/Port_Moresby|Pacific/Truk",
			"Pacific/Port_Moresby|Pacific/Yap",
			"Pacific/Tahiti|Etc/GMT+10",
			"Pacific/Tahiti|Pacific/Rarotonga"
		]
	});


	return moment;
}));
//! moment.js locale configuration

;(function (global, factory) {
   typeof exports === 'object' && typeof module !== 'undefined'
       && typeof require === 'function' ? factory(require('../moment')) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var vi = moment.defineLocale('vi', {
        months : 'thÃ¡ng 1_thÃ¡ng 2_thÃ¡ng 3_thÃ¡ng 4_thÃ¡ng 5_thÃ¡ng 6_thÃ¡ng 7_thÃ¡ng 8_thÃ¡ng 9_thÃ¡ng 10_thÃ¡ng 11_thÃ¡ng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chá»§ nháº­t_thá»© hai_thá»© ba_thá»© tÆ°_thá»© nÄm_thá»© sÃ¡u_thá»© báº£y'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [nÄm] YYYY',
            LLL : 'D MMMM [nÄm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [nÄm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[HÃ´m nay lÃºc] LT',
            nextDay: '[NgÃ y mai lÃºc] LT',
            nextWeek: 'dddd [tuáº§n tá»i lÃºc] LT',
            lastDay: '[HÃ´m qua lÃºc] LT',
            lastWeek: 'dddd [tuáº§n rá»i lÃºc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tá»i',
            past : '%s trÆ°á»c',
            s : 'vÃ i giÃ¢y',
            ss : '%d giÃ¢y' ,
            m : 'má»t phÃºt',
            mm : '%d phÃºt',
            h : 'má»t giá»',
            hh : '%d giá»',
            d : 'má»t ngÃ y',
            dd : '%d ngÃ y',
            M : 'má»t thÃ¡ng',
            MM : '%d thÃ¡ng',
            y : 'má»t nÄm',
            yy : '%d nÄm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return vi;

})));

// moment-timezone-localization for lang code: vi

;(function (global, factory) {
   typeof exports === 'object' && typeof module !== 'undefined'
       && typeof require === 'function' ? factory(require('../moment')) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


moment.tz.localizedNames = function() {
  return [{"value":"Africa/Abidjan","name":"Abidjan","id":"Africa/Abidjan"},{"value":"Africa/Accra","name":"Accra","id":"Africa/Accra"},{"value":"Africa/Addis_Ababa","name":"Addis Ababa","id":"Africa/Addis_Ababa"},{"value":"Africa/Algiers","name":"Algiers","id":"Africa/Algiers"},{"value":"Africa/Asmera","name":"Asmara","id":"Africa/Asmera"},{"value":"Africa/Bamako","name":"Bamako","id":"Africa/Bamako"},{"value":"Africa/Bangui","name":"Bangui","id":"Africa/Bangui"},{"value":"Africa/Banjul","name":"Banjul","id":"Africa/Banjul"},{"value":"Africa/Bissau","name":"Bissau","id":"Africa/Bissau"},{"value":"Africa/Blantyre","name":"Blantyre","id":"Africa/Blantyre"},{"value":"Africa/Brazzaville","name":"Brazzaville","id":"Africa/Brazzaville"},{"value":"Africa/Bujumbura","name":"Bujumbura","id":"Africa/Bujumbura"},{"value":"Africa/Cairo","name":"Cairo","id":"Africa/Cairo"},{"value":"Africa/Casablanca","name":"Casablanca","id":"Africa/Casablanca"},{"value":"Africa/Ceuta","name":"Ceuta","id":"Africa/Ceuta"},{"value":"Africa/Conakry","name":"Conakry","id":"Africa/Conakry"},{"value":"Africa/Dakar","name":"Dakar","id":"Africa/Dakar"},{"value":"Africa/Dar_es_Salaam","name":"Dar es Salaam","id":"Africa/Dar_es_Salaam"},{"value":"Africa/Djibouti","name":"Djibouti","id":"Africa/Djibouti"},{"value":"Africa/Douala","name":"Douala","id":"Africa/Douala"},{"value":"Africa/El_Aaiun","name":"El Aaiun","id":"Africa/El_Aaiun"},{"value":"Africa/Freetown","name":"Freetown","id":"Africa/Freetown"},{"value":"Africa/Gaborone","name":"Gaborone","id":"Africa/Gaborone"},{"value":"Africa/Harare","name":"Harare","id":"Africa/Harare"},{"value":"Africa/Johannesburg","name":"Johannesburg","id":"Africa/Johannesburg"},{"value":"Africa/Juba","name":"Juba","id":"Africa/Juba"},{"value":"Africa/Kampala","name":"Kampala","id":"Africa/Kampala"},{"value":"Africa/Khartoum","name":"Khartoum","id":"Africa/Khartoum"},{"value":"Africa/Kigali","name":"Kigali","id":"Africa/Kigali"},{"value":"Africa/Kinshasa","name":"Kinshasa","id":"Africa/Kinshasa"},{"value":"Africa/Lagos","name":"Lagos","id":"Africa/Lagos"},{"value":"Africa/Libreville","name":"Libreville","id":"Africa/Libreville"},{"value":"Africa/Lome","name":"Lome","id":"Africa/Lome"},{"value":"Africa/Luanda","name":"Luanda","id":"Africa/Luanda"},{"value":"Africa/Lubumbashi","name":"Lubumbashi","id":"Africa/Lubumbashi"},{"value":"Africa/Lusaka","name":"Lusaka","id":"Africa/Lusaka"},{"value":"Africa/Malabo","name":"Malabo","id":"Africa/Malabo"},{"value":"Africa/Maputo","name":"Maputo","id":"Africa/Maputo"},{"value":"Africa/Maseru","name":"Maseru","id":"Africa/Maseru"},{"value":"Africa/Mbabane","name":"Mbabane","id":"Africa/Mbabane"},{"value":"Africa/Mogadishu","name":"Mogadishu","id":"Africa/Mogadishu"},{"value":"Africa/Monrovia","name":"Monrovia","id":"Africa/Monrovia"},{"value":"Africa/Nairobi","name":"Nairobi","id":"Africa/Nairobi"},{"value":"Africa/Ndjamena","name":"Ndjamena","id":"Africa/Ndjamena"},{"value":"Africa/Niamey","name":"Niamey","id":"Africa/Niamey"},{"value":"Africa/Nouakchott","name":"Nouakchott","id":"Africa/Nouakchott"},{"value":"Africa/Ouagadougou","name":"Ouagadougou","id":"Africa/Ouagadougou"},{"value":"Africa/Porto-Novo","name":"Porto-Novo","id":"Africa/Porto-Novo"},{"value":"Africa/Sao_Tome","name":"SÃ£o TomÃ©","id":"Africa/Sao_Tome"},{"value":"Africa/Tripoli","name":"Tripoli","id":"Africa/Tripoli"},{"value":"Africa/Tunis","name":"Tunis","id":"Africa/Tunis"},{"value":"Africa/Windhoek","name":"Windhoek","id":"Africa/Windhoek"},{"value":"America/Adak","name":"Adak","id":"America/Adak"},{"value":"America/Anchorage","name":"Anchorage","id":"America/Anchorage"},{"value":"America/Anguilla","name":"Anguilla","id":"America/Anguilla"},{"value":"America/Antigua","name":"Antigua","id":"America/Antigua"},{"value":"America/Araguaina","name":"Araguaina","id":"America/Araguaina"},{"value":"America/Argentina/La_Rioja","name":"La Rioja","id":"America/Argentina/La_Rioja"},{"value":"America/Argentina/Rio_Gallegos","name":"Rio Gallegos","id":"America/Argentina/Rio_Gallegos"},{"value":"America/Argentina/Salta","name":"Salta","id":"America/Argentina/Salta"},{"value":"America/Argentina/San_Juan","name":"San Juan","id":"America/Argentina/San_Juan"},{"value":"America/Argentina/San_Luis","name":"San Luis","id":"America/Argentina/San_Luis"},{"value":"America/Argentina/Tucuman","name":"Tucuman","id":"America/Argentina/Tucuman"},{"value":"America/Argentina/Ushuaia","name":"Ushuaia","id":"America/Argentina/Ushuaia"},{"value":"America/Aruba","name":"Aruba","id":"America/Aruba"},{"value":"America/Asuncion","name":"AsunciÃ³n","id":"America/Asuncion"},{"value":"America/Bahia","name":"Bahia","id":"America/Bahia"},{"value":"America/Bahia_Banderas","name":"Bahia Banderas","id":"America/Bahia_Banderas"},{"value":"America/Barbados","name":"Barbados","id":"America/Barbados"},{"value":"America/Belem","name":"Belem","id":"America/Belem"},{"value":"America/Belize","name":"Belize","id":"America/Belize"},{"value":"America/Blanc-Sablon","name":"Blanc-Sablon","id":"America/Blanc-Sablon"},{"value":"America/Boa_Vista","name":"Boa Vista","id":"America/Boa_Vista"},{"value":"America/Bogota","name":"Bogota","id":"America/Bogota"},{"value":"America/Boise","name":"Boise","id":"America/Boise"},{"value":"America/Buenos_Aires","name":"Buenos Aires","id":"America/Buenos_Aires"},{"value":"America/Cambridge_Bay","name":"Cambridge Bay","id":"America/Cambridge_Bay"},{"value":"America/Campo_Grande","name":"Campo Grande","id":"America/Campo_Grande"},{"value":"America/Cancun","name":"Cancun","id":"America/Cancun"},{"value":"America/Caracas","name":"Caracas","id":"America/Caracas"},{"value":"America/Catamarca","name":"Catamarca","id":"America/Catamarca"},{"value":"America/Cayenne","name":"Cayenne","id":"America/Cayenne"},{"value":"America/Cayman","name":"Cayman","id":"America/Cayman"},{"value":"America/Chicago","name":"Chicago","id":"America/Chicago"},{"value":"America/Chihuahua","name":"Chihuahua","id":"America/Chihuahua"},{"value":"America/Coral_Harbour","name":"Atikokan","id":"America/Coral_Harbour"},{"value":"America/Cordoba","name":"Cordoba","id":"America/Cordoba"},{"value":"America/Costa_Rica","name":"Costa Rica","id":"America/Costa_Rica"},{"value":"America/Creston","name":"Creston","id":"America/Creston"},{"value":"America/Cuiaba","name":"Cuiaba","id":"America/Cuiaba"},{"value":"America/Curacao","name":"CuraÃ§ao","id":"America/Curacao"},{"value":"America/Danmarkshavn","name":"Danmarkshavn","id":"America/Danmarkshavn"},{"value":"America/Dawson","name":"Dawson","id":"America/Dawson"},{"value":"America/Dawson_Creek","name":"Dawson Creek","id":"America/Dawson_Creek"},{"value":"America/Denver","name":"Denver","id":"America/Denver"},{"value":"America/Detroit","name":"Detroit","id":"America/Detroit"},{"value":"America/Dominica","name":"Dominica","id":"America/Dominica"},{"value":"America/Edmonton","name":"Edmonton","id":"America/Edmonton"},{"value":"America/Eirunepe","name":"Eirunepe","id":"America/Eirunepe"},{"value":"America/El_Salvador","name":"El Salvador","id":"America/El_Salvador"},{"value":"America/Fort_Nelson","name":"Fort Nelson","id":"America/Fort_Nelson"},{"value":"America/Fortaleza","name":"Fortaleza","id":"America/Fortaleza"},{"value":"America/Glace_Bay","name":"Glace Bay","id":"America/Glace_Bay"},{"value":"America/Godthab","name":"Nuuk","id":"America/Godthab"},{"value":"America/Goose_Bay","name":"Goose Bay","id":"America/Goose_Bay"},{"value":"America/Grand_Turk","name":"Grand Turk","id":"America/Grand_Turk"},{"value":"America/Grenada","name":"Grenada","id":"America/Grenada"},{"value":"America/Guadeloupe","name":"Guadeloupe","id":"America/Guadeloupe"},{"value":"America/Guatemala","name":"Guatemala","id":"America/Guatemala"},{"value":"America/Guayaquil","name":"Guayaquil","id":"America/Guayaquil"},{"value":"America/Guyana","name":"Guyana","id":"America/Guyana"},{"value":"America/Halifax","name":"Halifax","id":"America/Halifax"},{"value":"America/Havana","name":"Havana","id":"America/Havana"},{"value":"America/Hermosillo","name":"Hermosillo","id":"America/Hermosillo"},{"value":"America/Indiana/Knox","name":"Knox, Indiana","id":"America/Indiana/Knox"},{"value":"America/Indiana/Marengo","name":"Marengo, Indiana","id":"America/Indiana/Marengo"},{"value":"America/Indiana/Petersburg","name":"Petersburg, Indiana","id":"America/Indiana/Petersburg"},{"value":"America/Indiana/Tell_City","name":"Tell City, Indiana","id":"America/Indiana/Tell_City"},{"value":"America/Indiana/Vevay","name":"Vevay, Indiana","id":"America/Indiana/Vevay"},{"value":"America/Indiana/Vincennes","name":"Vincennes, Indiana","id":"America/Indiana/Vincennes"},{"value":"America/Indiana/Winamac","name":"Winamac, Indiana","id":"America/Indiana/Winamac"},{"value":"America/Indianapolis","name":"Indianapolis","id":"America/Indianapolis"},{"value":"America/Inuvik","name":"Inuvik","id":"America/Inuvik"},{"value":"America/Iqaluit","name":"Iqaluit","id":"America/Iqaluit"},{"value":"America/Jamaica","name":"Jamaica","id":"America/Jamaica"},{"value":"America/Jujuy","name":"Jujuy","id":"America/Jujuy"},{"value":"America/Juneau","name":"Juneau","id":"America/Juneau"},{"value":"America/Kentucky/Monticello","name":"Monticello, Kentucky","id":"America/Kentucky/Monticello"},{"value":"America/Kralendijk","name":"Kralendijk","id":"America/Kralendijk"},{"value":"America/La_Paz","name":"La Paz","id":"America/La_Paz"},{"value":"America/Lima","name":"Lima","id":"America/Lima"},{"value":"America/Los_Angeles","name":"Los Angeles","id":"America/Los_Angeles"},{"value":"America/Louisville","name":"Louisville","id":"America/Louisville"},{"value":"America/Lower_Princes","name":"Lower Princeâs Quarter","id":"America/Lower_Princes"},{"value":"America/Maceio","name":"Maceio","id":"America/Maceio"},{"value":"America/Managua","name":"Managua","id":"America/Managua"},{"value":"America/Manaus","name":"Manaus","id":"America/Manaus"},{"value":"America/Marigot","name":"Marigot","id":"America/Marigot"},{"value":"America/Martinique","name":"Martinique","id":"America/Martinique"},{"value":"America/Matamoros","name":"Matamoros","id":"America/Matamoros"},{"value":"America/Mazatlan","name":"Mazatlan","id":"America/Mazatlan"},{"value":"America/Mendoza","name":"Mendoza","id":"America/Mendoza"},{"value":"America/Menominee","name":"Menominee","id":"America/Menominee"},{"value":"America/Merida","name":"Merida","id":"America/Merida"},{"value":"America/Metlakatla","name":"Metlakatla","id":"America/Metlakatla"},{"value":"America/Mexico_City","name":"Mexico City","id":"America/Mexico_City"},{"value":"America/Miquelon","name":"Miquelon","id":"America/Miquelon"},{"value":"America/Moncton","name":"Moncton","id":"America/Moncton"},{"value":"America/Monterrey","name":"Monterrey","id":"America/Monterrey"},{"value":"America/Montevideo","name":"Montevideo","id":"America/Montevideo"},{"value":"America/Montserrat","name":"Montserrat","id":"America/Montserrat"},{"value":"America/Nassau","name":"Nassau","id":"America/Nassau"},{"value":"America/New_York","name":"New York","id":"America/New_York"},{"value":"America/Nipigon","name":"Nipigon","id":"America/Nipigon"},{"value":"America/Nome","name":"Nome","id":"America/Nome"},{"value":"America/Noronha","name":"Noronha","id":"America/Noronha"},{"value":"America/North_Dakota/Beulah","name":"Beulah, Báº¯c Dakota","id":"America/North_Dakota/Beulah"},{"value":"America/North_Dakota/Center","name":"Center, Báº¯c Dakota","id":"America/North_Dakota/Center"},{"value":"America/North_Dakota/New_Salem","name":"New Salem, Báº¯c Dakota","id":"America/North_Dakota/New_Salem"},{"value":"America/Ojinaga","name":"Ojinaga","id":"America/Ojinaga"},{"value":"America/Panama","name":"Panama","id":"America/Panama"},{"value":"America/Pangnirtung","name":"Pangnirtung","id":"America/Pangnirtung"},{"value":"America/Paramaribo","name":"Paramaribo","id":"America/Paramaribo"},{"value":"America/Phoenix","name":"Phoenix","id":"America/Phoenix"},{"value":"America/Port-au-Prince","name":"Port-au-Prince","id":"America/Port-au-Prince"},{"value":"America/Port_of_Spain","name":"Port of Spain","id":"America/Port_of_Spain"},{"value":"America/Porto_Velho","name":"Porto Velho","id":"America/Porto_Velho"},{"value":"America/Puerto_Rico","name":"Puerto Rico","id":"America/Puerto_Rico"},{"value":"America/Punta_Arenas","name":"Punta Arenas","id":"America/Punta_Arenas"},{"value":"America/Rainy_River","name":"Rainy River","id":"America/Rainy_River"},{"value":"America/Rankin_Inlet","name":"Rankin Inlet","id":"America/Rankin_Inlet"},{"value":"America/Recife","name":"Recife","id":"America/Recife"},{"value":"America/Regina","name":"Regina","id":"America/Regina"},{"value":"America/Resolute","name":"Resolute","id":"America/Resolute"},{"value":"America/Rio_Branco","name":"Rio Branco","id":"America/Rio_Branco"},{"value":"America/Santa_Isabel","name":"Santa Isabel","id":"America/Santa_Isabel"},{"value":"America/Santarem","name":"Santarem","id":"America/Santarem"},{"value":"America/Santiago","name":"Santiago","id":"America/Santiago"},{"value":"America/Santo_Domingo","name":"Santo Domingo","id":"America/Santo_Domingo"},{"value":"America/Sao_Paulo","name":"Sao Paulo","id":"America/Sao_Paulo"},{"value":"America/Scoresbysund","name":"Ittoqqortoormiit","id":"America/Scoresbysund"},{"value":"America/Sitka","name":"Sitka","id":"America/Sitka"},{"value":"America/St_Barthelemy","name":"St. BarthÃ©lemy","id":"America/St_Barthelemy"},{"value":"America/St_Johns","name":"St. Johnâs","id":"America/St_Johns"},{"value":"America/St_Kitts","name":"St. Kitts","id":"America/St_Kitts"},{"value":"America/St_Lucia","name":"St. Lucia","id":"America/St_Lucia"},{"value":"America/St_Thomas","name":"St. Thomas","id":"America/St_Thomas"},{"value":"America/St_Vincent","name":"St. Vincent","id":"America/St_Vincent"},{"value":"America/Swift_Current","name":"Swift Current","id":"America/Swift_Current"},{"value":"America/Tegucigalpa","name":"Tegucigalpa","id":"America/Tegucigalpa"},{"value":"America/Thule","name":"Thule","id":"America/Thule"},{"value":"America/Thunder_Bay","name":"Thunder Bay","id":"America/Thunder_Bay"},{"value":"America/Tijuana","name":"Tijuana","id":"America/Tijuana"},{"value":"America/Toronto","name":"Toronto","id":"America/Toronto"},{"value":"America/Tortola","name":"Tortola","id":"America/Tortola"},{"value":"America/Vancouver","name":"Vancouver","id":"America/Vancouver"},{"value":"America/Whitehorse","name":"Whitehorse","id":"America/Whitehorse"},{"value":"America/Winnipeg","name":"Winnipeg","id":"America/Winnipeg"},{"value":"America/Yakutat","name":"Yakutat","id":"America/Yakutat"},{"value":"America/Yellowknife","name":"Yellowknife","id":"America/Yellowknife"},{"value":"Antarctica/Casey","name":"Casey","id":"Antarctica/Casey"},{"value":"Antarctica/Davis","name":"Davis","id":"Antarctica/Davis"},{"value":"Antarctica/DumontDUrville","name":"Dumont dâUrville","id":"Antarctica/DumontDUrville"},{"value":"Antarctica/Macquarie","name":"Macquarie","id":"Antarctica/Macquarie"},{"value":"Antarctica/Mawson","name":"Mawson","id":"Antarctica/Mawson"},{"value":"Antarctica/McMurdo","name":"McMurdo","id":"Antarctica/McMurdo"},{"value":"Antarctica/Palmer","name":"Palmer","id":"Antarctica/Palmer"},{"value":"Antarctica/Rothera","name":"Rothera","id":"Antarctica/Rothera"},{"value":"Antarctica/Syowa","name":"Syowa","id":"Antarctica/Syowa"},{"value":"Antarctica/Troll","name":"Troll","id":"Antarctica/Troll"},{"value":"Antarctica/Vostok","name":"Vostok","id":"Antarctica/Vostok"},{"value":"Arctic/Longyearbyen","name":"Longyearbyen","id":"Arctic/Longyearbyen"},{"value":"Asia/Aden","name":"Aden","id":"Asia/Aden"},{"value":"Asia/Almaty","name":"Almaty","id":"Asia/Almaty"},{"value":"Asia/Amman","name":"Amman","id":"Asia/Amman"},{"value":"Asia/Anadyr","name":"Anadyr","id":"Asia/Anadyr"},{"value":"Asia/Aqtau","name":"Aqtau","id":"Asia/Aqtau"},{"value":"Asia/Aqtobe","name":"Aqtobe","id":"Asia/Aqtobe"},{"value":"Asia/Ashgabat","name":"Ashgabat","id":"Asia/Ashgabat"},{"value":"Asia/Atyrau","name":"Atyrau","id":"Asia/Atyrau"},{"value":"Asia/Baghdad","name":"Baghdad","id":"Asia/Baghdad"},{"value":"Asia/Bahrain","name":"Bahrain","id":"Asia/Bahrain"},{"value":"Asia/Baku","name":"Baku","id":"Asia/Baku"},{"value":"Asia/Bangkok","name":"Bangkok","id":"Asia/Bangkok"},{"value":"Asia/Barnaul","name":"Barnaul","id":"Asia/Barnaul"},{"value":"Asia/Beirut","name":"Beirut","id":"Asia/Beirut"},{"value":"Asia/Bishkek","name":"Bishkek","id":"Asia/Bishkek"},{"value":"Asia/Brunei","name":"Brunei","id":"Asia/Brunei"},{"value":"Asia/Calcutta","name":"Kolkata","id":"Asia/Calcutta"},{"value":"Asia/Chita","name":"Chita","id":"Asia/Chita"},{"value":"Asia/Choibalsan","name":"Choibalsan","id":"Asia/Choibalsan"},{"value":"Asia/Colombo","name":"Colombo","id":"Asia/Colombo"},{"value":"Asia/Damascus","name":"Damascus","id":"Asia/Damascus"},{"value":"Asia/Dhaka","name":"Dhaka","id":"Asia/Dhaka"},{"value":"Asia/Dili","name":"Dili","id":"Asia/Dili"},{"value":"Asia/Dubai","name":"Dubai","id":"Asia/Dubai"},{"value":"Asia/Dushanbe","name":"Dushanbe","id":"Asia/Dushanbe"},{"value":"Asia/Famagusta","name":"Famagusta","id":"Asia/Famagusta"},{"value":"Asia/Gaza","name":"Gaza","id":"Asia/Gaza"},{"value":"Asia/Hebron","name":"Hebron","id":"Asia/Hebron"},{"value":"Asia/Hong_Kong","name":"Há»ng KÃ´ng","id":"Asia/Hong_Kong"},{"value":"Asia/Hovd","name":"Hovd","id":"Asia/Hovd"},{"value":"Asia/Irkutsk","name":"Irkutsk","id":"Asia/Irkutsk"},{"value":"Asia/Jakarta","name":"Jakarta","id":"Asia/Jakarta"},{"value":"Asia/Jayapura","name":"Jayapura","id":"Asia/Jayapura"},{"value":"Asia/Jerusalem","name":"Jerusalem","id":"Asia/Jerusalem"},{"value":"Asia/Kabul","name":"Kabul","id":"Asia/Kabul"},{"value":"Asia/Kamchatka","name":"Kamchatka","id":"Asia/Kamchatka"},{"value":"Asia/Karachi","name":"Karachi","id":"Asia/Karachi"},{"value":"Asia/Katmandu","name":"Kathmandu","id":"Asia/Katmandu"},{"value":"Asia/Khandyga","name":"Khandyga","id":"Asia/Khandyga"},{"value":"Asia/Krasnoyarsk","name":"Krasnoyarsk","id":"Asia/Krasnoyarsk"},{"value":"Asia/Kuala_Lumpur","name":"Kuala Lumpur","id":"Asia/Kuala_Lumpur"},{"value":"Asia/Kuching","name":"Kuching","id":"Asia/Kuching"},{"value":"Asia/Kuwait","name":"Kuwait","id":"Asia/Kuwait"},{"value":"Asia/Macau","name":"Ma Cao","id":"Asia/Macau"},{"value":"Asia/Magadan","name":"Magadan","id":"Asia/Magadan"},{"value":"Asia/Makassar","name":"Makassar","id":"Asia/Makassar"},{"value":"Asia/Manila","name":"Manila","id":"Asia/Manila"},{"value":"Asia/Muscat","name":"Muscat","id":"Asia/Muscat"},{"value":"Asia/Nicosia","name":"Nicosia","id":"Asia/Nicosia"},{"value":"Asia/Novokuznetsk","name":"Novokuznetsk","id":"Asia/Novokuznetsk"},{"value":"Asia/Novosibirsk","name":"Novosibirsk","id":"Asia/Novosibirsk"},{"value":"Asia/Omsk","name":"Omsk","id":"Asia/Omsk"},{"value":"Asia/Oral","name":"Oral","id":"Asia/Oral"},{"value":"Asia/Phnom_Penh","name":"Phnom Penh","id":"Asia/Phnom_Penh"},{"value":"Asia/Pontianak","name":"Pontianak","id":"Asia/Pontianak"},{"value":"Asia/Pyongyang","name":"BÃ¬nh NhÆ°á»¡ng","id":"Asia/Pyongyang"},{"value":"Asia/Qatar","name":"Qatar","id":"Asia/Qatar"},{"value":"Asia/Qyzylorda","name":"Qyzylorda","id":"Asia/Qyzylorda"},{"value":"Asia/Rangoon","name":"Rangoon","id":"Asia/Rangoon"},{"value":"Asia/Riyadh","name":"Riyadh","id":"Asia/Riyadh"},{"value":"Asia/Saigon","name":"TP Há» ChÃ­ Minh","id":"Asia/Saigon"},{"value":"Asia/Sakhalin","name":"Sakhalin","id":"Asia/Sakhalin"},{"value":"Asia/Samarkand","name":"Samarkand","id":"Asia/Samarkand"},{"value":"Asia/Seoul","name":"Seoul","id":"Asia/Seoul"},{"value":"Asia/Shanghai","name":"ThÆ°á»£ng Háº£i","id":"Asia/Shanghai"},{"value":"Asia/Singapore","name":"Singapore","id":"Asia/Singapore"},{"value":"Asia/Srednekolymsk","name":"Srednekolymsk","id":"Asia/Srednekolymsk"},{"value":"Asia/Taipei","name":"ÄÃ i Báº¯c","id":"Asia/Taipei"},{"value":"Asia/Tashkent","name":"Tashkent","id":"Asia/Tashkent"},{"value":"Asia/Tbilisi","name":"Tbilisi","id":"Asia/Tbilisi"},{"value":"Asia/Tehran","name":"Tehran","id":"Asia/Tehran"},{"value":"Asia/Thimphu","name":"Thimphu","id":"Asia/Thimphu"},{"value":"Asia/Tokyo","name":"Tokyo","id":"Asia/Tokyo"},{"value":"Asia/Tomsk","name":"Tomsk","id":"Asia/Tomsk"},{"value":"Asia/Ulaanbaatar","name":"Ulaanbaatar","id":"Asia/Ulaanbaatar"},{"value":"Asia/Urumqi","name":"Urumqi","id":"Asia/Urumqi"},{"value":"Asia/Ust-Nera","name":"Ust-Nera","id":"Asia/Ust-Nera"},{"value":"Asia/Vientiane","name":"ViÃªng ChÄn","id":"Asia/Vientiane"},{"value":"Asia/Vladivostok","name":"Vladivostok","id":"Asia/Vladivostok"},{"value":"Asia/Yakutsk","name":"Yakutsk","id":"Asia/Yakutsk"},{"value":"Asia/Yekaterinburg","name":"Yekaterinburg","id":"Asia/Yekaterinburg"},{"value":"Asia/Yerevan","name":"Yerevan","id":"Asia/Yerevan"},{"value":"Atlantic/Azores","name":"Azores","id":"Atlantic/Azores"},{"value":"Atlantic/Bermuda","name":"Bermuda","id":"Atlantic/Bermuda"},{"value":"Atlantic/Canary","name":"Canary","id":"Atlantic/Canary"},{"value":"Atlantic/Cape_Verde","name":"Cape Verde","id":"Atlantic/Cape_Verde"},{"value":"Atlantic/Faeroe","name":"Faroe","id":"Atlantic/Faeroe"},{"value":"Atlantic/Madeira","name":"Madeira","id":"Atlantic/Madeira"},{"value":"Atlantic/Reykjavik","name":"Reykjavik","id":"Atlantic/Reykjavik"},{"value":"Atlantic/South_Georgia","name":"Nam Georgia","id":"Atlantic/South_Georgia"},{"value":"Atlantic/St_Helena","name":"St. Helena","id":"Atlantic/St_Helena"},{"value":"Atlantic/Stanley","name":"Stanley","id":"Atlantic/Stanley"},{"value":"Australia/Adelaide","name":"Adelaide","id":"Australia/Adelaide"},{"value":"Australia/Brisbane","name":"Brisbane","id":"Australia/Brisbane"},{"value":"Australia/Broken_Hill","name":"Broken Hill","id":"Australia/Broken_Hill"},{"value":"Australia/Currie","name":"Currie","id":"Australia/Currie"},{"value":"Australia/Darwin","name":"Darwin","id":"Australia/Darwin"},{"value":"Australia/Eucla","name":"Eucla","id":"Australia/Eucla"},{"value":"Australia/Hobart","name":"Hobart","id":"Australia/Hobart"},{"value":"Australia/Lindeman","name":"Lindeman","id":"Australia/Lindeman"},{"value":"Australia/Lord_Howe","name":"Lord Howe","id":"Australia/Lord_Howe"},{"value":"Australia/Melbourne","name":"Melbourne","id":"Australia/Melbourne"},{"value":"Australia/Perth","name":"Perth","id":"Australia/Perth"},{"value":"Australia/Sydney","name":"Sydney","id":"Australia/Sydney"},{"value":"Etc/UTC","name":"Giá» Phá»i há»£p Quá»c táº¿UTC","id":"Etc/UTC"},{"value":"Europe/Amsterdam","name":"Amsterdam","id":"Europe/Amsterdam"},{"value":"Europe/Andorra","name":"Andorra","id":"Europe/Andorra"},{"value":"Europe/Astrakhan","name":"Astrakhan","id":"Europe/Astrakhan"},{"value":"Europe/Athens","name":"Athens","id":"Europe/Athens"},{"value":"Europe/Belgrade","name":"Belgrade","id":"Europe/Belgrade"},{"value":"Europe/Berlin","name":"Berlin","id":"Europe/Berlin"},{"value":"Europe/Bratislava","name":"Bratislava","id":"Europe/Bratislava"},{"value":"Europe/Brussels","name":"Brussels","id":"Europe/Brussels"},{"value":"Europe/Bucharest","name":"Bucharest","id":"Europe/Bucharest"},{"value":"Europe/Budapest","name":"Budapest","id":"Europe/Budapest"},{"value":"Europe/Busingen","name":"Busingen","id":"Europe/Busingen"},{"value":"Europe/Chisinau","name":"Chisinau","id":"Europe/Chisinau"},{"value":"Europe/Copenhagen","name":"Copenhagen","id":"Europe/Copenhagen"},{"value":"Europe/Dublin","name":"Giá» chuáº©n Ai-lenDublin","id":"Europe/Dublin"},{"value":"Europe/Gibraltar","name":"Gibraltar","id":"Europe/Gibraltar"},{"value":"Europe/Guernsey","name":"Guernsey","id":"Europe/Guernsey"},{"value":"Europe/Helsinki","name":"Helsinki","id":"Europe/Helsinki"},{"value":"Europe/Isle_of_Man","name":"Äáº£o Man","id":"Europe/Isle_of_Man"},{"value":"Europe/Istanbul","name":"Istanbul","id":"Europe/Istanbul"},{"value":"Europe/Jersey","name":"Jersey","id":"Europe/Jersey"},{"value":"Europe/Kaliningrad","name":"Kaliningrad","id":"Europe/Kaliningrad"},{"value":"Europe/Kiev","name":"Kiev","id":"Europe/Kiev"},{"value":"Europe/Kirov","name":"Kirov","id":"Europe/Kirov"},{"value":"Europe/Lisbon","name":"Lisbon","id":"Europe/Lisbon"},{"value":"Europe/Ljubljana","name":"Ljubljana","id":"Europe/Ljubljana"},{"value":"Europe/London","name":"Giá» MÃ¹a HÃ¨ AnhLondon","id":"Europe/London"},{"value":"Europe/Luxembourg","name":"Luxembourg","id":"Europe/Luxembourg"},{"value":"Europe/Madrid","name":"Madrid","id":"Europe/Madrid"},{"value":"Europe/Malta","name":"Malta","id":"Europe/Malta"},{"value":"Europe/Mariehamn","name":"Mariehamn","id":"Europe/Mariehamn"},{"value":"Europe/Minsk","name":"Minsk","id":"Europe/Minsk"},{"value":"Europe/Monaco","name":"Monaco","id":"Europe/Monaco"},{"value":"Europe/Moscow","name":"MÃ¡t-xcÆ¡-va","id":"Europe/Moscow"},{"value":"Europe/Oslo","name":"Oslo","id":"Europe/Oslo"},{"value":"Europe/Paris","name":"Paris","id":"Europe/Paris"},{"value":"Europe/Podgorica","name":"Podgorica","id":"Europe/Podgorica"},{"value":"Europe/Prague","name":"Praha","id":"Europe/Prague"},{"value":"Europe/Riga","name":"Riga","id":"Europe/Riga"},{"value":"Europe/Rome","name":"Rome","id":"Europe/Rome"},{"value":"Europe/Samara","name":"Samara","id":"Europe/Samara"},{"value":"Europe/San_Marino","name":"San Marino","id":"Europe/San_Marino"},{"value":"Europe/Sarajevo","name":"Sarajevo","id":"Europe/Sarajevo"},{"value":"Europe/Saratov","name":"Saratov","id":"Europe/Saratov"},{"value":"Europe/Simferopol","name":"Simferopol","id":"Europe/Simferopol"},{"value":"Europe/Skopje","name":"Skopje","id":"Europe/Skopje"},{"value":"Europe/Sofia","name":"Sofia","id":"Europe/Sofia"},{"value":"Europe/Stockholm","name":"Stockholm","id":"Europe/Stockholm"},{"value":"Europe/Tallinn","name":"Tallinn","id":"Europe/Tallinn"},{"value":"Europe/Tirane","name":"Tirane","id":"Europe/Tirane"},{"value":"Europe/Ulyanovsk","name":"Ulyanovsk","id":"Europe/Ulyanovsk"},{"value":"Europe/Uzhgorod","name":"Uzhhorod","id":"Europe/Uzhgorod"},{"value":"Europe/Vaduz","name":"Vaduz","id":"Europe/Vaduz"},{"value":"Europe/Vatican","name":"Vatican","id":"Europe/Vatican"},{"value":"Europe/Vienna","name":"Vienna","id":"Europe/Vienna"},{"value":"Europe/Vilnius","name":"Vilnius","id":"Europe/Vilnius"},{"value":"Europe/Volgograd","name":"Volgograd","id":"Europe/Volgograd"},{"value":"Europe/Warsaw","name":"Warsaw","id":"Europe/Warsaw"},{"value":"Europe/Zagreb","name":"Zagreb","id":"Europe/Zagreb"},{"value":"Europe/Zaporozhye","name":"Zaporozhye","id":"Europe/Zaporozhye"},{"value":"Europe/Zurich","name":"Zurich","id":"Europe/Zurich"},{"value":"Indian/Antananarivo","name":"Antananarivo","id":"Indian/Antananarivo"},{"value":"Indian/Chagos","name":"Chagos","id":"Indian/Chagos"},{"value":"Indian/Christmas","name":"Christmas","id":"Indian/Christmas"},{"value":"Indian/Cocos","name":"Cocos","id":"Indian/Cocos"},{"value":"Indian/Comoro","name":"Comoro","id":"Indian/Comoro"},{"value":"Indian/Kerguelen","name":"Kerguelen","id":"Indian/Kerguelen"},{"value":"Indian/Mahe","name":"Mahe","id":"Indian/Mahe"},{"value":"Indian/Maldives","name":"Maldives","id":"Indian/Maldives"},{"value":"Indian/Mauritius","name":"Mauritius","id":"Indian/Mauritius"},{"value":"Indian/Mayotte","name":"Mayotte","id":"Indian/Mayotte"},{"value":"Indian/Reunion","name":"RÃ©union","id":"Indian/Reunion"},{"value":"Pacific/Apia","name":"Apia","id":"Pacific/Apia"},{"value":"Pacific/Auckland","name":"Auckland","id":"Pacific/Auckland"},{"value":"Pacific/Bougainville","name":"Bougainville","id":"Pacific/Bougainville"},{"value":"Pacific/Chatham","name":"Chatham","id":"Pacific/Chatham"},{"value":"Pacific/Easter","name":"Easter","id":"Pacific/Easter"},{"value":"Pacific/Efate","name":"Efate","id":"Pacific/Efate"},{"value":"Pacific/Enderbury","name":"Enderbury","id":"Pacific/Enderbury"},{"value":"Pacific/Fakaofo","name":"Fakaofo","id":"Pacific/Fakaofo"},{"value":"Pacific/Fiji","name":"Fiji","id":"Pacific/Fiji"},{"value":"Pacific/Funafuti","name":"Funafuti","id":"Pacific/Funafuti"},{"value":"Pacific/Galapagos","name":"Galapagos","id":"Pacific/Galapagos"},{"value":"Pacific/Gambier","name":"Gambier","id":"Pacific/Gambier"},{"value":"Pacific/Guadalcanal","name":"Guadalcanal","id":"Pacific/Guadalcanal"},{"value":"Pacific/Guam","name":"Guam","id":"Pacific/Guam"},{"value":"Pacific/Honolulu","name":"Giá» HSTHSTHDTHonolulu","id":"Pacific/Honolulu"},{"value":"Pacific/Johnston","name":"Johnston","id":"Pacific/Johnston"},{"value":"Pacific/Kiritimati","name":"Kiritimati","id":"Pacific/Kiritimati"},{"value":"Pacific/Kosrae","name":"Kosrae","id":"Pacific/Kosrae"},{"value":"Pacific/Kwajalein","name":"Kwajalein","id":"Pacific/Kwajalein"},{"value":"Pacific/Majuro","name":"Majuro","id":"Pacific/Majuro"},{"value":"Pacific/Marquesas","name":"Marquesas","id":"Pacific/Marquesas"},{"value":"Pacific/Midway","name":"Midway","id":"Pacific/Midway"},{"value":"Pacific/Nauru","name":"Nauru","id":"Pacific/Nauru"},{"value":"Pacific/Niue","name":"Niue","id":"Pacific/Niue"},{"value":"Pacific/Norfolk","name":"Norfolk","id":"Pacific/Norfolk"},{"value":"Pacific/Noumea","name":"Noumea","id":"Pacific/Noumea"},{"value":"Pacific/Pago_Pago","name":"Pago Pago","id":"Pacific/Pago_Pago"},{"value":"Pacific/Palau","name":"Palau","id":"Pacific/Palau"},{"value":"Pacific/Pitcairn","name":"Pitcairn","id":"Pacific/Pitcairn"},{"value":"Pacific/Ponape","name":"Pohnpei","id":"Pacific/Ponape"},{"value":"Pacific/Port_Moresby","name":"Port Moresby","id":"Pacific/Port_Moresby"},{"value":"Pacific/Rarotonga","name":"Rarotonga","id":"Pacific/Rarotonga"},{"value":"Pacific/Saipan","name":"Saipan","id":"Pacific/Saipan"},{"value":"Pacific/Tahiti","name":"Tahiti","id":"Pacific/Tahiti"},{"value":"Pacific/Tarawa","name":"Tarawa","id":"Pacific/Tarawa"},{"value":"Pacific/Tongatapu","name":"Tongatapu","id":"Pacific/Tongatapu"},{"value":"Pacific/Truk","name":"Chuuk","id":"Pacific/Truk"},{"value":"Pacific/Wake","name":"Wake","id":"Pacific/Wake"},{"value":"Pacific/Wallis","name":"Wallis","id":"Pacific/Wallis"}];
};

return moment;
})));

moment.fn.shortDateNoYear = function(){ return this.format('D MMM'); };
moment.fn.shortDate = function(){ return this.format('D MMM YYYY'); };
moment.fn.longDate = function(){ return this.format('D MMMM YYYY LT'); };
moment.fn.relativeAge = function(opts){ return Discourse.Formatter.relativeAge(this.toDate(), opts)};
